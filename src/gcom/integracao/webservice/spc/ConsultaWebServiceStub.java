package gcom.integracao.webservice.spc;

/*
 *  ConsultaWebServiceStub java implementation
 */

public class ConsultaWebServiceStub extends org.apache.axis2.client.Stub {
	protected org.apache.axis2.description.AxisOperation[] _operations;

	// hashmaps to keep the fault mapping
	private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
	private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
	private java.util.HashMap faultMessageMap = new java.util.HashMap();

	private static int counter = 0;

	private static synchronized java.lang.String getUniqueSuffix() {
		// reset the counter if it is greater than 99999
		if (counter > 99999) {
			counter = 0;
		}
		counter = counter + 1;
		return java.lang.Long.toString(System.currentTimeMillis()) + "_"
				+ counter;
	}

	private void populateAxisService() throws org.apache.axis2.AxisFault {

		// creating the Service with a unique name
		_service = new org.apache.axis2.description.AxisService(
				"ConsultaWebService" + getUniqueSuffix());
		addAnonymousOperations();

		// creating the operations
		org.apache.axis2.description.AxisOperation __operation;

		_operations = new org.apache.axis2.description.AxisOperation[3];

		__operation = new org.apache.axis2.description.OutInAxisOperation();

		__operation.setName(new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"detalharProduto"));
		_service.addOperation(__operation);

		_operations[0] = __operation;

		__operation = new org.apache.axis2.description.OutInAxisOperation();

		__operation.setName(new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"consultar"));
		_service.addOperation(__operation);

		_operations[1] = __operation;

		__operation = new org.apache.axis2.description.OutInAxisOperation();

		__operation.setName(new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"listarProdutos"));
		_service.addOperation(__operation);

		_operations[2] = __operation;

	}

	// populates the faults
	private void populateFaults() {

	}

	/**
	 * Constructor that takes in a configContext
	 */

	public ConsultaWebServiceStub(
			org.apache.axis2.context.ConfigurationContext configurationContext,
			java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
		this(configurationContext, targetEndpoint, false);
	}

	/**
	 * Constructor that takes in a configContext and useseperate listner
	 */
	public ConsultaWebServiceStub(
			org.apache.axis2.context.ConfigurationContext configurationContext,
			java.lang.String targetEndpoint, boolean useSeparateListener)
			throws org.apache.axis2.AxisFault {
		// To populate AxisService
		populateAxisService();
		populateFaults();

		_serviceClient = new org.apache.axis2.client.ServiceClient(
				configurationContext, _service);

		_serviceClient.getOptions().setTo(
				new org.apache.axis2.addressing.EndpointReference(
						targetEndpoint));
		_serviceClient.getOptions().setUseSeparateListener(useSeparateListener);

	}

	/**
	 * Default Constructor
	 */
	public ConsultaWebServiceStub(
			org.apache.axis2.context.ConfigurationContext configurationContext)
			throws org.apache.axis2.AxisFault {

		this(configurationContext,
				"https://servicos.spc.org.br:443/spcjava/remoting/ws/consulta/consultaWebService");

	}

	/**
	 * Default Constructor
	 */
	public ConsultaWebServiceStub() throws org.apache.axis2.AxisFault {

		this(
				"https://servicos.spc.org.br:443/spcjava/remoting/ws/consulta/consultaWebService");

	}

	/**
	 * Constructor taking the target endpoint
	 */
	public ConsultaWebServiceStub(java.lang.String targetEndpoint)
			throws org.apache.axis2.AxisFault {
		this(null, targetEndpoint);
	}

	/**
	 * Auto generated method signature
	 * 
	 * @see ConsultaWebService#detalharProduto
	 * @param codigoProduto1
	 */

	public ConsultaWebServiceStub.ProdutoE detalharProduto(

			ConsultaWebServiceStub.CodigoProduto codigoProduto1)

	throws java.rmi.RemoteException

	{
		org.apache.axis2.context.MessageContext _messageContext = null;
		try {
			org.apache.axis2.client.OperationClient _operationClient = _serviceClient
					.createClient(_operations[0].getName());
			_operationClient
					.getOptions()
					.setAction(
							"http://webservice.consulta.spcjava.spcbrasil.org/consultaWebService/detalharProdutoRequest");
			_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(
					true);

			addPropertyToOperationClient(
					_operationClient,
					org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
					"&");

			// create a message context
			_messageContext = new org.apache.axis2.context.MessageContext();

			// create SOAP envelope with that payload
			org.apache.axiom.soap.SOAPEnvelope env = null;

			env = toEnvelope(
					getFactory(_operationClient.getOptions()
							.getSoapVersionURI()),
					codigoProduto1,
					optimizeContent(new javax.xml.namespace.QName(
							"http://webservice.consulta.spcjava.spcbrasil.org/",
							"detalharProduto")));

			// adding SOAP soap_headers
			_serviceClient.addHeadersToEnvelope(env);
			// set the message context with that soap envelope
			_messageContext.setEnvelope(env);
			//System.out.println(env.toString());

			// add the message contxt to the operation client
			_operationClient.addMessageContext(_messageContext);

			// execute the operation client
			_operationClient.execute(true);

			org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient
					.getMessageContext(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
			org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext
					.getEnvelope();

			java.lang.Object object = fromOM(
					_returnEnv.getBody().getFirstElement(),
					ConsultaWebServiceStub.ProdutoE.class,
					getEnvelopeNamespaces(_returnEnv));

			return (ConsultaWebServiceStub.ProdutoE) object;

		} catch (org.apache.axis2.AxisFault f) {

			org.apache.axiom.om.OMElement faultElt = f.getDetail();
			if (faultElt != null) {
				if (faultExceptionNameMap.containsKey(faultElt.getQName())) {
					// make the fault by reflection
					try {
						java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
								.get(faultElt.getQName());
						java.lang.Class exceptionClass = java.lang.Class
								.forName(exceptionClassName);
						java.lang.Exception ex = (java.lang.Exception) exceptionClass
								.newInstance();
						// message class
						java.lang.String messageClassName = (java.lang.String) faultMessageMap
								.get(faultElt.getQName());
						java.lang.Class messageClass = java.lang.Class
								.forName(messageClassName);
						java.lang.Object messageObject = fromOM(faultElt,
								messageClass, null);
						java.lang.reflect.Method m = exceptionClass.getMethod(
								"setFaultMessage",
								new java.lang.Class[] { messageClass });
						m.invoke(ex, new java.lang.Object[] { messageObject });

						throw new java.rmi.RemoteException(ex.getMessage(), ex);
					} catch (java.lang.ClassCastException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.ClassNotFoundException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.NoSuchMethodException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.reflect.InvocationTargetException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.IllegalAccessException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.InstantiationException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					}
				} else {
					throw f;
				}
			} else {
				throw f;
			}
		} finally {
			_messageContext.getTransportOut().getSender()
					.cleanup(_messageContext);
		}
	}

	/**
	 * Auto generated method signature for Asynchronous Invocations
	 * 
	 * @see ConsultaWebService#startdetalharProduto
	 * @param codigoProduto1
	 */
	public void startdetalharProduto(

			ConsultaWebServiceStub.CodigoProduto codigoProduto1,

			final ConsultaWebServiceCallbackHandler callback)

	throws java.rmi.RemoteException {

		org.apache.axis2.client.OperationClient _operationClient = _serviceClient
				.createClient(_operations[0].getName());
		_operationClient
				.getOptions()
				.setAction(
						"http://webservice.consulta.spcjava.spcbrasil.org/consultaWebService/detalharProdutoRequest");
		_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

		addPropertyToOperationClient(
				_operationClient,
				org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
				"&");

		// create SOAP envelope with that payload
		org.apache.axiom.soap.SOAPEnvelope env = null;
		final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

		// Style is Doc.

		env = toEnvelope(getFactory(_operationClient.getOptions()
				.getSoapVersionURI()), codigoProduto1,
				optimizeContent(new javax.xml.namespace.QName(
						"http://webservice.consulta.spcjava.spcbrasil.org/",
						"detalharProduto")));

		// adding SOAP soap_headers
		_serviceClient.addHeadersToEnvelope(env);
		// create message context with that soap envelope
		_messageContext.setEnvelope(env);

		// add the message context to the operation client
		_operationClient.addMessageContext(_messageContext);

		_operationClient
				.setCallback(new org.apache.axis2.client.async.AxisCallback() {
					public void onMessage(
							org.apache.axis2.context.MessageContext resultContext) {
						try {
							org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext
									.getEnvelope();

							java.lang.Object object = fromOM(
									resultEnv.getBody().getFirstElement(),
									ConsultaWebServiceStub.ProdutoE.class,
									getEnvelopeNamespaces(resultEnv));
							callback.receiveResultdetalharProduto((ConsultaWebServiceStub.ProdutoE) object);

						} catch (org.apache.axis2.AxisFault e) {
							callback.receiveErrordetalharProduto(e);
						}
					}

					public void onError(java.lang.Exception error) {
						if (error instanceof org.apache.axis2.AxisFault) {
							org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
							org.apache.axiom.om.OMElement faultElt = f
									.getDetail();
							if (faultElt != null) {
								if (faultExceptionNameMap.containsKey(faultElt
										.getQName())) {
									// make the fault by reflection
									try {
										java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
												.get(faultElt.getQName());
										java.lang.Class exceptionClass = java.lang.Class
												.forName(exceptionClassName);
										java.lang.Exception ex = (java.lang.Exception) exceptionClass
												.newInstance();
										// message class
										java.lang.String messageClassName = (java.lang.String) faultMessageMap
												.get(faultElt.getQName());
										java.lang.Class messageClass = java.lang.Class
												.forName(messageClassName);
										java.lang.Object messageObject = fromOM(
												faultElt, messageClass, null);
										java.lang.reflect.Method m = exceptionClass
												.getMethod(
														"setFaultMessage",
														new java.lang.Class[] { messageClass });
										m.invoke(
												ex,
												new java.lang.Object[] { messageObject });

										callback.receiveErrordetalharProduto(new java.rmi.RemoteException(
												ex.getMessage(), ex));
									} catch (java.lang.ClassCastException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									} catch (java.lang.ClassNotFoundException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									} catch (java.lang.NoSuchMethodException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									} catch (java.lang.reflect.InvocationTargetException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									} catch (java.lang.IllegalAccessException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									} catch (java.lang.InstantiationException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									} catch (org.apache.axis2.AxisFault e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrordetalharProduto(f);
									}
								} else {
									callback.receiveErrordetalharProduto(f);
								}
							} else {
								callback.receiveErrordetalharProduto(f);
							}
						} else {
							callback.receiveErrordetalharProduto(error);
						}
					}

					public void onFault(
							org.apache.axis2.context.MessageContext faultContext) {
						org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils
								.getInboundFaultFromMessageContext(faultContext);
						onError(fault);
					}

					public void onComplete() {
						try {
							_messageContext.getTransportOut().getSender()
									.cleanup(_messageContext);
						} catch (org.apache.axis2.AxisFault axisFault) {
							callback.receiveErrordetalharProduto(axisFault);
						}
					}
				});

		org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
		if (_operations[0].getMessageReceiver() == null
				&& _operationClient.getOptions().isUseSeparateListener()) {
			_callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
			_operations[0].setMessageReceiver(_callbackReceiver);
		}

		// execute the operation client
		_operationClient.execute(false);

	}

	/**
	 * Auto generated method signature
	 * 
	 * @see ConsultaWebService#consultar
	 * @param filtro3
	 */

	public ConsultaWebServiceStub.Resultado consultar(

			ConsultaWebServiceStub.Filtro filtro3)

	throws java.rmi.RemoteException

	{
		org.apache.axis2.context.MessageContext _messageContext = null;
		try {
			org.apache.axis2.client.OperationClient _operationClient = _serviceClient
					.createClient(_operations[1].getName());
			_operationClient
					.getOptions()
					.setAction(
							"http://webservice.consulta.spcjava.spcbrasil.org/consultaWebService/consultarRequest");
			_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(
					true);

			addPropertyToOperationClient(
					_operationClient,
					org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
					"&");

			// create a message context
			_messageContext = new org.apache.axis2.context.MessageContext();

			// create SOAP envelope with that payload
			org.apache.axiom.soap.SOAPEnvelope env = null;

			env = toEnvelope(
					getFactory(_operationClient.getOptions()
							.getSoapVersionURI()),
					filtro3,
					optimizeContent(new javax.xml.namespace.QName(
							"http://webservice.consulta.spcjava.spcbrasil.org/",
							"consultar")));

			// adding SOAP soap_headers
			_serviceClient.addHeadersToEnvelope(env);
			// set the message context with that soap envelope
			_messageContext.setEnvelope(env);

			//System.out.println(env.toString());

			// add the message contxt to the operation client
			_operationClient.addMessageContext(_messageContext);

			// execute the operation client
			_operationClient.execute(true);

			org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient
					.getMessageContext(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
			org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext
					.getEnvelope();

			java.lang.Object object = fromOM(
					_returnEnv.getBody().getFirstElement(),
					ConsultaWebServiceStub.Resultado.class,
					getEnvelopeNamespaces(_returnEnv));

			return (ConsultaWebServiceStub.Resultado) object;

		} catch (org.apache.axis2.AxisFault f) {

			org.apache.axiom.om.OMElement faultElt = f.getDetail();
			if (faultElt != null) {
				if (faultExceptionNameMap.containsKey(faultElt.getQName())) {
					// make the fault by reflection
					try {
						java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
								.get(faultElt.getQName());
						java.lang.Class exceptionClass = java.lang.Class
								.forName(exceptionClassName);
						java.lang.Exception ex = (java.lang.Exception) exceptionClass
								.newInstance();
						// message class
						java.lang.String messageClassName = (java.lang.String) faultMessageMap
								.get(faultElt.getQName());
						java.lang.Class messageClass = java.lang.Class
								.forName(messageClassName);
						java.lang.Object messageObject = fromOM(faultElt,
								messageClass, null);
						java.lang.reflect.Method m = exceptionClass.getMethod(
								"setFaultMessage",
								new java.lang.Class[] { messageClass });
						m.invoke(ex, new java.lang.Object[] { messageObject });

						throw new java.rmi.RemoteException(ex.getMessage(), ex);
					} catch (java.lang.ClassCastException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.ClassNotFoundException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.NoSuchMethodException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.reflect.InvocationTargetException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.IllegalAccessException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.InstantiationException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					}
				} else {
					throw f;
				}
			} else {
				throw f;
			}
		} finally {
			_messageContext.getTransportOut().getSender()
					.cleanup(_messageContext);
		}
	}

	/**
	 * Auto generated method signature for Asynchronous Invocations
	 * 
	 * @see ConsultaWebService#startconsultar
	 * @param filtro3
	 */
	public void startconsultar(

			ConsultaWebServiceStub.Filtro filtro3,

			final ConsultaWebServiceCallbackHandler callback)

	throws java.rmi.RemoteException {

		org.apache.axis2.client.OperationClient _operationClient = _serviceClient
				.createClient(_operations[1].getName());
		_operationClient
				.getOptions()
				.setAction(
						"http://webservice.consulta.spcjava.spcbrasil.org/consultaWebService/consultarRequest");
		_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

		addPropertyToOperationClient(
				_operationClient,
				org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
				"&");

		// create SOAP envelope with that payload
		org.apache.axiom.soap.SOAPEnvelope env = null;
		final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

		// Style is Doc.

		env = toEnvelope(getFactory(_operationClient.getOptions()
				.getSoapVersionURI()), filtro3,
				optimizeContent(new javax.xml.namespace.QName(
						"http://webservice.consulta.spcjava.spcbrasil.org/",
						"consultar")));

		// adding SOAP soap_headers
		_serviceClient.addHeadersToEnvelope(env);
		// create message context with that soap envelope
		_messageContext.setEnvelope(env);

		// add the message context to the operation client
		_operationClient.addMessageContext(_messageContext);

		_operationClient
				.setCallback(new org.apache.axis2.client.async.AxisCallback() {
					public void onMessage(
							org.apache.axis2.context.MessageContext resultContext) {
						try {
							org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext
									.getEnvelope();

							java.lang.Object object = fromOM(
									resultEnv.getBody().getFirstElement(),
									ConsultaWebServiceStub.Resultado.class,
									getEnvelopeNamespaces(resultEnv));
							callback.receiveResultconsultar((ConsultaWebServiceStub.Resultado) object);

						} catch (org.apache.axis2.AxisFault e) {
							callback.receiveErrorconsultar(e);
						}
					}

					public void onError(java.lang.Exception error) {
						if (error instanceof org.apache.axis2.AxisFault) {
							org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
							org.apache.axiom.om.OMElement faultElt = f
									.getDetail();
							if (faultElt != null) {
								if (faultExceptionNameMap.containsKey(faultElt
										.getQName())) {
									// make the fault by reflection
									try {
										java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
												.get(faultElt.getQName());
										java.lang.Class exceptionClass = java.lang.Class
												.forName(exceptionClassName);
										java.lang.Exception ex = (java.lang.Exception) exceptionClass
												.newInstance();
										// message class
										java.lang.String messageClassName = (java.lang.String) faultMessageMap
												.get(faultElt.getQName());
										java.lang.Class messageClass = java.lang.Class
												.forName(messageClassName);
										java.lang.Object messageObject = fromOM(
												faultElt, messageClass, null);
										java.lang.reflect.Method m = exceptionClass
												.getMethod(
														"setFaultMessage",
														new java.lang.Class[] { messageClass });
										m.invoke(
												ex,
												new java.lang.Object[] { messageObject });

										callback.receiveErrorconsultar(new java.rmi.RemoteException(
												ex.getMessage(), ex));
									} catch (java.lang.ClassCastException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									} catch (java.lang.ClassNotFoundException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									} catch (java.lang.NoSuchMethodException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									} catch (java.lang.reflect.InvocationTargetException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									} catch (java.lang.IllegalAccessException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									} catch (java.lang.InstantiationException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									} catch (org.apache.axis2.AxisFault e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorconsultar(f);
									}
								} else {
									callback.receiveErrorconsultar(f);
								}
							} else {
								callback.receiveErrorconsultar(f);
							}
						} else {
							callback.receiveErrorconsultar(error);
						}
					}

					public void onFault(
							org.apache.axis2.context.MessageContext faultContext) {
						org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils
								.getInboundFaultFromMessageContext(faultContext);
						onError(fault);
					}

					public void onComplete() {
						try {
							_messageContext.getTransportOut().getSender()
									.cleanup(_messageContext);
						} catch (org.apache.axis2.AxisFault axisFault) {
							callback.receiveErrorconsultar(axisFault);
						}
					}
				});

		org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
		if (_operations[1].getMessageReceiver() == null
				&& _operationClient.getOptions().isUseSeparateListener()) {
			_callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
			_operations[1].setMessageReceiver(_callbackReceiver);
		}

		// execute the operation client
		_operationClient.execute(false);

	}

	/**
	 * Auto generated method signature
	 * 
	 * @see ConsultaWebService#listarProdutos
	 */

	public ConsultaWebServiceStub.Produtos listarProdutos(

	)

	throws java.rmi.RemoteException

	{
		org.apache.axis2.context.MessageContext _messageContext = null;
		try {
			org.apache.axis2.client.OperationClient _operationClient = _serviceClient
					.createClient(_operations[2].getName());
			_operationClient
					.getOptions()
					.setAction(
							"http://webservice.consulta.spcjava.spcbrasil.org/consultaWebService/listarProdutosRequest");
			_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(
					true);

			addPropertyToOperationClient(
					_operationClient,
					org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
					"&");

			// create a message context
			_messageContext = new org.apache.axis2.context.MessageContext();

			// create SOAP envelope with that payload
			org.apache.axiom.soap.SOAPEnvelope env = null;

			// Style is taken to be "document". No input parameters
			// according to the WS-Basic profile in this case we have to send an
			// empty soap message
			org.apache.axiom.soap.SOAPFactory factory = getFactory(_operationClient
					.getOptions().getSoapVersionURI());
			env = factory.getDefaultEnvelope();

			// adding SOAP soap_headers
			_serviceClient.addHeadersToEnvelope(env);
			// set the message context with that soap envelope
			_messageContext.setEnvelope(env);

			// add the message contxt to the operation client
			_operationClient.addMessageContext(_messageContext);

			// execute the operation client
			_operationClient.execute(true);

			org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient
					.getMessageContext(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
			org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext
					.getEnvelope();

			java.lang.Object object = fromOM(
					_returnEnv.getBody().getFirstElement(),
					ConsultaWebServiceStub.Produtos.class,
					getEnvelopeNamespaces(_returnEnv));

			return (ConsultaWebServiceStub.Produtos) object;

		} catch (org.apache.axis2.AxisFault f) {

			org.apache.axiom.om.OMElement faultElt = f.getDetail();
			if (faultElt != null) {
				if (faultExceptionNameMap.containsKey(faultElt.getQName())) {
					// make the fault by reflection
					try {
						java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
								.get(faultElt.getQName());
						java.lang.Class exceptionClass = java.lang.Class
								.forName(exceptionClassName);
						java.lang.Exception ex = (java.lang.Exception) exceptionClass
								.newInstance();
						// message class
						java.lang.String messageClassName = (java.lang.String) faultMessageMap
								.get(faultElt.getQName());
						java.lang.Class messageClass = java.lang.Class
								.forName(messageClassName);
						java.lang.Object messageObject = fromOM(faultElt,
								messageClass, null);
						java.lang.reflect.Method m = exceptionClass.getMethod(
								"setFaultMessage",
								new java.lang.Class[] { messageClass });
						m.invoke(ex, new java.lang.Object[] { messageObject });

						throw new java.rmi.RemoteException(ex.getMessage(), ex);
					} catch (java.lang.ClassCastException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.ClassNotFoundException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.NoSuchMethodException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.reflect.InvocationTargetException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.IllegalAccessException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					} catch (java.lang.InstantiationException e) {
						// we cannot intantiate the class - throw the original
						// Axis fault
						throw f;
					}
				} else {
					throw f;
				}
			} else {
				throw f;
			}
		} finally {
			_messageContext.getTransportOut().getSender()
					.cleanup(_messageContext);
		}
	}

	/**
	 * Auto generated method signature for Asynchronous Invocations
	 * 
	 * @see ConsultaWebService#startlistarProdutos
	 */
	public void startlistarProdutos(

			final ConsultaWebServiceCallbackHandler callback)

	throws java.rmi.RemoteException {

		org.apache.axis2.client.OperationClient _operationClient = _serviceClient
				.createClient(_operations[2].getName());
		_operationClient
				.getOptions()
				.setAction(
						"http://webservice.consulta.spcjava.spcbrasil.org/consultaWebService/listarProdutosRequest");
		_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

		addPropertyToOperationClient(
				_operationClient,
				org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,
				"&");

		// create SOAP envelope with that payload
		org.apache.axiom.soap.SOAPEnvelope env = null;
		final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

		// Style is taken to be "document". No input parameters
		// according to the WS-Basic profile in this case we have to send an
		// empty soap message
		org.apache.axiom.soap.SOAPFactory factory = getFactory(_operationClient
				.getOptions().getSoapVersionURI());
		env = factory.getDefaultEnvelope();

		// adding SOAP soap_headers
		_serviceClient.addHeadersToEnvelope(env);
		// create message context with that soap envelope
		_messageContext.setEnvelope(env);

		// add the message context to the operation client
		_operationClient.addMessageContext(_messageContext);

		_operationClient
				.setCallback(new org.apache.axis2.client.async.AxisCallback() {
					public void onMessage(
							org.apache.axis2.context.MessageContext resultContext) {
						try {
							org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext
									.getEnvelope();

							java.lang.Object object = fromOM(
									resultEnv.getBody().getFirstElement(),
									ConsultaWebServiceStub.Produtos.class,
									getEnvelopeNamespaces(resultEnv));
							callback.receiveResultlistarProdutos((ConsultaWebServiceStub.Produtos) object);

						} catch (org.apache.axis2.AxisFault e) {
							callback.receiveErrorlistarProdutos(e);
						}
					}

					public void onError(java.lang.Exception error) {
						if (error instanceof org.apache.axis2.AxisFault) {
							org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
							org.apache.axiom.om.OMElement faultElt = f
									.getDetail();
							if (faultElt != null) {
								if (faultExceptionNameMap.containsKey(faultElt
										.getQName())) {
									// make the fault by reflection
									try {
										java.lang.String exceptionClassName = (java.lang.String) faultExceptionClassNameMap
												.get(faultElt.getQName());
										java.lang.Class exceptionClass = java.lang.Class
												.forName(exceptionClassName);
										java.lang.Exception ex = (java.lang.Exception) exceptionClass
												.newInstance();
										// message class
										java.lang.String messageClassName = (java.lang.String) faultMessageMap
												.get(faultElt.getQName());
										java.lang.Class messageClass = java.lang.Class
												.forName(messageClassName);
										java.lang.Object messageObject = fromOM(
												faultElt, messageClass, null);
										java.lang.reflect.Method m = exceptionClass
												.getMethod(
														"setFaultMessage",
														new java.lang.Class[] { messageClass });
										m.invoke(
												ex,
												new java.lang.Object[] { messageObject });

										callback.receiveErrorlistarProdutos(new java.rmi.RemoteException(
												ex.getMessage(), ex));
									} catch (java.lang.ClassCastException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									} catch (java.lang.ClassNotFoundException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									} catch (java.lang.NoSuchMethodException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									} catch (java.lang.reflect.InvocationTargetException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									} catch (java.lang.IllegalAccessException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									} catch (java.lang.InstantiationException e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									} catch (org.apache.axis2.AxisFault e) {
										// we cannot intantiate the class -
										// throw the original Axis fault
										callback.receiveErrorlistarProdutos(f);
									}
								} else {
									callback.receiveErrorlistarProdutos(f);
								}
							} else {
								callback.receiveErrorlistarProdutos(f);
							}
						} else {
							callback.receiveErrorlistarProdutos(error);
						}
					}

					public void onFault(
							org.apache.axis2.context.MessageContext faultContext) {
						org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils
								.getInboundFaultFromMessageContext(faultContext);
						onError(fault);
					}

					public void onComplete() {
						try {
							_messageContext.getTransportOut().getSender()
									.cleanup(_messageContext);
						} catch (org.apache.axis2.AxisFault axisFault) {
							callback.receiveErrorlistarProdutos(axisFault);
						}
					}
				});

		org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
		if (_operations[2].getMessageReceiver() == null
				&& _operationClient.getOptions().isUseSeparateListener()) {
			_callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
			_operations[2].setMessageReceiver(_callbackReceiver);
		}

		// execute the operation client
		_operationClient.execute(false);

	}

	/**
	 * A utility method that copies the namepaces from the SOAPEnvelope
	 */
	private java.util.Map getEnvelopeNamespaces(
			org.apache.axiom.soap.SOAPEnvelope env) {
		java.util.Map returnMap = new java.util.HashMap();
		java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
		while (namespaceIterator.hasNext()) {
			org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator
					.next();
			returnMap.put(ns.getPrefix(), ns.getNamespaceURI());
		}
		return returnMap;
	}

	private javax.xml.namespace.QName[] opNameArray = null;

	private boolean optimizeContent(javax.xml.namespace.QName opName) {

		if (opNameArray == null) {
			return false;
		}
		for (int i = 0; i < opNameArray.length; i++) {
			if (opName.equals(opNameArray[i])) {
				return true;
			}
		}
		return false;
	}

	// https://servicos.spc.org.br:443/spcjava/remoting/ws/consulta/consultaWebService
	public static class InsumoCapitalSocial implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Capital-Social Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Nacionalidade This was an Attribute!
		 */

		protected java.lang.String localNacionalidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNacionalidade() {
			return localNacionalidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nacionalidade
		 */
		public void setNacionalidade(java.lang.String param) {

			this.localNacionalidade = param;

		}

		/**
		 * field for Natureza This was an Attribute!
		 */

		protected java.lang.String localNatureza;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNatureza() {
			return localNatureza;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Natureza
		 */
		public void setNatureza(java.lang.String param) {

			this.localNatureza = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * field for DataUltimaAtualizacao This was an Attribute!
		 */

		protected java.util.Calendar localDataUltimaAtualizacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataUltimaAtualizacao() {
			return localDataUltimaAtualizacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataUltimaAtualizacao
		 */
		public void setDataUltimaAtualizacao(java.util.Calendar param) {

			this.localDataUltimaAtualizacao = param;

		}

		/**
		 * field for ValorCapitalAutorizado This was an Attribute!
		 */

		protected java.math.BigDecimal localValorCapitalAutorizado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorCapitalAutorizado() {
			return localValorCapitalAutorizado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorCapitalAutorizado
		 */
		public void setValorCapitalAutorizado(java.math.BigDecimal param) {

			this.localValorCapitalAutorizado = param;

		}

		/**
		 * field for ValorCapitalRealizado This was an Attribute!
		 */

		protected java.math.BigDecimal localValorCapitalRealizado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorCapitalRealizado() {
			return localValorCapitalRealizado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorCapitalRealizado
		 */
		public void setValorCapitalRealizado(java.math.BigDecimal param) {

			this.localValorCapitalRealizado = param;

		}

		/**
		 * field for ValorCapitalSocial This was an Attribute!
		 */

		protected java.math.BigDecimal localValorCapitalSocial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorCapitalSocial() {
			return localValorCapitalSocial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorCapitalSocial
		 */
		public void setValorCapitalSocial(java.math.BigDecimal param) {

			this.localValorCapitalSocial = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoCapitalSocial.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Capital-Social",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Capital-Social", xmlWriter);
				}

			}

			if (localNacionalidade != null) {

				writeAttribute("", "nacionalidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNacionalidade), xmlWriter);

			}

			if (localNatureza != null) {

				writeAttribute("", "natureza",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNatureza), xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localDataUltimaAtualizacao != null) {

				writeAttribute("", "data-ultima-atualizacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimaAtualizacao),
						xmlWriter);

			}

			if (localValorCapitalAutorizado != null) {

				writeAttribute("", "valor-capital-autorizado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorCapitalAutorizado),
						xmlWriter);

			}

			if (localValorCapitalRealizado != null) {

				writeAttribute("", "valor-capital-realizado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorCapitalRealizado),
						xmlWriter);

			}

			if (localValorCapitalSocial != null) {

				writeAttribute("", "valor-capital-social",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorCapitalSocial),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "nacionalidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNacionalidade));

			attribList.add(new javax.xml.namespace.QName("", "natureza"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNatureza));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("",
					"data-ultima-atualizacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimaAtualizacao));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-capital-autorizado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorCapitalAutorizado));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-capital-realizado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorCapitalRealizado));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-capital-social"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorCapitalSocial));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoCapitalSocial parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoCapitalSocial object = new InsumoCapitalSocial();

//				int event;
//				java.lang.String nillableValue = null;
//				java.lang.String prefix = "";
//				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Capital-Social".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoCapitalSocial) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nacionalidade"
					java.lang.String tempAttribNacionalidade =

					reader.getAttributeValue(null, "nacionalidade");

					if (tempAttribNacionalidade != null) {
						java.lang.String content = tempAttribNacionalidade;

						object.setNacionalidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNacionalidade));

					} else {

					}
					handledAttributes.add("nacionalidade");

					// handle attribute "natureza"
					java.lang.String tempAttribNatureza =

					reader.getAttributeValue(null, "natureza");

					if (tempAttribNatureza != null) {
						java.lang.String content = tempAttribNatureza;

						object.setNatureza(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNatureza));

					} else {

					}
					handledAttributes.add("natureza");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "data-ultima-atualizacao"
					java.lang.String tempAttribDataUltimaAtualizacao =

					reader.getAttributeValue(null, "data-ultima-atualizacao");

					if (tempAttribDataUltimaAtualizacao != null) {
						java.lang.String content = tempAttribDataUltimaAtualizacao;

						object.setDataUltimaAtualizacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimaAtualizacao));

					} else {

					}
					handledAttributes.add("data-ultima-atualizacao");

					// handle attribute "valor-capital-autorizado"
					java.lang.String tempAttribValorCapitalAutorizado =

					reader.getAttributeValue(null, "valor-capital-autorizado");

					if (tempAttribValorCapitalAutorizado != null) {
						java.lang.String content = tempAttribValorCapitalAutorizado;

						object.setValorCapitalAutorizado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorCapitalAutorizado));

					} else {

					}
					handledAttributes.add("valor-capital-autorizado");

					// handle attribute "valor-capital-realizado"
					java.lang.String tempAttribValorCapitalRealizado =

					reader.getAttributeValue(null, "valor-capital-realizado");

					if (tempAttribValorCapitalRealizado != null) {
						java.lang.String content = tempAttribValorCapitalRealizado;

						object.setValorCapitalRealizado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorCapitalRealizado));

					} else {

					}
					handledAttributes.add("valor-capital-realizado");

					// handle attribute "valor-capital-social"
					java.lang.String tempAttribValorCapitalSocial =

					reader.getAttributeValue(null, "valor-capital-social");

					if (tempAttribValorCapitalSocial != null) {
						java.lang.String content = tempAttribValorCapitalSocial;

						object.setValorCapitalSocial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorCapitalSocial));

					} else {

					}
					handledAttributes.add("valor-capital-social");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoProduto implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Produto Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * field for Codigo This was an Attribute!
		 */

		protected long localCodigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(long param) {

			this.localCodigo = param;

		}

		/**
		 * field for Opcional This was an Attribute!
		 */

		protected boolean localOpcional;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getOpcional() {
			return localOpcional;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Opcional
		 */
		public void setOpcional(boolean param) {

			this.localOpcional = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoProduto.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Produto",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Produto", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localCodigo != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "codigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigo), xmlWriter);

			}

			if (true) {

				writeAttribute("", "opcional",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOpcional), xmlWriter);

			}

			else {
				throw new org.apache.axis2.databinding.ADBException(
						"required attribute localOpcional is null");
			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("", "codigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigo));

			attribList.add(new javax.xml.namespace.QName("", "opcional"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOpcional));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoProduto parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoProduto object = new InsumoProduto();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Produto".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoProduto) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "codigo"
					java.lang.String tempAttribCodigo =

					reader.getAttributeValue(null, "codigo");

					if (tempAttribCodigo != null) {
						java.lang.String content = tempAttribCodigo;

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribCodigo));

					} else {

						object.setCodigo(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("codigo");

					// handle attribute "opcional"
					java.lang.String tempAttribOpcional =

					reader.getAttributeValue(null, "opcional");

					if (tempAttribOpcional != null) {
						java.lang.String content = tempAttribOpcional;

						object.setOpcional(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribOpcional));

					} else {

						throw new org.apache.axis2.databinding.ADBException(
								"Required attribute opcional is missing");

					}
					handledAttributes.add("opcional");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoHistoricoChequeDocumentoDiferente extends
			InsumoHistoricoCheque implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Historico-Cheque-Documento-Diferente Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoHistoricoChequeDocumentoDiferente.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute(
						"xsi",
						"http://www.w3.org/2001/XMLSchema-instance",
						"type",
						namespacePrefix
								+ ":Insumo-Historico-Cheque-Documento-Diferente",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Historico-Cheque-Documento-Diferente",
						xmlWriter);
			}

			if (localDataConsultaMaisAntiga != null) {

				writeAttribute("", "data-consulta-mais-antiga",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaMaisAntiga),
						xmlWriter);

			}

			if (localDataConsultaMaisRecente != null) {

				writeAttribute("", "data-consulta-mais-recente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaMaisRecente),
						xmlWriter);

			}

			if (localNomeEmpresaUltimaConsulta != null) {

				writeAttribute(
						"",
						"nome-empresa-ultima-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeEmpresaUltimaConsulta),
						xmlWriter);

			}

			if (localQuantidadeConsultas != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-consultas",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsultas),
						xmlWriter);

			}
			if (localChequeConsultadoTracker) {
				if (localChequeConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-consultado cannot be null!!");
				}
				localChequeConsultado.serialize(new javax.xml.namespace.QName(
						"", "cheque-consultado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Historico-Cheque-Documento-Diferente"));
			if (localChequeConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-consultado"));

				if (localChequeConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-consultado cannot be null!!");
				}
				elementList.add(localChequeConsultado);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-mais-antiga"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaMaisAntiga));

			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-mais-recente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaMaisRecente));

			attribList.add(new javax.xml.namespace.QName("",
					"nome-empresa-ultima-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeEmpresaUltimaConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consultas"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsultas));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoHistoricoChequeDocumentoDiferente parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoHistoricoChequeDocumentoDiferente object = new InsumoHistoricoChequeDocumentoDiferente();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Historico-Cheque-Documento-Diferente"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoHistoricoChequeDocumentoDiferente) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-consulta-mais-antiga"
					java.lang.String tempAttribDataConsultaMaisAntiga =

					reader.getAttributeValue(null, "data-consulta-mais-antiga");

					if (tempAttribDataConsultaMaisAntiga != null) {
						java.lang.String content = tempAttribDataConsultaMaisAntiga;

						object.setDataConsultaMaisAntiga(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaMaisAntiga));

					} else {

					}
					handledAttributes.add("data-consulta-mais-antiga");

					// handle attribute "data-consulta-mais-recente"
					java.lang.String tempAttribDataConsultaMaisRecente =

					reader.getAttributeValue(null, "data-consulta-mais-recente");

					if (tempAttribDataConsultaMaisRecente != null) {
						java.lang.String content = tempAttribDataConsultaMaisRecente;

						object.setDataConsultaMaisRecente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaMaisRecente));

					} else {

					}
					handledAttributes.add("data-consulta-mais-recente");

					// handle attribute "nome-empresa-ultima-consulta"
					java.lang.String tempAttribNomeEmpresaUltimaConsulta =

					reader.getAttributeValue(null,
							"nome-empresa-ultima-consulta");

					if (tempAttribNomeEmpresaUltimaConsulta != null) {
						java.lang.String content = tempAttribNomeEmpresaUltimaConsulta;

						object.setNomeEmpresaUltimaConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeEmpresaUltimaConsulta));

					} else {

					}
					handledAttributes.add("nome-empresa-ultima-consulta");

					// handle attribute "quantidade-consultas"
					java.lang.String tempAttribQuantidadeConsultas =

					reader.getAttributeValue(null, "quantidade-consultas");

					if (tempAttribQuantidadeConsultas != null) {
						java.lang.String content = tempAttribQuantidadeConsultas;

						object.setQuantidadeConsultas(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeConsultas));

					} else {

						object.setQuantidadeConsultas(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consultas");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-consultado").equals(reader
									.getName())) {

						object.setChequeConsultado(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class PessoaFisica implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Pessoa-Fisica Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cpf
		 */

		protected Cpf localCpf;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCpfTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cpf
		 */
		public Cpf getCpf() {
			return localCpf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cpf
		 */
		public void setCpf(Cpf param) {

			if (param != null) {
				// update the setting tracker
				localCpfTracker = true;
			} else {
				localCpfTracker = false;

			}

			this.localCpf = param;

		}

		/**
		 * field for SituacaoCpf
		 */

		protected SituacaoDocumentoWS localSituacaoCpf;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSituacaoCpfTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return SituacaoDocumentoWS
		 */
		public SituacaoDocumentoWS getSituacaoCpf() {
			return localSituacaoCpf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SituacaoCpf
		 */
		public void setSituacaoCpf(SituacaoDocumentoWS param) {

			if (param != null) {
				// update the setting tracker
				localSituacaoCpfTracker = true;
			} else {
				localSituacaoCpfTracker = false;

			}

			this.localSituacaoCpf = param;

		}

		/**
		 * field for EstadoRg
		 */

		protected Estado localEstadoRg;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEstadoRgTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Estado
		 */
		public Estado getEstadoRg() {
			return localEstadoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EstadoRg
		 */
		public void setEstadoRg(Estado param) {

			if (param != null) {
				// update the setting tracker
				localEstadoRgTracker = true;
			} else {
				localEstadoRgTracker = false;

			}

			this.localEstadoRg = param;

		}

		/**
		 * field for Endereco
		 */

		protected Endereco localEndereco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Endereco
		 */
		public Endereco getEndereco() {
			return localEndereco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Endereco
		 */
		public void setEndereco(Endereco param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoTracker = true;
			} else {
				localEnderecoTracker = false;

			}

			this.localEndereco = param;

		}

		/**
		 * field for TelefoneResidencial
		 */

		protected Telefone localTelefoneResidencial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneResidencialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefoneResidencial() {
			return localTelefoneResidencial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneResidencial
		 */
		public void setTelefoneResidencial(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneResidencialTracker = true;
			} else {
				localTelefoneResidencialTracker = false;

			}

			this.localTelefoneResidencial = param;

		}

		/**
		 * field for TelefoneCelular
		 */

		protected Telefone localTelefoneCelular;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneCelularTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefoneCelular() {
			return localTelefoneCelular;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneCelular
		 */
		public void setTelefoneCelular(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneCelularTracker = true;
			} else {
				localTelefoneCelularTracker = false;

			}

			this.localTelefoneCelular = param;

		}

		/**
		 * field for TelefoneComercial
		 */

		protected Telefone localTelefoneComercial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneComercialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefoneComercial() {
			return localTelefoneComercial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneComercial
		 */
		public void setTelefoneComercial(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneComercialTracker = true;
			} else {
				localTelefoneComercialTracker = false;

			}

			this.localTelefoneComercial = param;

		}

		/**
		 * field for Fax
		 */

		protected Telefone localFax;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localFaxTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getFax() {
			return localFax;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Fax
		 */
		public void setFax(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localFaxTracker = true;
			} else {
				localFaxTracker = false;

			}

			this.localFax = param;

		}

		/**
		 * field for DataNascimento This was an Attribute!
		 */

		protected java.util.Calendar localDataNascimento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataNascimento() {
			return localDataNascimento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataNascimento
		 */
		public void setDataNascimento(java.util.Calendar param) {

			this.localDataNascimento = param;

		}

		/**
		 * field for EstadoCivil This was an Attribute!
		 */

		protected EstadoCivil localEstadoCivil;

		/**
		 * Auto generated getter method
		 * 
		 * @return EstadoCivil
		 */
		public EstadoCivil getEstadoCivil() {
			return localEstadoCivil;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EstadoCivil
		 */
		public void setEstadoCivil(EstadoCivil param) {

			this.localEstadoCivil = param;

		}

		/**
		 * field for Idade This was an Attribute!
		 */

		protected int localIdade;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getIdade() {
			return localIdade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Idade
		 */
		public void setIdade(int param) {

			this.localIdade = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * field for NomeMae This was an Attribute!
		 */

		protected java.lang.String localNomeMae;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeMae() {
			return localNomeMae;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeMae
		 */
		public void setNomeMae(java.lang.String param) {

			this.localNomeMae = param;

		}

		/**
		 * field for NomePai This was an Attribute!
		 */

		protected java.lang.String localNomePai;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomePai() {
			return localNomePai;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomePai
		 */
		public void setNomePai(java.lang.String param) {

			this.localNomePai = param;

		}

		/**
		 * field for NumeroRg This was an Attribute!
		 */

		protected java.lang.String localNumeroRg;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroRg() {
			return localNumeroRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroRg
		 */
		public void setNumeroRg(java.lang.String param) {

			this.localNumeroRg = param;

		}

		/**
		 * field for NumeroTituloEleitor This was an Attribute!
		 */

		protected long localNumeroTituloEleitor;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getNumeroTituloEleitor() {
			return localNumeroTituloEleitor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroTituloEleitor
		 */
		public void setNumeroTituloEleitor(long param) {

			this.localNumeroTituloEleitor = param;

		}

		/**
		 * field for Sexo This was an Attribute!
		 */

		protected Sexo localSexo;

		/**
		 * Auto generated getter method
		 * 
		 * @return Sexo
		 */
		public Sexo getSexo() {
			return localSexo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Sexo
		 */
		public void setSexo(Sexo param) {

			this.localSexo = param;

		}

		/**
		 * field for Signo This was an Attribute!
		 */

		protected Signo localSigno;

		/**
		 * Auto generated getter method
		 * 
		 * @return Signo
		 */
		public Signo getSigno() {
			return localSigno;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Signo
		 */
		public void setSigno(Signo param) {

			this.localSigno = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					PessoaFisica.this
							.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Pessoa-Fisica",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Pessoa-Fisica", xmlWriter);
				}

			}

			if (localDataNascimento != null) {

				writeAttribute("", "data-nascimento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataNascimento),
						xmlWriter);

			}

			if (localEstadoCivil != null) {
				writeAttribute("", "estado-civil", localEstadoCivil.toString(),
						xmlWriter);
			}

			if (localIdade != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "idade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localIdade), xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localNomeMae != null) {

				writeAttribute("", "nome-mae",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeMae), xmlWriter);

			}

			if (localNomePai != null) {

				writeAttribute("", "nome-pai",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomePai), xmlWriter);

			}

			if (localNumeroRg != null) {

				writeAttribute("", "numero-rg",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroRg), xmlWriter);

			}

			if (localNumeroTituloEleitor != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "numero-titulo-eleitor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroTituloEleitor),
						xmlWriter);

			}

			if (localSexo != null) {
				writeAttribute("", "sexo", localSexo.toString(), xmlWriter);
			}

			if (localSigno != null) {
				writeAttribute("", "signo", localSigno.toString(), xmlWriter);
			}
			if (localCpfTracker) {
				if (localCpf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cpf cannot be null!!");
				}
				localCpf.serialize(new javax.xml.namespace.QName("", "cpf"),
						factory, xmlWriter);
			}
			if (localSituacaoCpfTracker) {
				if (localSituacaoCpf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"situacao-cpf cannot be null!!");
				}
				localSituacaoCpf.serialize(new javax.xml.namespace.QName("",
						"situacao-cpf"), factory, xmlWriter);
			}
			if (localEstadoRgTracker) {
				if (localEstadoRg == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-rg cannot be null!!");
				}
				localEstadoRg.serialize(new javax.xml.namespace.QName("",
						"estado-rg"), factory, xmlWriter);
			}
			if (localEnderecoTracker) {
				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				localEndereco.serialize(new javax.xml.namespace.QName("",
						"endereco"), factory, xmlWriter);
			}
			if (localTelefoneResidencialTracker) {
				if (localTelefoneResidencial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-residencial cannot be null!!");
				}
				localTelefoneResidencial.serialize(
						new javax.xml.namespace.QName("",
								"telefone-residencial"), factory, xmlWriter);
			}
			if (localTelefoneCelularTracker) {
				if (localTelefoneCelular == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-celular cannot be null!!");
				}
				localTelefoneCelular.serialize(new javax.xml.namespace.QName(
						"", "telefone-celular"), factory, xmlWriter);
			}
			if (localTelefoneComercialTracker) {
				if (localTelefoneComercial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-comercial cannot be null!!");
				}
				localTelefoneComercial.serialize(new javax.xml.namespace.QName(
						"", "telefone-comercial"), factory, xmlWriter);
			}
			if (localFaxTracker) {
				if (localFax == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"fax cannot be null!!");
				}
				localFax.serialize(new javax.xml.namespace.QName("", "fax"),
						factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCpfTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cpf"));

				if (localCpf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cpf cannot be null!!");
				}
				elementList.add(localCpf);
			}
			if (localSituacaoCpfTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"situacao-cpf"));

				if (localSituacaoCpf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"situacao-cpf cannot be null!!");
				}
				elementList.add(localSituacaoCpf);
			}
			if (localEstadoRgTracker) {
				elementList.add(new javax.xml.namespace.QName("", "estado-rg"));

				if (localEstadoRg == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-rg cannot be null!!");
				}
				elementList.add(localEstadoRg);
			}
			if (localEnderecoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "endereco"));

				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				elementList.add(localEndereco);
			}
			if (localTelefoneResidencialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-residencial"));

				if (localTelefoneResidencial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-residencial cannot be null!!");
				}
				elementList.add(localTelefoneResidencial);
			}
			if (localTelefoneCelularTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-celular"));

				if (localTelefoneCelular == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-celular cannot be null!!");
				}
				elementList.add(localTelefoneCelular);
			}
			if (localTelefoneComercialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-comercial"));

				if (localTelefoneComercial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-comercial cannot be null!!");
				}
				elementList.add(localTelefoneComercial);
			}
			if (localFaxTracker) {
				elementList.add(new javax.xml.namespace.QName("", "fax"));

				if (localFax == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"fax cannot be null!!");
				}
				elementList.add(localFax);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-nascimento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataNascimento));

			attribList.add(new javax.xml.namespace.QName("", "estado-civil"));

			attribList.add(localEstadoCivil.toString());

			attribList.add(new javax.xml.namespace.QName("", "idade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localIdade));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("", "nome-mae"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeMae));

			attribList.add(new javax.xml.namespace.QName("", "nome-pai"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomePai));

			attribList.add(new javax.xml.namespace.QName("", "numero-rg"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroRg));

			attribList.add(new javax.xml.namespace.QName("",
					"numero-titulo-eleitor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroTituloEleitor));

			attribList.add(new javax.xml.namespace.QName("", "sexo"));

			attribList.add(localSexo.toString());

			attribList.add(new javax.xml.namespace.QName("", "signo"));

			attribList.add(localSigno.toString());

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static PessoaFisica parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				PessoaFisica object = new PessoaFisica();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Pessoa-Fisica".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (PessoaFisica) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-nascimento"
					java.lang.String tempAttribDataNascimento =

					reader.getAttributeValue(null, "data-nascimento");

					if (tempAttribDataNascimento != null) {
						java.lang.String content = tempAttribDataNascimento;

						object.setDataNascimento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataNascimento));

					} else {

					}
					handledAttributes.add("data-nascimento");

					// handle attribute "estado-civil"
					java.lang.String tempAttribEstadoCivil =

					reader.getAttributeValue(null, "estado-civil");

					if (tempAttribEstadoCivil != null) {
						java.lang.String content = tempAttribEstadoCivil;

						object.setEstadoCivil(EstadoCivil.Factory.fromString(
								reader, tempAttribEstadoCivil));

					} else {

					}
					handledAttributes.add("estado-civil");

					// handle attribute "idade"
					java.lang.String tempAttribIdade =

					reader.getAttributeValue(null, "idade");

					if (tempAttribIdade != null) {
						java.lang.String content = tempAttribIdade;

						object.setIdade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribIdade));

					} else {

						object.setIdade(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("idade");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "nome-mae"
					java.lang.String tempAttribNomeMae =

					reader.getAttributeValue(null, "nome-mae");

					if (tempAttribNomeMae != null) {
						java.lang.String content = tempAttribNomeMae;

						object.setNomeMae(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeMae));

					} else {

					}
					handledAttributes.add("nome-mae");

					// handle attribute "nome-pai"
					java.lang.String tempAttribNomePai =

					reader.getAttributeValue(null, "nome-pai");

					if (tempAttribNomePai != null) {
						java.lang.String content = tempAttribNomePai;

						object.setNomePai(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomePai));

					} else {

					}
					handledAttributes.add("nome-pai");

					// handle attribute "numero-rg"
					java.lang.String tempAttribNumeroRg =

					reader.getAttributeValue(null, "numero-rg");

					if (tempAttribNumeroRg != null) {
						java.lang.String content = tempAttribNumeroRg;

						object.setNumeroRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroRg));

					} else {

					}
					handledAttributes.add("numero-rg");

					// handle attribute "numero-titulo-eleitor"
					java.lang.String tempAttribNumeroTituloEleitor =

					reader.getAttributeValue(null, "numero-titulo-eleitor");

					if (tempAttribNumeroTituloEleitor != null) {
						java.lang.String content = tempAttribNumeroTituloEleitor;

						object.setNumeroTituloEleitor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribNumeroTituloEleitor));

					} else {

						object.setNumeroTituloEleitor(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("numero-titulo-eleitor");

					// handle attribute "sexo"
					java.lang.String tempAttribSexo =

					reader.getAttributeValue(null, "sexo");

					if (tempAttribSexo != null) {
						java.lang.String content = tempAttribSexo;

						object.setSexo(Sexo.Factory.fromString(reader,
								tempAttribSexo));

					} else {

					}
					handledAttributes.add("sexo");

					// handle attribute "signo"
					java.lang.String tempAttribSigno =

					reader.getAttributeValue(null, "signo");

					if (tempAttribSigno != null) {
						java.lang.String content = tempAttribSigno;

						object.setSigno(Signo.Factory.fromString(reader,
								tempAttribSigno));

					} else {

					}
					handledAttributes.add("signo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cpf")
									.equals(reader.getName())) {

						object.setCpf(Cpf.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "situacao-cpf")
									.equals(reader.getName())) {

						object.setSituacaoCpf(SituacaoDocumentoWS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "estado-rg")
									.equals(reader.getName())) {

						object.setEstadoRg(Estado.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "endereco")
									.equals(reader.getName())) {

						object.setEndereco(Endereco.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-residencial").equals(reader
									.getName())) {

						object.setTelefoneResidencial(Telefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-celular")
									.equals(reader.getName())) {

						object.setTelefoneCelular(Telefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-comercial").equals(reader
									.getName())) {

						object.setTelefoneComercial(Telefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "fax")
									.equals(reader.getName())) {

						object.setFax(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoConsultaRealizada implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Consulta-Realizada Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for OrigemAssociado
		 */

		protected Cidade localOrigemAssociado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localOrigemAssociadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getOrigemAssociado() {
			return localOrigemAssociado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            OrigemAssociado
		 */
		public void setOrigemAssociado(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localOrigemAssociadoTracker = true;
			} else {
				localOrigemAssociadoTracker = false;

			}

			this.localOrigemAssociado = param;

		}

		/**
		 * field for NomeAssociado This was an Attribute!
		 */

		protected java.lang.String localNomeAssociado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeAssociado() {
			return localNomeAssociado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeAssociado
		 */
		public void setNomeAssociado(java.lang.String param) {

			this.localNomeAssociado = param;

		}

		/**
		 * field for DataConsulta This was an Attribute!
		 */

		protected java.util.Calendar localDataConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsulta() {
			return localDataConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsulta
		 */
		public void setDataConsulta(java.util.Calendar param) {

			this.localDataConsulta = param;

		}

		/**
		 * field for NomeEntidadeOrigem This was an Attribute!
		 */

		protected java.lang.String localNomeEntidadeOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeEntidadeOrigem() {
			return localNomeEntidadeOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeEntidadeOrigem
		 */
		public void setNomeEntidadeOrigem(java.lang.String param) {

			this.localNomeEntidadeOrigem = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoConsultaRealizada.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Consulta-Realizada", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Consulta-Realizada", xmlWriter);
				}

			}

			if (localNomeAssociado != null) {

				writeAttribute("", "nome-associado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeAssociado), xmlWriter);

			}

			if (localDataConsulta != null) {

				writeAttribute("", "data-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsulta), xmlWriter);

			}

			if (localNomeEntidadeOrigem != null) {

				writeAttribute("", "nome-entidade-origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeEntidadeOrigem),
						xmlWriter);

			}
			if (localOrigemAssociadoTracker) {
				if (localOrigemAssociado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"origem-associado cannot be null!!");
				}
				localOrigemAssociado.serialize(new javax.xml.namespace.QName(
						"", "origem-associado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localOrigemAssociadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"origem-associado"));

				if (localOrigemAssociado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"origem-associado cannot be null!!");
				}
				elementList.add(localOrigemAssociado);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome-associado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeAssociado));

			attribList.add(new javax.xml.namespace.QName("", "data-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"nome-entidade-origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeEntidadeOrigem));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoConsultaRealizada parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoConsultaRealizada object = new InsumoConsultaRealizada();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Consulta-Realizada".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoConsultaRealizada) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome-associado"
					java.lang.String tempAttribNomeAssociado =

					reader.getAttributeValue(null, "nome-associado");

					if (tempAttribNomeAssociado != null) {
						java.lang.String content = tempAttribNomeAssociado;

						object.setNomeAssociado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeAssociado));

					} else {

					}
					handledAttributes.add("nome-associado");

					// handle attribute "data-consulta"
					java.lang.String tempAttribDataConsulta =

					reader.getAttributeValue(null, "data-consulta");

					if (tempAttribDataConsulta != null) {
						java.lang.String content = tempAttribDataConsulta;

						object.setDataConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsulta));

					} else {

					}
					handledAttributes.add("data-consulta");

					// handle attribute "nome-entidade-origem"
					java.lang.String tempAttribNomeEntidadeOrigem =

					reader.getAttributeValue(null, "nome-entidade-origem");

					if (tempAttribNomeEntidadeOrigem != null) {
						java.lang.String content = tempAttribNomeEntidadeOrigem;

						object.setNomeEntidadeOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeEntidadeOrigem));

					} else {

					}
					handledAttributes.add("nome-entidade-origem");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"origem-associado")
									.equals(reader.getName())) {

						object.setOrigemAssociado(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoConsultaRealizadaCheque implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Consulta-Realizada-Cheque Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for ReferenciaComercial This was an Array!
		 */

		protected ReferenciaComercial[] localReferenciaComercial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localReferenciaComercialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ReferenciaComercial[]
		 */
		public ReferenciaComercial[] getReferenciaComercial() {
			return localReferenciaComercial;
		}

		/**
		 * validate the array for ReferenciaComercial
		 */
		protected void validateReferenciaComercial(ReferenciaComercial[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ReferenciaComercial
		 */
		public void setReferenciaComercial(ReferenciaComercial[] param) {

			validateReferenciaComercial(param);

			if (param != null) {
				// update the setting tracker
				localReferenciaComercialTracker = true;
			} else {
				localReferenciaComercialTracker = false;

			}

			this.localReferenciaComercial = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            ReferenciaComercial
		 */
		public void addReferenciaComercial(ReferenciaComercial param) {
			if (localReferenciaComercial == null) {
				localReferenciaComercial = new ReferenciaComercial[] {};
			}

			// update the setting tracker
			localReferenciaComercialTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localReferenciaComercial);
			list.add(param);
			this.localReferenciaComercial = (ReferenciaComercial[]) list
					.toArray(new ReferenciaComercial[list.size()]);

		}

		/**
		 * field for DataEmissaoPrimeiroCheque This was an Attribute!
		 */

		protected java.util.Calendar localDataEmissaoPrimeiroCheque;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataEmissaoPrimeiroCheque() {
			return localDataEmissaoPrimeiroCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataEmissaoPrimeiroCheque
		 */
		public void setDataEmissaoPrimeiroCheque(java.util.Calendar param) {

			this.localDataEmissaoPrimeiroCheque = param;

		}

		/**
		 * field for DataEmissaoUltimoCheque This was an Attribute!
		 */

		protected java.util.Calendar localDataEmissaoUltimoCheque;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataEmissaoUltimoCheque() {
			return localDataEmissaoUltimoCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataEmissaoUltimoCheque
		 */
		public void setDataEmissaoUltimoCheque(java.util.Calendar param) {

			this.localDataEmissaoUltimoCheque = param;

		}

		/**
		 * field for TotalChequesAPrazoEmitidos This was an Attribute!
		 */

		protected int localTotalChequesAPrazoEmitidos;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getTotalChequesAPrazoEmitidos() {
			return localTotalChequesAPrazoEmitidos;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TotalChequesAPrazoEmitidos
		 */
		public void setTotalChequesAPrazoEmitidos(int param) {

			this.localTotalChequesAPrazoEmitidos = param;

		}

		/**
		 * field for TotalChequesAPrazoEntre31E60Dias This was an Attribute!
		 */

		protected int localTotalChequesAPrazoEntre31E60Dias;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getTotalChequesAPrazoEntre31E60Dias() {
			return localTotalChequesAPrazoEntre31E60Dias;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TotalChequesAPrazoEntre31E60Dias
		 */
		public void setTotalChequesAPrazoEntre31E60Dias(int param) {

			this.localTotalChequesAPrazoEntre31E60Dias = param;

		}

		/**
		 * field for TotalChequesAPrazoEntre61E90Dias This was an Attribute!
		 */

		protected int localTotalChequesAPrazoEntre61E90Dias;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getTotalChequesAPrazoEntre61E90Dias() {
			return localTotalChequesAPrazoEntre61E90Dias;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TotalChequesAPrazoEntre61E90Dias
		 */
		public void setTotalChequesAPrazoEntre61E90Dias(int param) {

			this.localTotalChequesAPrazoEntre61E90Dias = param;

		}

		/**
		 * field for TotalChequesAPrazoUltimos30Dias This was an Attribute!
		 */

		protected int localTotalChequesAPrazoUltimos30Dias;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getTotalChequesAPrazoUltimos30Dias() {
			return localTotalChequesAPrazoUltimos30Dias;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TotalChequesAPrazoUltimos30Dias
		 */
		public void setTotalChequesAPrazoUltimos30Dias(int param) {

			this.localTotalChequesAPrazoUltimos30Dias = param;

		}

		/**
		 * field for TotalChequesAVista This was an Attribute!
		 */

		protected int localTotalChequesAVista;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getTotalChequesAVista() {
			return localTotalChequesAVista;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TotalChequesAVista
		 */
		public void setTotalChequesAVista(int param) {

			this.localTotalChequesAVista = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoConsultaRealizadaCheque.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Consulta-Realizada-Cheque",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Consulta-Realizada-Cheque",
							xmlWriter);
				}

			}

			if (localDataEmissaoPrimeiroCheque != null) {

				writeAttribute(
						"",
						"data-emissao-primeiro-cheque",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataEmissaoPrimeiroCheque),
						xmlWriter);

			}

			if (localDataEmissaoUltimoCheque != null) {

				writeAttribute("", "data-emissao-ultimo-cheque",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataEmissaoUltimoCheque),
						xmlWriter);

			}

			if (localTotalChequesAPrazoEmitidos != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"total-cheques-a-prazo-emitidos",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTotalChequesAPrazoEmitidos),
						xmlWriter);

			}

			if (localTotalChequesAPrazoEntre31E60Dias != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"total-cheques-a-prazo-entre-31-e-60dias",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTotalChequesAPrazoEntre31E60Dias),
						xmlWriter);

			}

			if (localTotalChequesAPrazoEntre61E90Dias != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"total-cheques-a-prazo-entre-61-e-90dias",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTotalChequesAPrazoEntre61E90Dias),
						xmlWriter);

			}

			if (localTotalChequesAPrazoUltimos30Dias != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"total-cheques-a-prazo-ultimos-30dias",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTotalChequesAPrazoUltimos30Dias),
						xmlWriter);

			}

			if (localTotalChequesAVista != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "total-cheques-a-vista",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTotalChequesAVista),
						xmlWriter);

			}
			if (localReferenciaComercialTracker) {
				if (localReferenciaComercial != null) {
					for (int i = 0; i < localReferenciaComercial.length; i++) {
						if (localReferenciaComercial[i] != null) {
							localReferenciaComercial[i].serialize(
									new javax.xml.namespace.QName("",
											"referencia-comercial"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"referencia-comercial cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localReferenciaComercialTracker) {
				if (localReferenciaComercial != null) {
					for (int i = 0; i < localReferenciaComercial.length; i++) {

						if (localReferenciaComercial[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"referencia-comercial"));
							elementList.add(localReferenciaComercial[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"referencia-comercial cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-emissao-primeiro-cheque"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataEmissaoPrimeiroCheque));

			attribList.add(new javax.xml.namespace.QName("",
					"data-emissao-ultimo-cheque"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataEmissaoUltimoCheque));

			attribList.add(new javax.xml.namespace.QName("",
					"total-cheques-a-prazo-emitidos"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTotalChequesAPrazoEmitidos));

			attribList.add(new javax.xml.namespace.QName("",
					"total-cheques-a-prazo-entre-31-e-60dias"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTotalChequesAPrazoEntre31E60Dias));

			attribList.add(new javax.xml.namespace.QName("",
					"total-cheques-a-prazo-entre-61-e-90dias"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTotalChequesAPrazoEntre61E90Dias));

			attribList.add(new javax.xml.namespace.QName("",
					"total-cheques-a-prazo-ultimos-30dias"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTotalChequesAPrazoUltimos30Dias));

			attribList.add(new javax.xml.namespace.QName("",
					"total-cheques-a-vista"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTotalChequesAVista));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoConsultaRealizadaCheque parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoConsultaRealizadaCheque object = new InsumoConsultaRealizadaCheque();

//				int event;
//				java.lang.String nillableValue = null;
//				java.lang.String prefix = "";
//				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Consulta-Realizada-Cheque"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoConsultaRealizadaCheque) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-emissao-primeiro-cheque"
					java.lang.String tempAttribDataEmissaoPrimeiroCheque =

					reader.getAttributeValue(null,
							"data-emissao-primeiro-cheque");

					if (tempAttribDataEmissaoPrimeiroCheque != null) {
						java.lang.String content = tempAttribDataEmissaoPrimeiroCheque;

						object.setDataEmissaoPrimeiroCheque(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataEmissaoPrimeiroCheque));

					} else {

					}
					handledAttributes.add("data-emissao-primeiro-cheque");

					// handle attribute "data-emissao-ultimo-cheque"
					java.lang.String tempAttribDataEmissaoUltimoCheque =

					reader.getAttributeValue(null, "data-emissao-ultimo-cheque");

					if (tempAttribDataEmissaoUltimoCheque != null) {
						java.lang.String content = tempAttribDataEmissaoUltimoCheque;

						object.setDataEmissaoUltimoCheque(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataEmissaoUltimoCheque));

					} else {

					}
					handledAttributes.add("data-emissao-ultimo-cheque");

					// handle attribute "total-cheques-a-prazo-emitidos"
					java.lang.String tempAttribTotalChequesAPrazoEmitidos =

					reader.getAttributeValue(null,
							"total-cheques-a-prazo-emitidos");

					if (tempAttribTotalChequesAPrazoEmitidos != null) {
						java.lang.String content = tempAttribTotalChequesAPrazoEmitidos;

						object.setTotalChequesAPrazoEmitidos(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribTotalChequesAPrazoEmitidos));

					} else {

						object.setTotalChequesAPrazoEmitidos(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("total-cheques-a-prazo-emitidos");

					// handle attribute
					// "total-cheques-a-prazo-entre-31-e-60dias"
					java.lang.String tempAttribTotalChequesAPrazoEntre31E60Dias =

					reader.getAttributeValue(null,
							"total-cheques-a-prazo-entre-31-e-60dias");

					if (tempAttribTotalChequesAPrazoEntre31E60Dias != null) {
						java.lang.String content = tempAttribTotalChequesAPrazoEntre31E60Dias;

						object.setTotalChequesAPrazoEntre31E60Dias(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribTotalChequesAPrazoEntre31E60Dias));

					} else {

						object.setTotalChequesAPrazoEntre31E60Dias(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes
							.add("total-cheques-a-prazo-entre-31-e-60dias");

					// handle attribute
					// "total-cheques-a-prazo-entre-61-e-90dias"
					java.lang.String tempAttribTotalChequesAPrazoEntre61E90Dias =

					reader.getAttributeValue(null,
							"total-cheques-a-prazo-entre-61-e-90dias");

					if (tempAttribTotalChequesAPrazoEntre61E90Dias != null) {
						java.lang.String content = tempAttribTotalChequesAPrazoEntre61E90Dias;

						object.setTotalChequesAPrazoEntre61E90Dias(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribTotalChequesAPrazoEntre61E90Dias));

					} else {

						object.setTotalChequesAPrazoEntre61E90Dias(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes
							.add("total-cheques-a-prazo-entre-61-e-90dias");

					// handle attribute "total-cheques-a-prazo-ultimos-30dias"
					java.lang.String tempAttribTotalChequesAPrazoUltimos30Dias =

					reader.getAttributeValue(null,
							"total-cheques-a-prazo-ultimos-30dias");

					if (tempAttribTotalChequesAPrazoUltimos30Dias != null) {
//						java.lang.String content = tempAttribTotalChequesAPrazoUltimos30Dias;

						object.setTotalChequesAPrazoUltimos30Dias(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribTotalChequesAPrazoUltimos30Dias));

					} else {

						object.setTotalChequesAPrazoUltimos30Dias(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes
							.add("total-cheques-a-prazo-ultimos-30dias");

					// handle attribute "total-cheques-a-vista"
					java.lang.String tempAttribTotalChequesAVista =

					reader.getAttributeValue(null, "total-cheques-a-vista");

					if (tempAttribTotalChequesAVista != null) {
						java.lang.String content = tempAttribTotalChequesAVista;

						object.setTotalChequesAVista(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribTotalChequesAVista));

					} else {

						object.setTotalChequesAVista(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("total-cheques-a-vista");

					reader.next();

					java.util.ArrayList list1 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"referencia-comercial").equals(reader
									.getName())) {

						// Process the array and step past its final element's
						// end.
						list1.add(ReferenciaComercial.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone1 = false;
						while (!loopDone1) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone1 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"referencia-comercial").equals(reader
										.getName())) {
									list1.add(ReferenciaComercial.Factory
											.parse(reader));

								} else {
									loopDone1 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setReferenciaComercial((ReferenciaComercial[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(ReferenciaComercial.class,
										list1));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoHistoricoPagamento implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Historico-Pagamento Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DescricaoPeriodo This was an Attribute!
		 */

		protected java.lang.String localDescricaoPeriodo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoPeriodo() {
			return localDescricaoPeriodo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoPeriodo
		 */
		public void setDescricaoPeriodo(java.lang.String param) {

			this.localDescricaoPeriodo = param;

		}

		/**
		 * field for PercentualPeriodo This was an Attribute!
		 */

		protected int localPercentualPeriodo;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getPercentualPeriodo() {
			return localPercentualPeriodo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PercentualPeriodo
		 */
		public void setPercentualPeriodo(int param) {

			this.localPercentualPeriodo = param;

		}

		/**
		 * field for QuantidadeFontes This was an Attribute!
		 */

		protected int localQuantidadeFontes;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeFontes() {
			return localQuantidadeFontes;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeFontes
		 */
		public void setQuantidadeFontes(int param) {

			this.localQuantidadeFontes = param;

		}

		/**
		 * field for QuantidadePeriodo This was an Attribute!
		 */

		protected int localQuantidadePeriodo;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadePeriodo() {
			return localQuantidadePeriodo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadePeriodo
		 */
		public void setQuantidadePeriodo(int param) {

			this.localQuantidadePeriodo = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoHistoricoPagamento.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Historico-Pagamento", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Historico-Pagamento", xmlWriter);
				}

			}

			if (localDescricaoPeriodo != null) {

				writeAttribute("", "descricao-periodo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoPeriodo),
						xmlWriter);

			}

			if (localPercentualPeriodo != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "percentual-periodo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPercentualPeriodo),
						xmlWriter);

			}

			if (localQuantidadeFontes != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-fontes",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeFontes),
						xmlWriter);

			}

			if (localQuantidadePeriodo != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-periodo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadePeriodo),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-periodo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricaoPeriodo));

			attribList.add(new javax.xml.namespace.QName("",
					"percentual-periodo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPercentualPeriodo));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-fontes"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeFontes));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-periodo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadePeriodo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoHistoricoPagamento parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoHistoricoPagamento object = new InsumoHistoricoPagamento();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Historico-Pagamento".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoHistoricoPagamento) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao-periodo"
					java.lang.String tempAttribDescricaoPeriodo =

					reader.getAttributeValue(null, "descricao-periodo");

					if (tempAttribDescricaoPeriodo != null) {
						java.lang.String content = tempAttribDescricaoPeriodo;

						object.setDescricaoPeriodo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoPeriodo));

					} else {

					}
					handledAttributes.add("descricao-periodo");

					// handle attribute "percentual-periodo"
					java.lang.String tempAttribPercentualPeriodo =

					reader.getAttributeValue(null, "percentual-periodo");

					if (tempAttribPercentualPeriodo != null) {
						java.lang.String content = tempAttribPercentualPeriodo;

						object.setPercentualPeriodo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribPercentualPeriodo));

					} else {

						object.setPercentualPeriodo(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("percentual-periodo");

					// handle attribute "quantidade-fontes"
					java.lang.String tempAttribQuantidadeFontes =

					reader.getAttributeValue(null, "quantidade-fontes");

					if (tempAttribQuantidadeFontes != null) {
						java.lang.String content = tempAttribQuantidadeFontes;

						object.setQuantidadeFontes(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeFontes));

					} else {

						object.setQuantidadeFontes(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-fontes");

					// handle attribute "quantidade-periodo"
					java.lang.String tempAttribQuantidadePeriodo =

					reader.getAttributeValue(null, "quantidade-periodo");

					if (tempAttribQuantidadePeriodo != null) {
						java.lang.String content = tempAttribQuantidadePeriodo;

						object.setQuantidadePeriodo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadePeriodo));

					} else {

						object.setQuantidadePeriodo(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-periodo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class CodigoProduto implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"codigo-produto", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CodigoProduto
		 */

		protected java.lang.String localCodigoProduto;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCodigoProduto() {
			return localCodigoProduto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CodigoProduto
		 */
		public void setCodigoProduto(java.lang.String param) {

			this.localCodigoProduto = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					CodigoProduto.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = "http://webservice.consulta.spcjava.spcbrasil.org/";
			java.lang.String localName = "codigo-produto";

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":codigo-produto",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "codigo-produto", xmlWriter);
				}
			}

			if (localCodigoProduto == null) {

				// write the nil attribute
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "nil",
						"1", xmlWriter);

			} else {

				xmlWriter.writeCharacters(localCodigoProduto);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localCodigoProduto == null) {
				return new org.apache.axis2.databinding.utils.reader.NullXMLStreamReader(
						MY_QNAME);
			} else {
				return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
						MY_QNAME,
						new java.lang.Object[] {
								org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
								org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(localCodigoProduto) },
						null);
			}

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static CodigoProduto parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				CodigoProduto object = new CodigoProduto();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					nillableValue = reader.getAttributeValue(
							"http://www.w3.org/2001/XMLSchema-instance", "nil");
					if ("true".equals(nillableValue)
							|| "1".equals(nillableValue)) {
						// Skip the element and report the null value. It cannot
						// have subelements.
						while (!reader.isEndElement())
							reader.next();

						return object;

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement()) {

							if (reader.isStartElement()
									&& new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"codigo-produto").equals(reader
											.getName())) {

								nillableValue = reader
										.getAttributeValue(
												"http://www.w3.org/2001/XMLSchema-instance",
												"nil");
								if (!"true".equals(nillableValue)
										&& !"1".equals(nillableValue)) {

									java.lang.String content = reader
											.getElementText();

									object.setCodigoProduto(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(content));

								} else {

									reader.getElementText(); // throw away text
																// nodes if any.
								}

							} // End of if for expected property start element

							else {
								// A start element we are not expecting
								// indicates an invalid parameter was passed
								throw new org.apache.axis2.databinding.ADBException(
										"Unexpected subelement "
												+ reader.getLocalName());
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class TipoAcao implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Tipo-Acao Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Descricao This was an Attribute!
		 */

		protected java.lang.String localDescricao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricao() {
			return localDescricao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Descricao
		 */
		public void setDescricao(java.lang.String param) {

			this.localDescricao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					TipoAcao.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Tipo-Acao", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Tipo-Acao", xmlWriter);
				}

			}

			if (localDescricao != null) {

				writeAttribute("", "descricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricao), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "descricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static TipoAcao parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				TipoAcao object = new TipoAcao();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Tipo-Acao".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (TipoAcao) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao"
					java.lang.String tempAttribDescricao =

					reader.getAttributeValue(null, "descricao");

					if (tempAttribDescricao != null) {
						java.lang.String content = tempAttribDescricao;

						object.setDescricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricao));

					} else {

					}
					handledAttributes.add("descricao");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Produtos implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"produtos", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Produtos
		 */

		protected ListaProduto localProdutos;

		/**
		 * Auto generated getter method
		 * 
		 * @return ListaProduto
		 */
		public ListaProduto getProdutos() {
			return localProdutos;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Produtos
		 */
		public void setProdutos(ListaProduto param) {

			this.localProdutos = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Produtos.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localProdutos == null) {
				java.lang.String namespace = "http://webservice.consulta.spcjava.spcbrasil.org/";

				if (!namespace.equals("")) {
					java.lang.String prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "produtos",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "produtos");
					}

				} else {
					xmlWriter.writeStartElement("produtos");
				}

				// write the nil attribute
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "nil",
						"1", xmlWriter);
				xmlWriter.writeEndElement();
			} else {
				localProdutos.serialize(MY_QNAME, factory, xmlWriter);
			}

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localProdutos == null) {
				return new org.apache.axis2.databinding.utils.reader.NullXMLStreamReader(
						MY_QNAME);
			} else {
				return localProdutos.getPullParser(MY_QNAME);
			}

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Produtos parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Produtos object = new Produtos();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					nillableValue = reader.getAttributeValue(
							"http://www.w3.org/2001/XMLSchema-instance", "nil");
					if ("true".equals(nillableValue)
							|| "1".equals(nillableValue)) {
						// Skip the element and report the null value. It cannot
						// have subelements.
						while (!reader.isEndElement())
							reader.next();

						return object;

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement()) {

							if (reader.isStartElement()
									&& new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"produtos")
											.equals(reader.getName())) {

								nillableValue = reader
										.getAttributeValue(
												"http://www.w3.org/2001/XMLSchema-instance",
												"nil");
								if ("true".equals(nillableValue)
										|| "1".equals(nillableValue)) {
									object.setProdutos(null);
									reader.next();

								} else {

									object.setProdutos(ListaProduto.Factory
											.parse(reader));
								}
							} // End of if for expected property start element

							else {
								// A start element we are not expecting
								// indicates an invalid parameter was passed
								throw new org.apache.axis2.databinding.ADBException(
										"Unexpected subelement "
												+ reader.getLocalName());
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoInformacaoPoderJudiciario implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Informacao-Poder-Judiciario Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Vara
		 */

		protected Vara localVara;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localVaraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Vara
		 */
		public Vara getVara() {
			return localVara;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Vara
		 */
		public void setVara(Vara param) {

			if (param != null) {
				// update the setting tracker
				localVaraTracker = true;
			} else {
				localVaraTracker = false;

			}

			this.localVara = param;

		}

		/**
		 * field for DataDocumento This was an Attribute!
		 */

		protected java.util.Calendar localDataDocumento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataDocumento() {
			return localDataDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataDocumento
		 */
		public void setDataDocumento(java.util.Calendar param) {

			this.localDataDocumento = param;

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for EntidadeOrigem This was an Attribute!
		 */

		protected java.lang.String localEntidadeOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getEntidadeOrigem() {
			return localEntidadeOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EntidadeOrigem
		 */
		public void setEntidadeOrigem(java.lang.String param) {

			this.localEntidadeOrigem = param;

		}

		/**
		 * field for NumeroProcesso This was an Attribute!
		 */

		protected java.lang.String localNumeroProcesso;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroProcesso() {
			return localNumeroProcesso;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroProcesso
		 */
		public void setNumeroProcesso(java.lang.String param) {

			this.localNumeroProcesso = param;

		}

		/**
		 * field for Valor This was an Attribute!
		 */

		protected java.math.BigDecimal localValor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValor() {
			return localValor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Valor
		 */
		public void setValor(java.math.BigDecimal param) {

			this.localValor = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoInformacaoPoderJudiciario.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Informacao-Poder-Judiciario",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Informacao-Poder-Judiciario",
							xmlWriter);
				}

			}

			if (localDataDocumento != null) {

				writeAttribute("", "data-documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataDocumento), xmlWriter);

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localEntidadeOrigem != null) {

				writeAttribute("", "entidade-origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localEntidadeOrigem),
						xmlWriter);

			}

			if (localNumeroProcesso != null) {

				writeAttribute("", "numero-processo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroProcesso),
						xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}
			if (localVaraTracker) {
				if (localVara == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"vara cannot be null!!");
				}
				localVara.serialize(new javax.xml.namespace.QName("", "vara"),
						factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localVaraTracker) {
				elementList.add(new javax.xml.namespace.QName("", "vara"));

				if (localVara == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"vara cannot be null!!");
				}
				elementList.add(localVara);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataDocumento));

			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "entidade-origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localEntidadeOrigem));

			attribList
					.add(new javax.xml.namespace.QName("", "numero-processo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroProcesso));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoInformacaoPoderJudiciario parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoInformacaoPoderJudiciario object = new InsumoInformacaoPoderJudiciario();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Informacao-Poder-Judiciario"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoInformacaoPoderJudiciario) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-documento"
					java.lang.String tempAttribDataDocumento =

					reader.getAttributeValue(null, "data-documento");

					if (tempAttribDataDocumento != null) {
						java.lang.String content = tempAttribDataDocumento;

						object.setDataDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataDocumento));

					} else {

					}
					handledAttributes.add("data-documento");

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "entidade-origem"
					java.lang.String tempAttribEntidadeOrigem =

					reader.getAttributeValue(null, "entidade-origem");

					if (tempAttribEntidadeOrigem != null) {
						java.lang.String content = tempAttribEntidadeOrigem;

						object.setEntidadeOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribEntidadeOrigem));

					} else {

					}
					handledAttributes.add("entidade-origem");

					// handle attribute "numero-processo"
					java.lang.String tempAttribNumeroProcesso =

					reader.getAttributeValue(null, "numero-processo");

					if (tempAttribNumeroProcesso != null) {
						java.lang.String content = tempAttribNumeroProcesso;

						object.setNumeroProcesso(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroProcesso));

					} else {

					}
					handledAttributes.add("numero-processo");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "vara")
									.equals(reader.getName())) {

						object.setVara(Vara.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContraOrdemSRS extends InsumoContumaciaSRS
			implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contra-Ordem-SRS Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContraOrdemSRS.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Insumo-Contra-Ordem-SRS", xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Contra-Ordem-SRS", xmlWriter);
			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localMotivo != null) {

				writeAttribute("", "motivo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMotivo), xmlWriter);

			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Contra-Ordem-SRS"));
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "motivo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMotivo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContraOrdemSRS parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContraOrdemSRS object = new InsumoContraOrdemSRS();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contra-Ordem-SRS".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContraOrdemSRS) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "motivo"
					java.lang.String tempAttribMotivo =

					reader.getAttributeValue(null, "motivo");

					if (tempAttribMotivo != null) {
						java.lang.String content = tempAttribMotivo;

						object.setMotivo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMotivo));

					} else {

					}
					handledAttributes.add("motivo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Subjudice implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Subjudice Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for PracaSubjudice This was an Attribute!
		 */

		protected java.lang.String localPracaSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getPracaSubjudice() {
			return localPracaSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PracaSubjudice
		 */
		public void setPracaSubjudice(java.lang.String param) {

			this.localPracaSubjudice = param;

		}

		/**
		 * field for DistritoSubjudice This was an Attribute!
		 */

		protected java.lang.String localDistritoSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDistritoSubjudice() {
			return localDistritoSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DistritoSubjudice
		 */
		public void setDistritoSubjudice(java.lang.String param) {

			this.localDistritoSubjudice = param;

		}

		/**
		 * field for VaraSubjudice This was an Attribute!
		 */

		protected java.lang.String localVaraSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getVaraSubjudice() {
			return localVaraSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            VaraSubjudice
		 */
		public void setVaraSubjudice(java.lang.String param) {

			this.localVaraSubjudice = param;

		}

		/**
		 * field for DataSubjudice This was an Attribute!
		 */

		protected java.util.Calendar localDataSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataSubjudice() {
			return localDataSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataSubjudice
		 */
		public void setDataSubjudice(java.util.Calendar param) {

			this.localDataSubjudice = param;

		}

		/**
		 * field for ProcessoSubjudice This was an Attribute!
		 */

		protected java.lang.String localProcessoSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getProcessoSubjudice() {
			return localProcessoSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ProcessoSubjudice
		 */
		public void setProcessoSubjudice(java.lang.String param) {

			this.localProcessoSubjudice = param;

		}

		/**
		 * field for MensagemSubjudice This was an Attribute!
		 */

		protected java.lang.String localMensagemSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMensagemSubjudice() {
			return localMensagemSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemSubjudice
		 */
		public void setMensagemSubjudice(java.lang.String param) {

			this.localMensagemSubjudice = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Subjudice.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Subjudice", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Subjudice", xmlWriter);
				}

			}

			if (localPracaSubjudice != null) {

				writeAttribute("", "praca-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPracaSubjudice),
						xmlWriter);

			}

			if (localDistritoSubjudice != null) {

				writeAttribute("", "distrito-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDistritoSubjudice),
						xmlWriter);

			}

			if (localVaraSubjudice != null) {

				writeAttribute("", "vara-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localVaraSubjudice), xmlWriter);

			}

			if (localDataSubjudice != null) {

				writeAttribute("", "data-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataSubjudice), xmlWriter);

			}

			if (localProcessoSubjudice != null) {

				writeAttribute("", "processo-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localProcessoSubjudice),
						xmlWriter);

			}

			if (localMensagemSubjudice != null) {

				writeAttribute("", "mensagem-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMensagemSubjudice),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList
					.add(new javax.xml.namespace.QName("", "praca-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPracaSubjudice));

			attribList.add(new javax.xml.namespace.QName("",
					"distrito-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDistritoSubjudice));

			attribList.add(new javax.xml.namespace.QName("", "vara-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localVaraSubjudice));

			attribList.add(new javax.xml.namespace.QName("", "data-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataSubjudice));

			attribList.add(new javax.xml.namespace.QName("",
					"processo-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localProcessoSubjudice));

			attribList.add(new javax.xml.namespace.QName("",
					"mensagem-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMensagemSubjudice));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Subjudice parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Subjudice object = new Subjudice();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Subjudice".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Subjudice) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "praca-subjudice"
					java.lang.String tempAttribPracaSubjudice =

					reader.getAttributeValue(null, "praca-subjudice");

					if (tempAttribPracaSubjudice != null) {
						java.lang.String content = tempAttribPracaSubjudice;

						object.setPracaSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribPracaSubjudice));

					} else {

					}
					handledAttributes.add("praca-subjudice");

					// handle attribute "distrito-subjudice"
					java.lang.String tempAttribDistritoSubjudice =

					reader.getAttributeValue(null, "distrito-subjudice");

					if (tempAttribDistritoSubjudice != null) {
						java.lang.String content = tempAttribDistritoSubjudice;

						object.setDistritoSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDistritoSubjudice));

					} else {

					}
					handledAttributes.add("distrito-subjudice");

					// handle attribute "vara-subjudice"
					java.lang.String tempAttribVaraSubjudice =

					reader.getAttributeValue(null, "vara-subjudice");

					if (tempAttribVaraSubjudice != null) {
						java.lang.String content = tempAttribVaraSubjudice;

						object.setVaraSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribVaraSubjudice));

					} else {

					}
					handledAttributes.add("vara-subjudice");

					// handle attribute "data-subjudice"
					java.lang.String tempAttribDataSubjudice =

					reader.getAttributeValue(null, "data-subjudice");

					if (tempAttribDataSubjudice != null) {
						java.lang.String content = tempAttribDataSubjudice;

						object.setDataSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataSubjudice));

					} else {

					}
					handledAttributes.add("data-subjudice");

					// handle attribute "processo-subjudice"
					java.lang.String tempAttribProcessoSubjudice =

					reader.getAttributeValue(null, "processo-subjudice");

					if (tempAttribProcessoSubjudice != null) {
						java.lang.String content = tempAttribProcessoSubjudice;

						object.setProcessoSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribProcessoSubjudice));

					} else {

					}
					handledAttributes.add("processo-subjudice");

					// handle attribute "mensagem-subjudice"
					java.lang.String tempAttribMensagemSubjudice =

					reader.getAttributeValue(null, "mensagem-subjudice");

					if (tempAttribMensagemSubjudice != null) {
						java.lang.String content = tempAttribMensagemSubjudice;

						object.setMensagemSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMensagemSubjudice));

					} else {

					}
					handledAttributes.add("mensagem-subjudice");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoRiskscoring6Meses implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Riskscoring-6-Meses Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for HorizonteTempo
		 */

		protected int localHorizonteTempo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localHorizonteTempoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getHorizonteTempo() {
			return localHorizonteTempo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            HorizonteTempo
		 */
		public void setHorizonteTempo(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localHorizonteTempoTracker = false;

			} else {
				localHorizonteTempoTracker = true;
			}

			this.localHorizonteTempo = param;

		}

		/**
		 * field for MensagemInterpretacao
		 */

		protected java.lang.String localMensagemInterpretacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMensagemInterpretacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMensagemInterpretacao() {
			return localMensagemInterpretacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemInterpretacao
		 */
		public void setMensagemInterpretacao(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localMensagemInterpretacaoTracker = true;
			} else {
				localMensagemInterpretacaoTracker = false;

			}

			this.localMensagemInterpretacao = param;

		}

		/**
		 * field for MensagemPrinad
		 */

		protected java.lang.String localMensagemPrinad;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMensagemPrinadTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMensagemPrinad() {
			return localMensagemPrinad;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemPrinad
		 */
		public void setMensagemPrinad(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localMensagemPrinadTracker = true;
			} else {
				localMensagemPrinadTracker = false;

			}

			this.localMensagemPrinad = param;

		}

		/**
		 * field for MensagemRiskscoring This was an Array!
		 */

		protected MensagemRiskscoring[] localMensagemRiskscoring;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMensagemRiskscoringTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return MensagemRiskscoring[]
		 */
		public MensagemRiskscoring[] getMensagemRiskscoring() {
			return localMensagemRiskscoring;
		}

		/**
		 * validate the array for MensagemRiskscoring
		 */
		protected void validateMensagemRiskscoring(MensagemRiskscoring[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemRiskscoring
		 */
		public void setMensagemRiskscoring(MensagemRiskscoring[] param) {

			validateMensagemRiskscoring(param);

			if (param != null) {
				// update the setting tracker
				localMensagemRiskscoringTracker = true;
			} else {
				localMensagemRiskscoringTracker = false;

			}

			this.localMensagemRiskscoring = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            MensagemRiskscoring
		 */
		public void addMensagemRiskscoring(MensagemRiskscoring param) {
			if (localMensagemRiskscoring == null) {
				localMensagemRiskscoring = new MensagemRiskscoring[] {};
			}

			// update the setting tracker
			localMensagemRiskscoringTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localMensagemRiskscoring);
			list.add(param);
			this.localMensagemRiskscoring = (MensagemRiskscoring[]) list
					.toArray(new MensagemRiskscoring[list.size()]);

		}

		/**
		 * field for DataFator This was an Attribute!
		 */

		protected java.util.Calendar localDataFator;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataFator() {
			return localDataFator;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataFator
		 */
		public void setDataFator(java.util.Calendar param) {

			this.localDataFator = param;

		}

		/**
		 * field for FatorPrinad This was an Attribute!
		 */

		protected java.math.BigDecimal localFatorPrinad;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getFatorPrinad() {
			return localFatorPrinad;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            FatorPrinad
		 */
		public void setFatorPrinad(java.math.BigDecimal param) {

			this.localFatorPrinad = param;

		}

		/**
		 * field for FatorRiskscoring This was an Attribute!
		 */

		protected java.math.BigDecimal localFatorRiskscoring;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getFatorRiskscoring() {
			return localFatorRiskscoring;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            FatorRiskscoring
		 */
		public void setFatorRiskscoring(java.math.BigDecimal param) {

			this.localFatorRiskscoring = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoRiskscoring6Meses.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Riskscoring-6-Meses", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Riskscoring-6-Meses", xmlWriter);
				}

			}

			if (localDataFator != null) {

				writeAttribute("", "data-fator",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataFator), xmlWriter);

			}

			if (localFatorPrinad != null) {

				writeAttribute("", "fator-prinad",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFatorPrinad), xmlWriter);

			}

			if (localFatorRiskscoring != null) {

				writeAttribute("", "fator-riskscoring",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFatorRiskscoring),
						xmlWriter);

			}
			if (localHorizonteTempoTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "horizonte-tempo",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"horizonte-tempo");
					}

				} else {
					xmlWriter.writeStartElement("horizonte-tempo");
				}

				if (localHorizonteTempo == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"horizonte-tempo cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localHorizonteTempo));
				}

				xmlWriter.writeEndElement();
			}
			if (localMensagemInterpretacaoTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"mensagem-interpretacao", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"mensagem-interpretacao");
					}

				} else {
					xmlWriter.writeStartElement("mensagem-interpretacao");
				}

				if (localMensagemInterpretacao == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-interpretacao cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localMensagemInterpretacao);

				}

				xmlWriter.writeEndElement();
			}
			if (localMensagemPrinadTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "mensagem-prinad",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"mensagem-prinad");
					}

				} else {
					xmlWriter.writeStartElement("mensagem-prinad");
				}

				if (localMensagemPrinad == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-prinad cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localMensagemPrinad);

				}

				xmlWriter.writeEndElement();
			}
			if (localMensagemRiskscoringTracker) {
				if (localMensagemRiskscoring != null) {
					for (int i = 0; i < localMensagemRiskscoring.length; i++) {
						if (localMensagemRiskscoring[i] != null) {
							localMensagemRiskscoring[i].serialize(
									new javax.xml.namespace.QName("",
											"mensagem-riskscoring"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-riskscoring cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localHorizonteTempoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"horizonte-tempo"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localHorizonteTempo));
			}
			if (localMensagemInterpretacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"mensagem-interpretacao"));

				if (localMensagemInterpretacao != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localMensagemInterpretacao));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-interpretacao cannot be null!!");
				}
			}
			if (localMensagemPrinadTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"mensagem-prinad"));

				if (localMensagemPrinad != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localMensagemPrinad));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-prinad cannot be null!!");
				}
			}
			if (localMensagemRiskscoringTracker) {
				if (localMensagemRiskscoring != null) {
					for (int i = 0; i < localMensagemRiskscoring.length; i++) {

						if (localMensagemRiskscoring[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"mensagem-riskscoring"));
							elementList.add(localMensagemRiskscoring[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-riskscoring cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("", "data-fator"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataFator));

			attribList.add(new javax.xml.namespace.QName("", "fator-prinad"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFatorPrinad));

			attribList.add(new javax.xml.namespace.QName("",
					"fator-riskscoring"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFatorRiskscoring));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoRiskscoring6Meses parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoRiskscoring6Meses object = new InsumoRiskscoring6Meses();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Riskscoring-6-Meses".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoRiskscoring6Meses) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-fator"
					java.lang.String tempAttribDataFator =

					reader.getAttributeValue(null, "data-fator");

					if (tempAttribDataFator != null) {
						java.lang.String content = tempAttribDataFator;

						object.setDataFator(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataFator));

					} else {

					}
					handledAttributes.add("data-fator");

					// handle attribute "fator-prinad"
					java.lang.String tempAttribFatorPrinad =

					reader.getAttributeValue(null, "fator-prinad");

					if (tempAttribFatorPrinad != null) {
						java.lang.String content = tempAttribFatorPrinad;

						object.setFatorPrinad(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribFatorPrinad));

					} else {

					}
					handledAttributes.add("fator-prinad");

					// handle attribute "fator-riskscoring"
					java.lang.String tempAttribFatorRiskscoring =

					reader.getAttributeValue(null, "fator-riskscoring");

					if (tempAttribFatorRiskscoring != null) {
						java.lang.String content = tempAttribFatorRiskscoring;

						object.setFatorRiskscoring(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribFatorRiskscoring));

					} else {

					}
					handledAttributes.add("fator-riskscoring");

					reader.next();

					java.util.ArrayList list4 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"horizonte-tempo").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setHorizonteTempo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setHorizonteTempo(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-interpretacao").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setMensagemInterpretacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-prinad").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setMensagemPrinad(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-riskscoring").equals(reader
									.getName())) {

						// Process the array and step past its final element's
						// end.
						list4.add(MensagemRiskscoring.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone4 = false;
						while (!loopDone4) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone4 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"mensagem-riskscoring").equals(reader
										.getName())) {
									list4.add(MensagemRiskscoring.Factory
											.parse(reader));

								} else {
									loopDone4 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setMensagemRiskscoring((MensagemRiskscoring[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(MensagemRiskscoring.class,
										list4));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Cnpj implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name = Cnpj
		 * Namespace URI = http://webservice.consulta.spcjava.spcbrasil.org/
		 * Namespace Prefix = ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Numero This was an Attribute!
		 */

		protected java.lang.String localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(java.lang.String param) {

			this.localNumero = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Cnpj.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cnpj", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cnpj", xmlWriter);
				}

			}

			if (localNumero != null) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Cnpj parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Cnpj object = new Cnpj();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cnpj".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Cnpj) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumero));

					} else {

					}
					handledAttributes.add("numero");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoAntecessora implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Antecessora Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataMotivo This was an Attribute!
		 */

		protected java.util.Calendar localDataMotivo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataMotivo() {
			return localDataMotivo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataMotivo
		 */
		public void setDataMotivo(java.util.Calendar param) {

			this.localDataMotivo = param;

		}

		/**
		 * field for RazaoSocialAnterior This was an Attribute!
		 */

		protected java.lang.String localRazaoSocialAnterior;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getRazaoSocialAnterior() {
			return localRazaoSocialAnterior;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RazaoSocialAnterior
		 */
		public void setRazaoSocialAnterior(java.lang.String param) {

			this.localRazaoSocialAnterior = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoAntecessora.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Antecessora",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Antecessora", xmlWriter);
				}

			}

			if (localDataMotivo != null) {

				writeAttribute("", "data-motivo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataMotivo), xmlWriter);

			}

			if (localRazaoSocialAnterior != null) {

				writeAttribute("", "razao-social-anterior",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRazaoSocialAnterior),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "data-motivo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataMotivo));

			attribList.add(new javax.xml.namespace.QName("",
					"razao-social-anterior"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRazaoSocialAnterior));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoAntecessora parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoAntecessora object = new InsumoAntecessora();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Antecessora".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoAntecessora) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-motivo"
					java.lang.String tempAttribDataMotivo =

					reader.getAttributeValue(null, "data-motivo");

					if (tempAttribDataMotivo != null) {
						java.lang.String content = tempAttribDataMotivo;

						object.setDataMotivo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataMotivo));

					} else {

					}
					handledAttributes.add("data-motivo");

					// handle attribute "razao-social-anterior"
					java.lang.String tempAttribRazaoSocialAnterior =

					reader.getAttributeValue(null, "razao-social-anterior");

					if (tempAttribRazaoSocialAnterior != null) {
						java.lang.String content = tempAttribRazaoSocialAnterior;

						object.setRazaoSocialAnterior(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribRazaoSocialAnterior));

					} else {

					}
					handledAttributes.add("razao-social-anterior");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ProdutoE implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/", "produto",
				"ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Produto
		 */

		protected Produto localProduto;

		/**
		 * Auto generated getter method
		 * 
		 * @return Produto
		 */
		public Produto getProduto() {
			return localProduto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Produto
		 */
		public void setProduto(Produto param) {

			this.localProduto = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ProdutoE.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localProduto == null) {
				java.lang.String namespace = "http://webservice.consulta.spcjava.spcbrasil.org/";

				if (!namespace.equals("")) {
					java.lang.String prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "produto",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "produto");
					}

				} else {
					xmlWriter.writeStartElement("produto");
				}

				// write the nil attribute
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "nil",
						"1", xmlWriter);
				xmlWriter.writeEndElement();
			} else {
				localProduto.serialize(MY_QNAME, factory, xmlWriter);
			}

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localProduto == null) {
				return new org.apache.axis2.databinding.utils.reader.NullXMLStreamReader(
						MY_QNAME);
			} else {
				return localProduto.getPullParser(MY_QNAME);
			}

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ProdutoE parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ProdutoE object = new ProdutoE();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					nillableValue = reader.getAttributeValue(
							"http://www.w3.org/2001/XMLSchema-instance", "nil");
					if ("true".equals(nillableValue)
							|| "1".equals(nillableValue)) {
						// Skip the element and report the null value. It cannot
						// have subelements.
						while (!reader.isEndElement())
							reader.next();

						return object;

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement()) {

							if (reader.isStartElement()
									&& new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"produto").equals(reader.getName())) {

								nillableValue = reader
										.getAttributeValue(
												"http://www.w3.org/2001/XMLSchema-instance",
												"nil");
								if ("true".equals(nillableValue)
										|| "1".equals(nillableValue)) {
									object.setProduto(null);
									reader.next();

								} else {

									object.setProduto(Produto.Factory
											.parse(reader));
								}
							} // End of if for expected property start element

							else {
								// A start element we are not expecting
								// indicates an invalid parameter was passed
								throw new org.apache.axis2.databinding.ADBException(
										"Unexpected subelement "
												+ reader.getLocalName());
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoChequeLojista implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Cheque-Lojista Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Alinea
		 */

		protected Alinea localAlinea;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAlineaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Alinea
		 */
		public Alinea getAlinea() {
			return localAlinea;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Alinea
		 */
		public void setAlinea(Alinea param) {

			if (param != null) {
				// update the setting tracker
				localAlineaTracker = true;
			} else {
				localAlineaTracker = false;

			}

			this.localAlinea = param;

		}

		/**
		 * field for ChequeInicial
		 */

		protected ChequeLojista localChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ChequeLojista
		 */
		public ChequeLojista getChequeInicial() {
			return localChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeInicial
		 */
		public void setChequeInicial(ChequeLojista param) {

			if (param != null) {
				// update the setting tracker
				localChequeInicialTracker = true;
			} else {
				localChequeInicialTracker = false;

			}

			this.localChequeInicial = param;

		}

		/**
		 * field for ChequeFinal
		 */

		protected ChequeFinal localChequeFinal;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeFinalTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ChequeFinal
		 */
		public ChequeFinal getChequeFinal() {
			return localChequeFinal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeFinal
		 */
		public void setChequeFinal(ChequeFinal param) {

			if (param != null) {
				// update the setting tracker
				localChequeFinalTracker = true;
			} else {
				localChequeFinalTracker = false;

			}

			this.localChequeFinal = param;

		}

		/**
		 * field for CidadeAssociado
		 */

		protected Cidade localCidadeAssociado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeAssociadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidadeAssociado() {
			return localCidadeAssociado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CidadeAssociado
		 */
		public void setCidadeAssociado(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeAssociadoTracker = true;
			} else {
				localCidadeAssociadoTracker = false;

			}

			this.localCidadeAssociado = param;

		}

		/**
		 * field for NomeAssociado This was an Attribute!
		 */

		protected java.lang.String localNomeAssociado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeAssociado() {
			return localNomeAssociado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeAssociado
		 */
		public void setNomeAssociado(java.lang.String param) {

			this.localNomeAssociado = param;

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for NomeEntidade This was an Attribute!
		 */

		protected java.lang.String localNomeEntidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeEntidade() {
			return localNomeEntidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeEntidade
		 */
		public void setNomeEntidade(java.lang.String param) {

			this.localNomeEntidade = param;

		}

		/**
		 * field for Informante This was an Attribute!
		 */

		protected java.lang.String localInformante;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getInformante() {
			return localInformante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Informante
		 */
		public void setInformante(java.lang.String param) {

			this.localInformante = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoChequeLojista.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Cheque-Lojista",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Cheque-Lojista", xmlWriter);
				}

			}

			if (localNomeAssociado != null) {

				writeAttribute("", "nome-associado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeAssociado), xmlWriter);

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localNomeEntidade != null) {

				writeAttribute("", "nome-entidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeEntidade), xmlWriter);

			}

			if (localInformante != null) {

				writeAttribute("", "informante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInformante), xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}
			if (localAlineaTracker) {
				if (localAlinea == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"alinea cannot be null!!");
				}
				localAlinea.serialize(new javax.xml.namespace.QName("",
						"alinea"), factory, xmlWriter);
			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			if (localCidadeAssociadoTracker) {
				if (localCidadeAssociado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-associado cannot be null!!");
				}
				localCidadeAssociado.serialize(new javax.xml.namespace.QName(
						"", "cidade-associado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localAlineaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "alinea"));

				if (localAlinea == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"alinea cannot be null!!");
				}
				elementList.add(localAlinea);
			}
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			if (localCidadeAssociadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cidade-associado"));

				if (localCidadeAssociado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-associado cannot be null!!");
				}
				elementList.add(localCidadeAssociado);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome-associado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeAssociado));

			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList.add(new javax.xml.namespace.QName("", "nome-entidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeEntidade));

			attribList.add(new javax.xml.namespace.QName("", "informante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInformante));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoChequeLojista parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoChequeLojista object = new InsumoChequeLojista();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Cheque-Lojista".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoChequeLojista) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome-associado"
					java.lang.String tempAttribNomeAssociado =

					reader.getAttributeValue(null, "nome-associado");

					if (tempAttribNomeAssociado != null) {
						java.lang.String content = tempAttribNomeAssociado;

						object.setNomeAssociado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeAssociado));

					} else {

					}
					handledAttributes.add("nome-associado");

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "nome-entidade"
					java.lang.String tempAttribNomeEntidade =

					reader.getAttributeValue(null, "nome-entidade");

					if (tempAttribNomeEntidade != null) {
						java.lang.String content = tempAttribNomeEntidade;

						object.setNomeEntidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeEntidade));

					} else {

					}
					handledAttributes.add("nome-entidade");

					// handle attribute "informante"
					java.lang.String tempAttribInformante =

					reader.getAttributeValue(null, "informante");

					if (tempAttribInformante != null) {
						java.lang.String content = tempAttribInformante;

						object.setInformante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInformante));

					} else {

					}
					handledAttributes.add("informante");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "alinea")
									.equals(reader.getName())) {

						object.setAlinea(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(ChequeLojista.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(ChequeFinal.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cidade-associado")
									.equals(reader.getName())) {

						object.setCidadeAssociado(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoInsumoChoice_type0 implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-InsumoChoice_type0 Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * Whenever a new property is set ensure all others are unset There can
		 * be only one choice and the last one wins
		 */
		private void clearAllSettingTrackers() {

			localDetalheGrafiaPjTracker = false;

			localDetalheSpcTracker = false;

			localDetalheChequeLojistaTracker = false;

			localDetalheCcfTracker = false;

			localDetalheContraOrdemTracker = false;

			localDetalheContraOrdemDocumentoDiferenteTracker = false;

			localDetalheContraOrdemAgenciaContaDiferenteTracker = false;

			localDetalheContraOrdemAgenciaDiferenteTracker = false;

			localDetalheContumaciaTracker = false;

			localDetalheDadosAgenciaBancariaTracker = false;

			localDetalheBancoAgenciaContaDocumentoDiferenteTracker = false;

			localDetalheConsultaRealizadaTracker = false;

			localDetalheCreditoConcedidoTracker = false;

			localDetalheAlertaDocumentoTracker = false;

			localDetalheAcaoTracker = false;

			localDetalheProtestoTracker = false;

			localDetalheParticipacaoEmpresaTracker = false;

			localDetalheSocioTracker = false;

			localDetalheAdministradorTracker = false;

			localDetalheEnderecoCepConsultadoTracker = false;

			localDetalheTelefoneConsultadoTracker = false;

			localDetalheTelefoneVinculadoConsumidorTracker = false;

			localDetalheTelefoneVinculadoAssinanteConsultadoTracker = false;

			localDetalheUltimoTelefoneInformadoTracker = false;

			localDetalheUltimoEnderecoInformadoTracker = false;

			localDetalheInformacaoPoderJudiciarioTracker = false;

			localDetalheRiskscoring6MesesTracker = false;

			localDetalheRiskscoring12MesesTracker = false;

			localDetalheChequeSemFundoAcheiTracker = false;

			localDetalheChequeSemFundoAcheiCcfTracker = false;

			localDetalheContumaciaSrsTracker = false;

			localDetalheParticipacaoFalenciaTracker = false;

			localDetalheDividaVencidaTracker = false;

			localDetalheRestricaoFinanceiraTracker = false;

			localDetalhePendenciaFinanceiraTracker = false;

			localDetalheChequeSemFundoVarejoTracker = false;

			localDetalheContraOrdemSrsTracker = false;

			localDetalheContraOrdemDocumentoDiferenteSrsTracker = false;

			localDetalheChequeOutrasOcorrenciasSrsTracker = false;

			localDetalheChequeConsultaOnlineSrsTracker = false;

			localDetalheConsultaRealizadaChequeTracker = false;

			localDetalheReferenciaisNegociosTracker = false;

			localDetalheHistoricoPagamentoTracker = false;

			localDetalheHistoricoChequeTracker = false;

			localDetalheHistoricoChequeDocumentoDiferenteTracker = false;

			localDetalheHistoricoContaCorrenteTracker = false;

			localDetalheRelacionamentoMaisAntigoComFornecedoresTracker = false;

			localDetalheRegistroConsultaTracker = false;

			localDetalheUltimasConsultasTracker = false;

			localDetalheCapitalSocialTracker = false;

			localDetalheAntecessoraTracker = false;

			localDetalheAtividadeEmpresaTracker = false;

			localDetalheFilialTracker = false;

			localDetalheInformacoesAdicionaisTracker = false;

			localDetalheIncorporacaoFusaoCisaoTracker = false;

			localDetalhePrincipaisProdutosTracker = false;

			localDetalheSpcScore3MesesTracker = false;

			localDetalheSpcScore12MesesTracker = false;

			localDetalheSpcObitoTracker = false;

			localDetalheConfirmacaoRgTracker = false;

		}

		/**
		 * field for DetalheGrafiaPj
		 */

		protected GrafiaPJ localDetalheGrafiaPj;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheGrafiaPjTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return GrafiaPJ
		 */
		public GrafiaPJ getDetalheGrafiaPj() {
			return localDetalheGrafiaPj;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheGrafiaPj
		 */
		public void setDetalheGrafiaPj(GrafiaPJ param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheGrafiaPjTracker = true;
			} else {
				localDetalheGrafiaPjTracker = false;

			}

			this.localDetalheGrafiaPj = param;

		}

		/**
		 * field for DetalheSpc
		 */

		protected InsumoSPC localDetalheSpc;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheSpcTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoSPC
		 */
		public InsumoSPC getDetalheSpc() {
			return localDetalheSpc;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheSpc
		 */
		public void setDetalheSpc(InsumoSPC param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheSpcTracker = true;
			} else {
				localDetalheSpcTracker = false;

			}

			this.localDetalheSpc = param;

		}

		/**
		 * field for DetalheChequeLojista
		 */

		protected InsumoChequeLojista localDetalheChequeLojista;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheChequeLojistaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoChequeLojista
		 */
		public InsumoChequeLojista getDetalheChequeLojista() {
			return localDetalheChequeLojista;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheChequeLojista
		 */
		public void setDetalheChequeLojista(InsumoChequeLojista param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheChequeLojistaTracker = true;
			} else {
				localDetalheChequeLojistaTracker = false;

			}

			this.localDetalheChequeLojista = param;

		}

		/**
		 * field for DetalheCcf
		 */

		protected InsumoCCF localDetalheCcf;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheCcfTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoCCF
		 */
		public InsumoCCF getDetalheCcf() {
			return localDetalheCcf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheCcf
		 */
		public void setDetalheCcf(InsumoCCF param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheCcfTracker = true;
			} else {
				localDetalheCcfTracker = false;

			}

			this.localDetalheCcf = param;

		}

		/**
		 * field for DetalheContraOrdem
		 */

		protected InsumoContraOrdem localDetalheContraOrdem;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContraOrdemTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContraOrdem
		 */
		public InsumoContraOrdem getDetalheContraOrdem() {
			return localDetalheContraOrdem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContraOrdem
		 */
		public void setDetalheContraOrdem(InsumoContraOrdem param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContraOrdemTracker = true;
			} else {
				localDetalheContraOrdemTracker = false;

			}

			this.localDetalheContraOrdem = param;

		}

		/**
		 * field for DetalheContraOrdemDocumentoDiferente
		 */

		protected InsumoContraOrdemDocumentoDiferente localDetalheContraOrdemDocumentoDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContraOrdemDocumentoDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContraOrdemDocumentoDiferente
		 */
		public InsumoContraOrdemDocumentoDiferente getDetalheContraOrdemDocumentoDiferente() {
			return localDetalheContraOrdemDocumentoDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContraOrdemDocumentoDiferente
		 */
		public void setDetalheContraOrdemDocumentoDiferente(
				InsumoContraOrdemDocumentoDiferente param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContraOrdemDocumentoDiferenteTracker = true;
			} else {
				localDetalheContraOrdemDocumentoDiferenteTracker = false;

			}

			this.localDetalheContraOrdemDocumentoDiferente = param;

		}

		/**
		 * field for DetalheContraOrdemAgenciaContaDiferente
		 */

		protected InsumoContraOrdemAgenciaContaDiferente localDetalheContraOrdemAgenciaContaDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContraOrdemAgenciaContaDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContraOrdemAgenciaContaDiferente
		 */
		public InsumoContraOrdemAgenciaContaDiferente getDetalheContraOrdemAgenciaContaDiferente() {
			return localDetalheContraOrdemAgenciaContaDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContraOrdemAgenciaContaDiferente
		 */
		public void setDetalheContraOrdemAgenciaContaDiferente(
				InsumoContraOrdemAgenciaContaDiferente param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContraOrdemAgenciaContaDiferenteTracker = true;
			} else {
				localDetalheContraOrdemAgenciaContaDiferenteTracker = false;

			}

			this.localDetalheContraOrdemAgenciaContaDiferente = param;

		}

		/**
		 * field for DetalheContraOrdemAgenciaDiferente
		 */

		protected InsumoContraOrdemAgenciaDiferente localDetalheContraOrdemAgenciaDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContraOrdemAgenciaDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContraOrdemAgenciaDiferente
		 */
		public InsumoContraOrdemAgenciaDiferente getDetalheContraOrdemAgenciaDiferente() {
			return localDetalheContraOrdemAgenciaDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContraOrdemAgenciaDiferente
		 */
		public void setDetalheContraOrdemAgenciaDiferente(
				InsumoContraOrdemAgenciaDiferente param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContraOrdemAgenciaDiferenteTracker = true;
			} else {
				localDetalheContraOrdemAgenciaDiferenteTracker = false;

			}

			this.localDetalheContraOrdemAgenciaDiferente = param;

		}

		/**
		 * field for DetalheContumacia
		 */

		protected InsumoContumacia localDetalheContumacia;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContumaciaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContumacia
		 */
		public InsumoContumacia getDetalheContumacia() {
			return localDetalheContumacia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContumacia
		 */
		public void setDetalheContumacia(InsumoContumacia param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContumaciaTracker = true;
			} else {
				localDetalheContumaciaTracker = false;

			}

			this.localDetalheContumacia = param;

		}

		/**
		 * field for DetalheDadosAgenciaBancaria
		 */

		protected DadosAgenciaBancaria localDetalheDadosAgenciaBancaria;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheDadosAgenciaBancariaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return DadosAgenciaBancaria
		 */
		public DadosAgenciaBancaria getDetalheDadosAgenciaBancaria() {
			return localDetalheDadosAgenciaBancaria;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheDadosAgenciaBancaria
		 */
		public void setDetalheDadosAgenciaBancaria(DadosAgenciaBancaria param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheDadosAgenciaBancariaTracker = true;
			} else {
				localDetalheDadosAgenciaBancariaTracker = false;

			}

			this.localDetalheDadosAgenciaBancaria = param;

		}

		/**
		 * field for DetalheBancoAgenciaContaDocumentoDiferente
		 */

		protected AgenciaContaDocumentoDiferente localDetalheBancoAgenciaContaDocumentoDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheBancoAgenciaContaDocumentoDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return AgenciaContaDocumentoDiferente
		 */
		public AgenciaContaDocumentoDiferente getDetalheBancoAgenciaContaDocumentoDiferente() {
			return localDetalheBancoAgenciaContaDocumentoDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheBancoAgenciaContaDocumentoDiferente
		 */
		public void setDetalheBancoAgenciaContaDocumentoDiferente(
				AgenciaContaDocumentoDiferente param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheBancoAgenciaContaDocumentoDiferenteTracker = true;
			} else {
				localDetalheBancoAgenciaContaDocumentoDiferenteTracker = false;

			}

			this.localDetalheBancoAgenciaContaDocumentoDiferente = param;

		}

		/**
		 * field for DetalheConsultaRealizada
		 */

		protected InsumoConsultaRealizada localDetalheConsultaRealizada;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheConsultaRealizadaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoConsultaRealizada
		 */
		public InsumoConsultaRealizada getDetalheConsultaRealizada() {
			return localDetalheConsultaRealizada;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheConsultaRealizada
		 */
		public void setDetalheConsultaRealizada(InsumoConsultaRealizada param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheConsultaRealizadaTracker = true;
			} else {
				localDetalheConsultaRealizadaTracker = false;

			}

			this.localDetalheConsultaRealizada = param;

		}

		/**
		 * field for DetalheCreditoConcedido
		 */

		protected InsumoCreditoConcedido localDetalheCreditoConcedido;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheCreditoConcedidoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoCreditoConcedido
		 */
		public InsumoCreditoConcedido getDetalheCreditoConcedido() {
			return localDetalheCreditoConcedido;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheCreditoConcedido
		 */
		public void setDetalheCreditoConcedido(InsumoCreditoConcedido param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheCreditoConcedidoTracker = true;
			} else {
				localDetalheCreditoConcedidoTracker = false;

			}

			this.localDetalheCreditoConcedido = param;

		}

		/**
		 * field for DetalheAlertaDocumento
		 */

		protected InsumoAlertaDocumento localDetalheAlertaDocumento;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheAlertaDocumentoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoAlertaDocumento
		 */
		public InsumoAlertaDocumento getDetalheAlertaDocumento() {
			return localDetalheAlertaDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheAlertaDocumento
		 */
		public void setDetalheAlertaDocumento(InsumoAlertaDocumento param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheAlertaDocumentoTracker = true;
			} else {
				localDetalheAlertaDocumentoTracker = false;

			}

			this.localDetalheAlertaDocumento = param;

		}

		/**
		 * field for DetalheAcao
		 */

		protected InsumoAcao localDetalheAcao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheAcaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoAcao
		 */
		public InsumoAcao getDetalheAcao() {
			return localDetalheAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheAcao
		 */
		public void setDetalheAcao(InsumoAcao param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheAcaoTracker = true;
			} else {
				localDetalheAcaoTracker = false;

			}

			this.localDetalheAcao = param;

		}

		/**
		 * field for DetalheProtesto
		 */

		protected InsumoProtesto localDetalheProtesto;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheProtestoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoProtesto
		 */
		public InsumoProtesto getDetalheProtesto() {
			return localDetalheProtesto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheProtesto
		 */
		public void setDetalheProtesto(InsumoProtesto param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheProtestoTracker = true;
			} else {
				localDetalheProtestoTracker = false;

			}

			this.localDetalheProtesto = param;

		}

		/**
		 * field for DetalheParticipacaoEmpresa
		 */

		protected InsumoParticipacaoEmpresas localDetalheParticipacaoEmpresa;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheParticipacaoEmpresaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoParticipacaoEmpresas
		 */
		public InsumoParticipacaoEmpresas getDetalheParticipacaoEmpresa() {
			return localDetalheParticipacaoEmpresa;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheParticipacaoEmpresa
		 */
		public void setDetalheParticipacaoEmpresa(
				InsumoParticipacaoEmpresas param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheParticipacaoEmpresaTracker = true;
			} else {
				localDetalheParticipacaoEmpresaTracker = false;

			}

			this.localDetalheParticipacaoEmpresa = param;

		}

		/**
		 * field for DetalheSocio
		 */

		protected InsumoQuadroSocietario localDetalheSocio;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheSocioTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoQuadroSocietario
		 */
		public InsumoQuadroSocietario getDetalheSocio() {
			return localDetalheSocio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheSocio
		 */
		public void setDetalheSocio(InsumoQuadroSocietario param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheSocioTracker = true;
			} else {
				localDetalheSocioTracker = false;

			}

			this.localDetalheSocio = param;

		}

		/**
		 * field for DetalheAdministrador
		 */

		protected InsumoQuadroAdministrativo localDetalheAdministrador;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheAdministradorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoQuadroAdministrativo
		 */
		public InsumoQuadroAdministrativo getDetalheAdministrador() {
			return localDetalheAdministrador;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheAdministrador
		 */
		public void setDetalheAdministrador(InsumoQuadroAdministrativo param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheAdministradorTracker = true;
			} else {
				localDetalheAdministradorTracker = false;

			}

			this.localDetalheAdministrador = param;

		}

		/**
		 * field for DetalheEnderecoCepConsultado
		 */

		protected InsumoEnderecoCEPConsultado localDetalheEnderecoCepConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheEnderecoCepConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoEnderecoCEPConsultado
		 */
		public InsumoEnderecoCEPConsultado getDetalheEnderecoCepConsultado() {
			return localDetalheEnderecoCepConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheEnderecoCepConsultado
		 */
		public void setDetalheEnderecoCepConsultado(
				InsumoEnderecoCEPConsultado param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheEnderecoCepConsultadoTracker = true;
			} else {
				localDetalheEnderecoCepConsultadoTracker = false;

			}

			this.localDetalheEnderecoCepConsultado = param;

		}

		/**
		 * field for DetalheTelefoneConsultado
		 */

		protected InsumoDadosTelefoneConsultado localDetalheTelefoneConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheTelefoneConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoDadosTelefoneConsultado
		 */
		public InsumoDadosTelefoneConsultado getDetalheTelefoneConsultado() {
			return localDetalheTelefoneConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheTelefoneConsultado
		 */
		public void setDetalheTelefoneConsultado(
				InsumoDadosTelefoneConsultado param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheTelefoneConsultadoTracker = true;
			} else {
				localDetalheTelefoneConsultadoTracker = false;

			}

			this.localDetalheTelefoneConsultado = param;

		}

		/**
		 * field for DetalheTelefoneVinculadoConsumidor
		 */

		protected InsumoTelefoneVinculadoConsumidor localDetalheTelefoneVinculadoConsumidor;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheTelefoneVinculadoConsumidorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoTelefoneVinculadoConsumidor
		 */
		public InsumoTelefoneVinculadoConsumidor getDetalheTelefoneVinculadoConsumidor() {
			return localDetalheTelefoneVinculadoConsumidor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheTelefoneVinculadoConsumidor
		 */
		public void setDetalheTelefoneVinculadoConsumidor(
				InsumoTelefoneVinculadoConsumidor param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheTelefoneVinculadoConsumidorTracker = true;
			} else {
				localDetalheTelefoneVinculadoConsumidorTracker = false;

			}

			this.localDetalheTelefoneVinculadoConsumidor = param;

		}

		/**
		 * field for DetalheTelefoneVinculadoAssinanteConsultado
		 */

		protected InsumoTelefoneVinculadoAssinanteConsultado localDetalheTelefoneVinculadoAssinanteConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheTelefoneVinculadoAssinanteConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoTelefoneVinculadoAssinanteConsultado
		 */
		public InsumoTelefoneVinculadoAssinanteConsultado getDetalheTelefoneVinculadoAssinanteConsultado() {
			return localDetalheTelefoneVinculadoAssinanteConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheTelefoneVinculadoAssinanteConsultado
		 */
		public void setDetalheTelefoneVinculadoAssinanteConsultado(
				InsumoTelefoneVinculadoAssinanteConsultado param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheTelefoneVinculadoAssinanteConsultadoTracker = true;
			} else {
				localDetalheTelefoneVinculadoAssinanteConsultadoTracker = false;

			}

			this.localDetalheTelefoneVinculadoAssinanteConsultado = param;

		}

		/**
		 * field for DetalheUltimoTelefoneInformado
		 */

		protected InsumoTelefoneConsultado localDetalheUltimoTelefoneInformado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheUltimoTelefoneInformadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoTelefoneConsultado
		 */
		public InsumoTelefoneConsultado getDetalheUltimoTelefoneInformado() {
			return localDetalheUltimoTelefoneInformado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheUltimoTelefoneInformado
		 */
		public void setDetalheUltimoTelefoneInformado(
				InsumoTelefoneConsultado param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheUltimoTelefoneInformadoTracker = true;
			} else {
				localDetalheUltimoTelefoneInformadoTracker = false;

			}

			this.localDetalheUltimoTelefoneInformado = param;

		}

		/**
		 * field for DetalheUltimoEnderecoInformado
		 */

		protected InsumoOcorrenciaConsumidor localDetalheUltimoEnderecoInformado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheUltimoEnderecoInformadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoOcorrenciaConsumidor
		 */
		public InsumoOcorrenciaConsumidor getDetalheUltimoEnderecoInformado() {
			return localDetalheUltimoEnderecoInformado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheUltimoEnderecoInformado
		 */
		public void setDetalheUltimoEnderecoInformado(
				InsumoOcorrenciaConsumidor param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheUltimoEnderecoInformadoTracker = true;
			} else {
				localDetalheUltimoEnderecoInformadoTracker = false;

			}

			this.localDetalheUltimoEnderecoInformado = param;

		}

		/**
		 * field for DetalheInformacaoPoderJudiciario
		 */

		protected InsumoInformacaoPoderJudiciario localDetalheInformacaoPoderJudiciario;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheInformacaoPoderJudiciarioTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoInformacaoPoderJudiciario
		 */
		public InsumoInformacaoPoderJudiciario getDetalheInformacaoPoderJudiciario() {
			return localDetalheInformacaoPoderJudiciario;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheInformacaoPoderJudiciario
		 */
		public void setDetalheInformacaoPoderJudiciario(
				InsumoInformacaoPoderJudiciario param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheInformacaoPoderJudiciarioTracker = true;
			} else {
				localDetalheInformacaoPoderJudiciarioTracker = false;

			}

			this.localDetalheInformacaoPoderJudiciario = param;

		}

		/**
		 * field for DetalheRiskscoring6Meses
		 */

		protected InsumoRiskscoring6Meses localDetalheRiskscoring6Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheRiskscoring6MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoRiskscoring6Meses
		 */
		public InsumoRiskscoring6Meses getDetalheRiskscoring6Meses() {
			return localDetalheRiskscoring6Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheRiskscoring6Meses
		 */
		public void setDetalheRiskscoring6Meses(InsumoRiskscoring6Meses param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheRiskscoring6MesesTracker = true;
			} else {
				localDetalheRiskscoring6MesesTracker = false;

			}

			this.localDetalheRiskscoring6Meses = param;

		}

		/**
		 * field for DetalheRiskscoring12Meses
		 */

		protected InsumoRiskscoring12Meses localDetalheRiskscoring12Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheRiskscoring12MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoRiskscoring12Meses
		 */
		public InsumoRiskscoring12Meses getDetalheRiskscoring12Meses() {
			return localDetalheRiskscoring12Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheRiskscoring12Meses
		 */
		public void setDetalheRiskscoring12Meses(InsumoRiskscoring12Meses param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheRiskscoring12MesesTracker = true;
			} else {
				localDetalheRiskscoring12MesesTracker = false;

			}

			this.localDetalheRiskscoring12Meses = param;

		}

		/**
		 * field for DetalheChequeSemFundoAchei
		 */

		protected InsumoChequeSemFundoAchei localDetalheChequeSemFundoAchei;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheChequeSemFundoAcheiTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoChequeSemFundoAchei
		 */
		public InsumoChequeSemFundoAchei getDetalheChequeSemFundoAchei() {
			return localDetalheChequeSemFundoAchei;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheChequeSemFundoAchei
		 */
		public void setDetalheChequeSemFundoAchei(
				InsumoChequeSemFundoAchei param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheChequeSemFundoAcheiTracker = true;
			} else {
				localDetalheChequeSemFundoAcheiTracker = false;

			}

			this.localDetalheChequeSemFundoAchei = param;

		}

		/**
		 * field for DetalheChequeSemFundoAcheiCcf
		 */

		protected InsumoChequeSemFundoAcheiCCF localDetalheChequeSemFundoAcheiCcf;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheChequeSemFundoAcheiCcfTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoChequeSemFundoAcheiCCF
		 */
		public InsumoChequeSemFundoAcheiCCF getDetalheChequeSemFundoAcheiCcf() {
			return localDetalheChequeSemFundoAcheiCcf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheChequeSemFundoAcheiCcf
		 */
		public void setDetalheChequeSemFundoAcheiCcf(
				InsumoChequeSemFundoAcheiCCF param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheChequeSemFundoAcheiCcfTracker = true;
			} else {
				localDetalheChequeSemFundoAcheiCcfTracker = false;

			}

			this.localDetalheChequeSemFundoAcheiCcf = param;

		}

		/**
		 * field for DetalheContumaciaSrs
		 */

		protected InsumoContumaciaSRS localDetalheContumaciaSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContumaciaSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContumaciaSRS
		 */
		public InsumoContumaciaSRS getDetalheContumaciaSrs() {
			return localDetalheContumaciaSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContumaciaSrs
		 */
		public void setDetalheContumaciaSrs(InsumoContumaciaSRS param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContumaciaSrsTracker = true;
			} else {
				localDetalheContumaciaSrsTracker = false;

			}

			this.localDetalheContumaciaSrs = param;

		}

		/**
		 * field for DetalheParticipacaoFalencia
		 */

		protected InsumoParticipacaoFalencia localDetalheParticipacaoFalencia;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheParticipacaoFalenciaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoParticipacaoFalencia
		 */
		public InsumoParticipacaoFalencia getDetalheParticipacaoFalencia() {
			return localDetalheParticipacaoFalencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheParticipacaoFalencia
		 */
		public void setDetalheParticipacaoFalencia(
				InsumoParticipacaoFalencia param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheParticipacaoFalenciaTracker = true;
			} else {
				localDetalheParticipacaoFalenciaTracker = false;

			}

			this.localDetalheParticipacaoFalencia = param;

		}

		/**
		 * field for DetalheDividaVencida
		 */

		protected InsumoDividaVencida localDetalheDividaVencida;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheDividaVencidaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoDividaVencida
		 */
		public InsumoDividaVencida getDetalheDividaVencida() {
			return localDetalheDividaVencida;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheDividaVencida
		 */
		public void setDetalheDividaVencida(InsumoDividaVencida param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheDividaVencidaTracker = true;
			} else {
				localDetalheDividaVencidaTracker = false;

			}

			this.localDetalheDividaVencida = param;

		}

		/**
		 * field for DetalheRestricaoFinanceira
		 */

		protected InsumoRestricaoFinanceira localDetalheRestricaoFinanceira;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheRestricaoFinanceiraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoRestricaoFinanceira
		 */
		public InsumoRestricaoFinanceira getDetalheRestricaoFinanceira() {
			return localDetalheRestricaoFinanceira;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheRestricaoFinanceira
		 */
		public void setDetalheRestricaoFinanceira(
				InsumoRestricaoFinanceira param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheRestricaoFinanceiraTracker = true;
			} else {
				localDetalheRestricaoFinanceiraTracker = false;

			}

			this.localDetalheRestricaoFinanceira = param;

		}

		/**
		 * field for DetalhePendenciaFinanceira
		 */

		protected InsumoPendenciaFinanceira localDetalhePendenciaFinanceira;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalhePendenciaFinanceiraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoPendenciaFinanceira
		 */
		public InsumoPendenciaFinanceira getDetalhePendenciaFinanceira() {
			return localDetalhePendenciaFinanceira;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalhePendenciaFinanceira
		 */
		public void setDetalhePendenciaFinanceira(
				InsumoPendenciaFinanceira param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalhePendenciaFinanceiraTracker = true;
			} else {
				localDetalhePendenciaFinanceiraTracker = false;

			}

			this.localDetalhePendenciaFinanceira = param;

		}

		/**
		 * field for DetalheChequeSemFundoVarejo
		 */

		protected InsumoChequeSemFundoVarejo localDetalheChequeSemFundoVarejo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheChequeSemFundoVarejoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoChequeSemFundoVarejo
		 */
		public InsumoChequeSemFundoVarejo getDetalheChequeSemFundoVarejo() {
			return localDetalheChequeSemFundoVarejo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheChequeSemFundoVarejo
		 */
		public void setDetalheChequeSemFundoVarejo(
				InsumoChequeSemFundoVarejo param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheChequeSemFundoVarejoTracker = true;
			} else {
				localDetalheChequeSemFundoVarejoTracker = false;

			}

			this.localDetalheChequeSemFundoVarejo = param;

		}

		/**
		 * field for DetalheContraOrdemSrs
		 */

		protected InsumoContraOrdemSRS localDetalheContraOrdemSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContraOrdemSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContraOrdemSRS
		 */
		public InsumoContraOrdemSRS getDetalheContraOrdemSrs() {
			return localDetalheContraOrdemSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContraOrdemSrs
		 */
		public void setDetalheContraOrdemSrs(InsumoContraOrdemSRS param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContraOrdemSrsTracker = true;
			} else {
				localDetalheContraOrdemSrsTracker = false;

			}

			this.localDetalheContraOrdemSrs = param;

		}

		/**
		 * field for DetalheContraOrdemDocumentoDiferenteSrs
		 */

		protected InsumoContraOrdemDocumentoDiferenteSRS localDetalheContraOrdemDocumentoDiferenteSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheContraOrdemDocumentoDiferenteSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoContraOrdemDocumentoDiferenteSRS
		 */
		public InsumoContraOrdemDocumentoDiferenteSRS getDetalheContraOrdemDocumentoDiferenteSrs() {
			return localDetalheContraOrdemDocumentoDiferenteSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheContraOrdemDocumentoDiferenteSrs
		 */
		public void setDetalheContraOrdemDocumentoDiferenteSrs(
				InsumoContraOrdemDocumentoDiferenteSRS param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheContraOrdemDocumentoDiferenteSrsTracker = true;
			} else {
				localDetalheContraOrdemDocumentoDiferenteSrsTracker = false;

			}

			this.localDetalheContraOrdemDocumentoDiferenteSrs = param;

		}

		/**
		 * field for DetalheChequeOutrasOcorrenciasSrs
		 */

		protected InsumoChequeOutrasOcorrenciasSRS localDetalheChequeOutrasOcorrenciasSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheChequeOutrasOcorrenciasSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoChequeOutrasOcorrenciasSRS
		 */
		public InsumoChequeOutrasOcorrenciasSRS getDetalheChequeOutrasOcorrenciasSrs() {
			return localDetalheChequeOutrasOcorrenciasSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheChequeOutrasOcorrenciasSrs
		 */
		public void setDetalheChequeOutrasOcorrenciasSrs(
				InsumoChequeOutrasOcorrenciasSRS param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheChequeOutrasOcorrenciasSrsTracker = true;
			} else {
				localDetalheChequeOutrasOcorrenciasSrsTracker = false;

			}

			this.localDetalheChequeOutrasOcorrenciasSrs = param;

		}

		/**
		 * field for DetalheChequeConsultaOnlineSrs
		 */

		protected InsumoChequeConsultaOnlineSRS localDetalheChequeConsultaOnlineSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheChequeConsultaOnlineSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoChequeConsultaOnlineSRS
		 */
		public InsumoChequeConsultaOnlineSRS getDetalheChequeConsultaOnlineSrs() {
			return localDetalheChequeConsultaOnlineSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheChequeConsultaOnlineSrs
		 */
		public void setDetalheChequeConsultaOnlineSrs(
				InsumoChequeConsultaOnlineSRS param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheChequeConsultaOnlineSrsTracker = true;
			} else {
				localDetalheChequeConsultaOnlineSrsTracker = false;

			}

			this.localDetalheChequeConsultaOnlineSrs = param;

		}

		/**
		 * field for DetalheConsultaRealizadaCheque
		 */

		protected InsumoConsultaRealizadaCheque localDetalheConsultaRealizadaCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheConsultaRealizadaChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoConsultaRealizadaCheque
		 */
		public InsumoConsultaRealizadaCheque getDetalheConsultaRealizadaCheque() {
			return localDetalheConsultaRealizadaCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheConsultaRealizadaCheque
		 */
		public void setDetalheConsultaRealizadaCheque(
				InsumoConsultaRealizadaCheque param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheConsultaRealizadaChequeTracker = true;
			} else {
				localDetalheConsultaRealizadaChequeTracker = false;

			}

			this.localDetalheConsultaRealizadaCheque = param;

		}

		/**
		 * field for DetalheReferenciaisNegocios
		 */

		protected InsumoReferenciaisNegocios localDetalheReferenciaisNegocios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheReferenciaisNegociosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoReferenciaisNegocios
		 */
		public InsumoReferenciaisNegocios getDetalheReferenciaisNegocios() {
			return localDetalheReferenciaisNegocios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheReferenciaisNegocios
		 */
		public void setDetalheReferenciaisNegocios(
				InsumoReferenciaisNegocios param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheReferenciaisNegociosTracker = true;
			} else {
				localDetalheReferenciaisNegociosTracker = false;

			}

			this.localDetalheReferenciaisNegocios = param;

		}

		/**
		 * field for DetalheHistoricoPagamento
		 */

		protected InsumoHistoricoPagamento localDetalheHistoricoPagamento;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheHistoricoPagamentoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoHistoricoPagamento
		 */
		public InsumoHistoricoPagamento getDetalheHistoricoPagamento() {
			return localDetalheHistoricoPagamento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheHistoricoPagamento
		 */
		public void setDetalheHistoricoPagamento(InsumoHistoricoPagamento param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheHistoricoPagamentoTracker = true;
			} else {
				localDetalheHistoricoPagamentoTracker = false;

			}

			this.localDetalheHistoricoPagamento = param;

		}

		/**
		 * field for DetalheHistoricoCheque
		 */

		protected InsumoHistoricoCheque localDetalheHistoricoCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheHistoricoChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoHistoricoCheque
		 */
		public InsumoHistoricoCheque getDetalheHistoricoCheque() {
			return localDetalheHistoricoCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheHistoricoCheque
		 */
		public void setDetalheHistoricoCheque(InsumoHistoricoCheque param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheHistoricoChequeTracker = true;
			} else {
				localDetalheHistoricoChequeTracker = false;

			}

			this.localDetalheHistoricoCheque = param;

		}

		/**
		 * field for DetalheHistoricoChequeDocumentoDiferente
		 */

		protected InsumoHistoricoChequeDocumentoDiferente localDetalheHistoricoChequeDocumentoDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheHistoricoChequeDocumentoDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoHistoricoChequeDocumentoDiferente
		 */
		public InsumoHistoricoChequeDocumentoDiferente getDetalheHistoricoChequeDocumentoDiferente() {
			return localDetalheHistoricoChequeDocumentoDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheHistoricoChequeDocumentoDiferente
		 */
		public void setDetalheHistoricoChequeDocumentoDiferente(
				InsumoHistoricoChequeDocumentoDiferente param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheHistoricoChequeDocumentoDiferenteTracker = true;
			} else {
				localDetalheHistoricoChequeDocumentoDiferenteTracker = false;

			}

			this.localDetalheHistoricoChequeDocumentoDiferente = param;

		}

		/**
		 * field for DetalheHistoricoContaCorrente
		 */

		protected InsumoHistoricoContaCorrente localDetalheHistoricoContaCorrente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheHistoricoContaCorrenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoHistoricoContaCorrente
		 */
		public InsumoHistoricoContaCorrente getDetalheHistoricoContaCorrente() {
			return localDetalheHistoricoContaCorrente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheHistoricoContaCorrente
		 */
		public void setDetalheHistoricoContaCorrente(
				InsumoHistoricoContaCorrente param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheHistoricoContaCorrenteTracker = true;
			} else {
				localDetalheHistoricoContaCorrenteTracker = false;

			}

			this.localDetalheHistoricoContaCorrente = param;

		}

		/**
		 * field for DetalheRelacionamentoMaisAntigoComFornecedores
		 */

		protected InsumoRelacionamentoMaisAntigoComFornecedores localDetalheRelacionamentoMaisAntigoComFornecedores;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheRelacionamentoMaisAntigoComFornecedoresTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoRelacionamentoMaisAntigoComFornecedores
		 */
		public InsumoRelacionamentoMaisAntigoComFornecedores getDetalheRelacionamentoMaisAntigoComFornecedores() {
			return localDetalheRelacionamentoMaisAntigoComFornecedores;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheRelacionamentoMaisAntigoComFornecedores
		 */
		public void setDetalheRelacionamentoMaisAntigoComFornecedores(
				InsumoRelacionamentoMaisAntigoComFornecedores param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheRelacionamentoMaisAntigoComFornecedoresTracker = true;
			} else {
				localDetalheRelacionamentoMaisAntigoComFornecedoresTracker = false;

			}

			this.localDetalheRelacionamentoMaisAntigoComFornecedores = param;

		}

		/**
		 * field for DetalheRegistroConsulta
		 */

		protected InsumoRegistroConsultas localDetalheRegistroConsulta;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheRegistroConsultaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoRegistroConsultas
		 */
		public InsumoRegistroConsultas getDetalheRegistroConsulta() {
			return localDetalheRegistroConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheRegistroConsulta
		 */
		public void setDetalheRegistroConsulta(InsumoRegistroConsultas param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheRegistroConsultaTracker = true;
			} else {
				localDetalheRegistroConsultaTracker = false;

			}

			this.localDetalheRegistroConsulta = param;

		}

		/**
		 * field for DetalheUltimasConsultas
		 */

		protected InsumoUltimasConsultas localDetalheUltimasConsultas;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheUltimasConsultasTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoUltimasConsultas
		 */
		public InsumoUltimasConsultas getDetalheUltimasConsultas() {
			return localDetalheUltimasConsultas;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheUltimasConsultas
		 */
		public void setDetalheUltimasConsultas(InsumoUltimasConsultas param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheUltimasConsultasTracker = true;
			} else {
				localDetalheUltimasConsultasTracker = false;

			}

			this.localDetalheUltimasConsultas = param;

		}

		/**
		 * field for DetalheCapitalSocial
		 */

		protected InsumoCapitalSocial localDetalheCapitalSocial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheCapitalSocialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoCapitalSocial
		 */
		public InsumoCapitalSocial getDetalheCapitalSocial() {
			return localDetalheCapitalSocial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheCapitalSocial
		 */
		public void setDetalheCapitalSocial(InsumoCapitalSocial param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheCapitalSocialTracker = true;
			} else {
				localDetalheCapitalSocialTracker = false;

			}

			this.localDetalheCapitalSocial = param;

		}

		/**
		 * field for DetalheAntecessora
		 */

		protected InsumoAntecessora localDetalheAntecessora;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheAntecessoraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoAntecessora
		 */
		public InsumoAntecessora getDetalheAntecessora() {
			return localDetalheAntecessora;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheAntecessora
		 */
		public void setDetalheAntecessora(InsumoAntecessora param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheAntecessoraTracker = true;
			} else {
				localDetalheAntecessoraTracker = false;

			}

			this.localDetalheAntecessora = param;

		}

		/**
		 * field for DetalheAtividadeEmpresa
		 */

		protected InsumoAtividadeEmpresa localDetalheAtividadeEmpresa;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheAtividadeEmpresaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoAtividadeEmpresa
		 */
		public InsumoAtividadeEmpresa getDetalheAtividadeEmpresa() {
			return localDetalheAtividadeEmpresa;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheAtividadeEmpresa
		 */
		public void setDetalheAtividadeEmpresa(InsumoAtividadeEmpresa param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheAtividadeEmpresaTracker = true;
			} else {
				localDetalheAtividadeEmpresaTracker = false;

			}

			this.localDetalheAtividadeEmpresa = param;

		}

		/**
		 * field for DetalheFilial
		 */

		protected InsumoFilial localDetalheFilial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheFilialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoFilial
		 */
		public InsumoFilial getDetalheFilial() {
			return localDetalheFilial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheFilial
		 */
		public void setDetalheFilial(InsumoFilial param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheFilialTracker = true;
			} else {
				localDetalheFilialTracker = false;

			}

			this.localDetalheFilial = param;

		}

		/**
		 * field for DetalheInformacoesAdicionais
		 */

		protected InsumoInformacoesAdicionais localDetalheInformacoesAdicionais;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheInformacoesAdicionaisTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoInformacoesAdicionais
		 */
		public InsumoInformacoesAdicionais getDetalheInformacoesAdicionais() {
			return localDetalheInformacoesAdicionais;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheInformacoesAdicionais
		 */
		public void setDetalheInformacoesAdicionais(
				InsumoInformacoesAdicionais param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheInformacoesAdicionaisTracker = true;
			} else {
				localDetalheInformacoesAdicionaisTracker = false;

			}

			this.localDetalheInformacoesAdicionais = param;

		}

		/**
		 * field for DetalheIncorporacaoFusaoCisao
		 */

		protected InsumoIncorporacaoFusaoCisao localDetalheIncorporacaoFusaoCisao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheIncorporacaoFusaoCisaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoIncorporacaoFusaoCisao
		 */
		public InsumoIncorporacaoFusaoCisao getDetalheIncorporacaoFusaoCisao() {
			return localDetalheIncorporacaoFusaoCisao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheIncorporacaoFusaoCisao
		 */
		public void setDetalheIncorporacaoFusaoCisao(
				InsumoIncorporacaoFusaoCisao param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheIncorporacaoFusaoCisaoTracker = true;
			} else {
				localDetalheIncorporacaoFusaoCisaoTracker = false;

			}

			this.localDetalheIncorporacaoFusaoCisao = param;

		}

		/**
		 * field for DetalhePrincipaisProdutos
		 */

		protected InsumoPrincipaisProdutos localDetalhePrincipaisProdutos;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalhePrincipaisProdutosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoPrincipaisProdutos
		 */
		public InsumoPrincipaisProdutos getDetalhePrincipaisProdutos() {
			return localDetalhePrincipaisProdutos;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalhePrincipaisProdutos
		 */
		public void setDetalhePrincipaisProdutos(InsumoPrincipaisProdutos param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalhePrincipaisProdutosTracker = true;
			} else {
				localDetalhePrincipaisProdutosTracker = false;

			}

			this.localDetalhePrincipaisProdutos = param;

		}

		/**
		 * field for DetalheSpcScore3Meses
		 */

		protected InsumoSPCScore3Meses localDetalheSpcScore3Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheSpcScore3MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoSPCScore3Meses
		 */
		public InsumoSPCScore3Meses getDetalheSpcScore3Meses() {
			return localDetalheSpcScore3Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheSpcScore3Meses
		 */
		public void setDetalheSpcScore3Meses(InsumoSPCScore3Meses param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheSpcScore3MesesTracker = true;
			} else {
				localDetalheSpcScore3MesesTracker = false;

			}

			this.localDetalheSpcScore3Meses = param;

		}

		/**
		 * field for DetalheSpcScore12Meses
		 */

		protected InsumoSPCScore12Meses localDetalheSpcScore12Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheSpcScore12MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoSPCScore12Meses
		 */
		public InsumoSPCScore12Meses getDetalheSpcScore12Meses() {
			return localDetalheSpcScore12Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheSpcScore12Meses
		 */
		public void setDetalheSpcScore12Meses(InsumoSPCScore12Meses param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheSpcScore12MesesTracker = true;
			} else {
				localDetalheSpcScore12MesesTracker = false;

			}

			this.localDetalheSpcScore12Meses = param;

		}

		/**
		 * field for DetalheSpcObito
		 */

		protected InsumoObito localDetalheSpcObito;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheSpcObitoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoObito
		 */
		public InsumoObito getDetalheSpcObito() {
			return localDetalheSpcObito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheSpcObito
		 */
		public void setDetalheSpcObito(InsumoObito param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheSpcObitoTracker = true;
			} else {
				localDetalheSpcObitoTracker = false;

			}

			this.localDetalheSpcObito = param;

		}

		/**
		 * field for DetalheConfirmacaoRg
		 */

		protected InsumoRg localDetalheConfirmacaoRg;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDetalheConfirmacaoRgTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoRg
		 */
		public InsumoRg getDetalheConfirmacaoRg() {
			return localDetalheConfirmacaoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DetalheConfirmacaoRg
		 */
		public void setDetalheConfirmacaoRg(InsumoRg param) {

			clearAllSettingTrackers();

			if (param != null) {
				// update the setting tracker
				localDetalheConfirmacaoRgTracker = true;
			} else {
				localDetalheConfirmacaoRgTracker = false;

			}

			this.localDetalheConfirmacaoRg = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoInsumoChoice_type0.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Resultado-InsumoChoice_type0",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Resultado-InsumoChoice_type0", xmlWriter);
				}

			}
			if (localDetalheGrafiaPjTracker) {
				if (localDetalheGrafiaPj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-grafia-pj cannot be null!!");
				}
				localDetalheGrafiaPj.serialize(new javax.xml.namespace.QName(
						"", "detalhe-grafia-pj"), factory, xmlWriter);
			}
			if (localDetalheSpcTracker) {
				if (localDetalheSpc == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc cannot be null!!");
				}
				localDetalheSpc.serialize(new javax.xml.namespace.QName("",
						"detalhe-spc"), factory, xmlWriter);
			}
			if (localDetalheChequeLojistaTracker) {
				if (localDetalheChequeLojista == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-lojista cannot be null!!");
				}
				localDetalheChequeLojista.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-cheque-lojista"), factory, xmlWriter);
			}
			if (localDetalheCcfTracker) {
				if (localDetalheCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ccf cannot be null!!");
				}
				localDetalheCcf.serialize(new javax.xml.namespace.QName("",
						"detalhe-ccf"), factory, xmlWriter);
			}
			if (localDetalheContraOrdemTracker) {
				if (localDetalheContraOrdem == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem cannot be null!!");
				}
				localDetalheContraOrdem.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-contra-ordem"), factory, xmlWriter);
			}
			if (localDetalheContraOrdemDocumentoDiferenteTracker) {
				if (localDetalheContraOrdemDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-documento-diferente cannot be null!!");
				}
				localDetalheContraOrdemDocumentoDiferente.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-contra-ordem-documento-diferente"),
						factory, xmlWriter);
			}
			if (localDetalheContraOrdemAgenciaContaDiferenteTracker) {
				if (localDetalheContraOrdemAgenciaContaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-agencia-conta-diferente cannot be null!!");
				}
				localDetalheContraOrdemAgenciaContaDiferente
						.serialize(
								new javax.xml.namespace.QName("",
										"detalhe-contra-ordem-agencia-conta-diferente"),
								factory, xmlWriter);
			}
			if (localDetalheContraOrdemAgenciaDiferenteTracker) {
				if (localDetalheContraOrdemAgenciaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-agencia-diferente cannot be null!!");
				}
				localDetalheContraOrdemAgenciaDiferente.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-contra-ordem-agencia-diferente"),
						factory, xmlWriter);
			}
			if (localDetalheContumaciaTracker) {
				if (localDetalheContumacia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contumacia cannot be null!!");
				}
				localDetalheContumacia.serialize(new javax.xml.namespace.QName(
						"", "detalhe-contumacia"), factory, xmlWriter);
			}
			if (localDetalheDadosAgenciaBancariaTracker) {
				if (localDetalheDadosAgenciaBancaria == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-dados-agencia-bancaria cannot be null!!");
				}
				localDetalheDadosAgenciaBancaria.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-dados-agencia-bancaria"), factory,
						xmlWriter);
			}
			if (localDetalheBancoAgenciaContaDocumentoDiferenteTracker) {
				if (localDetalheBancoAgenciaContaDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-banco-agencia-conta-documento-diferente cannot be null!!");
				}
				localDetalheBancoAgenciaContaDocumentoDiferente
						.serialize(
								new javax.xml.namespace.QName("",
										"detalhe-banco-agencia-conta-documento-diferente"),
								factory, xmlWriter);
			}
			if (localDetalheConsultaRealizadaTracker) {
				if (localDetalheConsultaRealizada == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-consulta-realizada cannot be null!!");
				}
				localDetalheConsultaRealizada.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-consulta-realizada"), factory,
						xmlWriter);
			}
			if (localDetalheCreditoConcedidoTracker) {
				if (localDetalheCreditoConcedido == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-credito-concedido cannot be null!!");
				}
				localDetalheCreditoConcedido.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-credito-concedido"), factory,
						xmlWriter);
			}
			if (localDetalheAlertaDocumentoTracker) {
				if (localDetalheAlertaDocumento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-alerta-documento cannot be null!!");
				}
				localDetalheAlertaDocumento
						.serialize(new javax.xml.namespace.QName("",
								"detalhe-alerta-documento"), factory, xmlWriter);
			}
			if (localDetalheAcaoTracker) {
				if (localDetalheAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-acao cannot be null!!");
				}
				localDetalheAcao.serialize(new javax.xml.namespace.QName("",
						"detalhe-acao"), factory, xmlWriter);
			}
			if (localDetalheProtestoTracker) {
				if (localDetalheProtesto == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-protesto cannot be null!!");
				}
				localDetalheProtesto.serialize(new javax.xml.namespace.QName(
						"", "detalhe-protesto"), factory, xmlWriter);
			}
			if (localDetalheParticipacaoEmpresaTracker) {
				if (localDetalheParticipacaoEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-participacao-empresa cannot be null!!");
				}
				localDetalheParticipacaoEmpresa.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-participacao-empresa"), factory,
						xmlWriter);
			}
			if (localDetalheSocioTracker) {
				if (localDetalheSocio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-socio cannot be null!!");
				}
				localDetalheSocio.serialize(new javax.xml.namespace.QName("",
						"detalhe-socio"), factory, xmlWriter);
			}
			if (localDetalheAdministradorTracker) {
				if (localDetalheAdministrador == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-administrador cannot be null!!");
				}
				localDetalheAdministrador.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-administrador"), factory, xmlWriter);
			}
			if (localDetalheEnderecoCepConsultadoTracker) {
				if (localDetalheEnderecoCepConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-endereco-cep-consultado cannot be null!!");
				}
				localDetalheEnderecoCepConsultado.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-endereco-cep-consultado"), factory,
						xmlWriter);
			}
			if (localDetalheTelefoneConsultadoTracker) {
				if (localDetalheTelefoneConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-telefone-consultado cannot be null!!");
				}
				localDetalheTelefoneConsultado.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-telefone-consultado"), factory,
						xmlWriter);
			}
			if (localDetalheTelefoneVinculadoConsumidorTracker) {
				if (localDetalheTelefoneVinculadoConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-telefone-vinculado-consumidor cannot be null!!");
				}
				localDetalheTelefoneVinculadoConsumidor.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-telefone-vinculado-consumidor"),
						factory, xmlWriter);
			}
			if (localDetalheTelefoneVinculadoAssinanteConsultadoTracker) {
				if (localDetalheTelefoneVinculadoAssinanteConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-telefone-vinculado-assinante-consultado cannot be null!!");
				}
				localDetalheTelefoneVinculadoAssinanteConsultado
						.serialize(
								new javax.xml.namespace.QName("",
										"detalhe-telefone-vinculado-assinante-consultado"),
								factory, xmlWriter);
			}
			if (localDetalheUltimoTelefoneInformadoTracker) {
				if (localDetalheUltimoTelefoneInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ultimo-telefone-informado cannot be null!!");
				}
				localDetalheUltimoTelefoneInformado.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-ultimo-telefone-informado"), factory,
						xmlWriter);
			}
			if (localDetalheUltimoEnderecoInformadoTracker) {
				if (localDetalheUltimoEnderecoInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ultimo-endereco-informado cannot be null!!");
				}
				localDetalheUltimoEnderecoInformado.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-ultimo-endereco-informado"), factory,
						xmlWriter);
			}
			if (localDetalheInformacaoPoderJudiciarioTracker) {
				if (localDetalheInformacaoPoderJudiciario == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-informacao-poder-judiciario cannot be null!!");
				}
				localDetalheInformacaoPoderJudiciario.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-informacao-poder-judiciario"),
						factory, xmlWriter);
			}
			if (localDetalheRiskscoring6MesesTracker) {
				if (localDetalheRiskscoring6Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-riskscoring-6-meses cannot be null!!");
				}
				localDetalheRiskscoring6Meses.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-riskscoring-6-meses"), factory,
						xmlWriter);
			}
			if (localDetalheRiskscoring12MesesTracker) {
				if (localDetalheRiskscoring12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-riskscoring-12-meses cannot be null!!");
				}
				localDetalheRiskscoring12Meses.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-riskscoring-12-meses"), factory,
						xmlWriter);
			}
			if (localDetalheChequeSemFundoAcheiTracker) {
				if (localDetalheChequeSemFundoAchei == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-sem-fundo-achei cannot be null!!");
				}
				localDetalheChequeSemFundoAchei.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-cheque-sem-fundo-achei"), factory,
						xmlWriter);
			}
			if (localDetalheChequeSemFundoAcheiCcfTracker) {
				if (localDetalheChequeSemFundoAcheiCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-sem-fundo-achei-ccf cannot be null!!");
				}
				localDetalheChequeSemFundoAcheiCcf.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-cheque-sem-fundo-achei-ccf"), factory,
						xmlWriter);
			}
			if (localDetalheContumaciaSrsTracker) {
				if (localDetalheContumaciaSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contumacia-srs cannot be null!!");
				}
				localDetalheContumaciaSrs.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-contumacia-srs"), factory, xmlWriter);
			}
			if (localDetalheParticipacaoFalenciaTracker) {
				if (localDetalheParticipacaoFalencia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-participacao-falencia cannot be null!!");
				}
				localDetalheParticipacaoFalencia.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-participacao-falencia"), factory,
						xmlWriter);
			}
			if (localDetalheDividaVencidaTracker) {
				if (localDetalheDividaVencida == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-divida-vencida cannot be null!!");
				}
				localDetalheDividaVencida.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-divida-vencida"), factory, xmlWriter);
			}
			if (localDetalheRestricaoFinanceiraTracker) {
				if (localDetalheRestricaoFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-restricao-financeira cannot be null!!");
				}
				localDetalheRestricaoFinanceira.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-restricao-financeira"), factory,
						xmlWriter);
			}
			if (localDetalhePendenciaFinanceiraTracker) {
				if (localDetalhePendenciaFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-pendencia-financeira cannot be null!!");
				}
				localDetalhePendenciaFinanceira.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-pendencia-financeira"), factory,
						xmlWriter);
			}
			if (localDetalheChequeSemFundoVarejoTracker) {
				if (localDetalheChequeSemFundoVarejo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-sem-fundo-varejo cannot be null!!");
				}
				localDetalheChequeSemFundoVarejo.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-cheque-sem-fundo-varejo"), factory,
						xmlWriter);
			}
			if (localDetalheContraOrdemSrsTracker) {
				if (localDetalheContraOrdemSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-srs cannot be null!!");
				}
				localDetalheContraOrdemSrs
						.serialize(new javax.xml.namespace.QName("",
								"detalhe-contra-ordem-srs"), factory, xmlWriter);
			}
			if (localDetalheContraOrdemDocumentoDiferenteSrsTracker) {
				if (localDetalheContraOrdemDocumentoDiferenteSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-documento-diferente-srs cannot be null!!");
				}
				localDetalheContraOrdemDocumentoDiferenteSrs
						.serialize(
								new javax.xml.namespace.QName("",
										"detalhe-contra-ordem-documento-diferente-srs"),
								factory, xmlWriter);
			}
			if (localDetalheChequeOutrasOcorrenciasSrsTracker) {
				if (localDetalheChequeOutrasOcorrenciasSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-outras-ocorrencias-srs cannot be null!!");
				}
				localDetalheChequeOutrasOcorrenciasSrs.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-cheque-outras-ocorrencias-srs"),
						factory, xmlWriter);
			}
			if (localDetalheChequeConsultaOnlineSrsTracker) {
				if (localDetalheChequeConsultaOnlineSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-consulta-online-srs cannot be null!!");
				}
				localDetalheChequeConsultaOnlineSrs.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-cheque-consulta-online-srs"), factory,
						xmlWriter);
			}
			if (localDetalheConsultaRealizadaChequeTracker) {
				if (localDetalheConsultaRealizadaCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-consulta-realizada-cheque cannot be null!!");
				}
				localDetalheConsultaRealizadaCheque.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-consulta-realizada-cheque"), factory,
						xmlWriter);
			}
			if (localDetalheReferenciaisNegociosTracker) {
				if (localDetalheReferenciaisNegocios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-referenciais-negocios cannot be null!!");
				}
				localDetalheReferenciaisNegocios.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-referenciais-negocios"), factory,
						xmlWriter);
			}
			if (localDetalheHistoricoPagamentoTracker) {
				if (localDetalheHistoricoPagamento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-pagamento cannot be null!!");
				}
				localDetalheHistoricoPagamento.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-historico-pagamento"), factory,
						xmlWriter);
			}
			if (localDetalheHistoricoChequeTracker) {
				if (localDetalheHistoricoCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-cheque cannot be null!!");
				}
				localDetalheHistoricoCheque
						.serialize(new javax.xml.namespace.QName("",
								"detalhe-historico-cheque"), factory, xmlWriter);
			}
			if (localDetalheHistoricoChequeDocumentoDiferenteTracker) {
				if (localDetalheHistoricoChequeDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-cheque-documento-diferente cannot be null!!");
				}
				localDetalheHistoricoChequeDocumentoDiferente
						.serialize(
								new javax.xml.namespace.QName("",
										"detalhe-historico-cheque-documento-diferente"),
								factory, xmlWriter);
			}
			if (localDetalheHistoricoContaCorrenteTracker) {
				if (localDetalheHistoricoContaCorrente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-conta-corrente cannot be null!!");
				}
				localDetalheHistoricoContaCorrente.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-historico-conta-corrente"), factory,
						xmlWriter);
			}
			if (localDetalheRelacionamentoMaisAntigoComFornecedoresTracker) {
				if (localDetalheRelacionamentoMaisAntigoComFornecedores == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-relacionamento-mais-antigo-com-fornecedores cannot be null!!");
				}
				localDetalheRelacionamentoMaisAntigoComFornecedores
						.serialize(
								new javax.xml.namespace.QName("",
										"detalhe-relacionamento-mais-antigo-com-fornecedores"),
								factory, xmlWriter);
			}
			if (localDetalheRegistroConsultaTracker) {
				if (localDetalheRegistroConsulta == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-registro-consulta cannot be null!!");
				}
				localDetalheRegistroConsulta.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-registro-consulta"), factory,
						xmlWriter);
			}
			if (localDetalheUltimasConsultasTracker) {
				if (localDetalheUltimasConsultas == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ultimas-consultas cannot be null!!");
				}
				localDetalheUltimasConsultas.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-ultimas-consultas"), factory,
						xmlWriter);
			}
			if (localDetalheCapitalSocialTracker) {
				if (localDetalheCapitalSocial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-capital-social cannot be null!!");
				}
				localDetalheCapitalSocial.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-capital-social"), factory, xmlWriter);
			}
			if (localDetalheAntecessoraTracker) {
				if (localDetalheAntecessora == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-antecessora cannot be null!!");
				}
				localDetalheAntecessora
						.serialize(new javax.xml.namespace.QName("",
								"detalhe-antecessora"), factory, xmlWriter);
			}
			if (localDetalheAtividadeEmpresaTracker) {
				if (localDetalheAtividadeEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-atividade-empresa cannot be null!!");
				}
				localDetalheAtividadeEmpresa.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-atividade-empresa"), factory,
						xmlWriter);
			}
			if (localDetalheFilialTracker) {
				if (localDetalheFilial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-filial cannot be null!!");
				}
				localDetalheFilial.serialize(new javax.xml.namespace.QName("",
						"detalhe-filial"), factory, xmlWriter);
			}
			if (localDetalheInformacoesAdicionaisTracker) {
				if (localDetalheInformacoesAdicionais == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-informacoes-adicionais cannot be null!!");
				}
				localDetalheInformacoesAdicionais.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-informacoes-adicionais"), factory,
						xmlWriter);
			}
			if (localDetalheIncorporacaoFusaoCisaoTracker) {
				if (localDetalheIncorporacaoFusaoCisao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-incorporacao-fusao-cisao cannot be null!!");
				}
				localDetalheIncorporacaoFusaoCisao.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-incorporacao-fusao-cisao"), factory,
						xmlWriter);
			}
			if (localDetalhePrincipaisProdutosTracker) {
				if (localDetalhePrincipaisProdutos == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-principais-produtos cannot be null!!");
				}
				localDetalhePrincipaisProdutos.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-principais-produtos"), factory,
						xmlWriter);
			}
			if (localDetalheSpcScore3MesesTracker) {
				if (localDetalheSpcScore3Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc-score-3-meses cannot be null!!");
				}
				localDetalheSpcScore3Meses.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-spc-score-3-meses"), factory,
						xmlWriter);
			}
			if (localDetalheSpcScore12MesesTracker) {
				if (localDetalheSpcScore12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc-score-12-meses cannot be null!!");
				}
				localDetalheSpcScore12Meses.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-spc-score-12-meses"), factory,
						xmlWriter);
			}
			if (localDetalheSpcObitoTracker) {
				if (localDetalheSpcObito == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc-obito cannot be null!!");
				}
				localDetalheSpcObito.serialize(new javax.xml.namespace.QName(
						"", "detalhe-spc-obito"), factory, xmlWriter);
			}
			if (localDetalheConfirmacaoRgTracker) {
				if (localDetalheConfirmacaoRg == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-confirmacao-rg cannot be null!!");
				}
				localDetalheConfirmacaoRg.serialize(
						new javax.xml.namespace.QName("",
								"detalhe-confirmacao-rg"), factory, xmlWriter);
			}

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localDetalheGrafiaPjTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-grafia-pj"));

				if (localDetalheGrafiaPj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-grafia-pj cannot be null!!");
				}
				elementList.add(localDetalheGrafiaPj);
			}
			if (localDetalheSpcTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "detalhe-spc"));

				if (localDetalheSpc == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc cannot be null!!");
				}
				elementList.add(localDetalheSpc);
			}
			if (localDetalheChequeLojistaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-cheque-lojista"));

				if (localDetalheChequeLojista == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-lojista cannot be null!!");
				}
				elementList.add(localDetalheChequeLojista);
			}
			if (localDetalheCcfTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "detalhe-ccf"));

				if (localDetalheCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ccf cannot be null!!");
				}
				elementList.add(localDetalheCcf);
			}
			if (localDetalheContraOrdemTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contra-ordem"));

				if (localDetalheContraOrdem == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem cannot be null!!");
				}
				elementList.add(localDetalheContraOrdem);
			}
			if (localDetalheContraOrdemDocumentoDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contra-ordem-documento-diferente"));

				if (localDetalheContraOrdemDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-documento-diferente cannot be null!!");
				}
				elementList.add(localDetalheContraOrdemDocumentoDiferente);
			}
			if (localDetalheContraOrdemAgenciaContaDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contra-ordem-agencia-conta-diferente"));

				if (localDetalheContraOrdemAgenciaContaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-agencia-conta-diferente cannot be null!!");
				}
				elementList.add(localDetalheContraOrdemAgenciaContaDiferente);
			}
			if (localDetalheContraOrdemAgenciaDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contra-ordem-agencia-diferente"));

				if (localDetalheContraOrdemAgenciaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-agencia-diferente cannot be null!!");
				}
				elementList.add(localDetalheContraOrdemAgenciaDiferente);
			}
			if (localDetalheContumaciaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contumacia"));

				if (localDetalheContumacia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contumacia cannot be null!!");
				}
				elementList.add(localDetalheContumacia);
			}
			if (localDetalheDadosAgenciaBancariaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-dados-agencia-bancaria"));

				if (localDetalheDadosAgenciaBancaria == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-dados-agencia-bancaria cannot be null!!");
				}
				elementList.add(localDetalheDadosAgenciaBancaria);
			}
			if (localDetalheBancoAgenciaContaDocumentoDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-banco-agencia-conta-documento-diferente"));

				if (localDetalheBancoAgenciaContaDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-banco-agencia-conta-documento-diferente cannot be null!!");
				}
				elementList
						.add(localDetalheBancoAgenciaContaDocumentoDiferente);
			}
			if (localDetalheConsultaRealizadaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-consulta-realizada"));

				if (localDetalheConsultaRealizada == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-consulta-realizada cannot be null!!");
				}
				elementList.add(localDetalheConsultaRealizada);
			}
			if (localDetalheCreditoConcedidoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-credito-concedido"));

				if (localDetalheCreditoConcedido == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-credito-concedido cannot be null!!");
				}
				elementList.add(localDetalheCreditoConcedido);
			}
			if (localDetalheAlertaDocumentoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-alerta-documento"));

				if (localDetalheAlertaDocumento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-alerta-documento cannot be null!!");
				}
				elementList.add(localDetalheAlertaDocumento);
			}
			if (localDetalheAcaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-acao"));

				if (localDetalheAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-acao cannot be null!!");
				}
				elementList.add(localDetalheAcao);
			}
			if (localDetalheProtestoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-protesto"));

				if (localDetalheProtesto == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-protesto cannot be null!!");
				}
				elementList.add(localDetalheProtesto);
			}
			if (localDetalheParticipacaoEmpresaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-participacao-empresa"));

				if (localDetalheParticipacaoEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-participacao-empresa cannot be null!!");
				}
				elementList.add(localDetalheParticipacaoEmpresa);
			}
			if (localDetalheSocioTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-socio"));

				if (localDetalheSocio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-socio cannot be null!!");
				}
				elementList.add(localDetalheSocio);
			}
			if (localDetalheAdministradorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-administrador"));

				if (localDetalheAdministrador == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-administrador cannot be null!!");
				}
				elementList.add(localDetalheAdministrador);
			}
			if (localDetalheEnderecoCepConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-endereco-cep-consultado"));

				if (localDetalheEnderecoCepConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-endereco-cep-consultado cannot be null!!");
				}
				elementList.add(localDetalheEnderecoCepConsultado);
			}
			if (localDetalheTelefoneConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-telefone-consultado"));

				if (localDetalheTelefoneConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-telefone-consultado cannot be null!!");
				}
				elementList.add(localDetalheTelefoneConsultado);
			}
			if (localDetalheTelefoneVinculadoConsumidorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-telefone-vinculado-consumidor"));

				if (localDetalheTelefoneVinculadoConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-telefone-vinculado-consumidor cannot be null!!");
				}
				elementList.add(localDetalheTelefoneVinculadoConsumidor);
			}
			if (localDetalheTelefoneVinculadoAssinanteConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-telefone-vinculado-assinante-consultado"));

				if (localDetalheTelefoneVinculadoAssinanteConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-telefone-vinculado-assinante-consultado cannot be null!!");
				}
				elementList
						.add(localDetalheTelefoneVinculadoAssinanteConsultado);
			}
			if (localDetalheUltimoTelefoneInformadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-ultimo-telefone-informado"));

				if (localDetalheUltimoTelefoneInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ultimo-telefone-informado cannot be null!!");
				}
				elementList.add(localDetalheUltimoTelefoneInformado);
			}
			if (localDetalheUltimoEnderecoInformadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-ultimo-endereco-informado"));

				if (localDetalheUltimoEnderecoInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ultimo-endereco-informado cannot be null!!");
				}
				elementList.add(localDetalheUltimoEnderecoInformado);
			}
			if (localDetalheInformacaoPoderJudiciarioTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-informacao-poder-judiciario"));

				if (localDetalheInformacaoPoderJudiciario == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-informacao-poder-judiciario cannot be null!!");
				}
				elementList.add(localDetalheInformacaoPoderJudiciario);
			}
			if (localDetalheRiskscoring6MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-riskscoring-6-meses"));

				if (localDetalheRiskscoring6Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-riskscoring-6-meses cannot be null!!");
				}
				elementList.add(localDetalheRiskscoring6Meses);
			}
			if (localDetalheRiskscoring12MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-riskscoring-12-meses"));

				if (localDetalheRiskscoring12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-riskscoring-12-meses cannot be null!!");
				}
				elementList.add(localDetalheRiskscoring12Meses);
			}
			if (localDetalheChequeSemFundoAcheiTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-cheque-sem-fundo-achei"));

				if (localDetalheChequeSemFundoAchei == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-sem-fundo-achei cannot be null!!");
				}
				elementList.add(localDetalheChequeSemFundoAchei);
			}
			if (localDetalheChequeSemFundoAcheiCcfTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-cheque-sem-fundo-achei-ccf"));

				if (localDetalheChequeSemFundoAcheiCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-sem-fundo-achei-ccf cannot be null!!");
				}
				elementList.add(localDetalheChequeSemFundoAcheiCcf);
			}
			if (localDetalheContumaciaSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contumacia-srs"));

				if (localDetalheContumaciaSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contumacia-srs cannot be null!!");
				}
				elementList.add(localDetalheContumaciaSrs);
			}
			if (localDetalheParticipacaoFalenciaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-participacao-falencia"));

				if (localDetalheParticipacaoFalencia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-participacao-falencia cannot be null!!");
				}
				elementList.add(localDetalheParticipacaoFalencia);
			}
			if (localDetalheDividaVencidaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-divida-vencida"));

				if (localDetalheDividaVencida == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-divida-vencida cannot be null!!");
				}
				elementList.add(localDetalheDividaVencida);
			}
			if (localDetalheRestricaoFinanceiraTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-restricao-financeira"));

				if (localDetalheRestricaoFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-restricao-financeira cannot be null!!");
				}
				elementList.add(localDetalheRestricaoFinanceira);
			}
			if (localDetalhePendenciaFinanceiraTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-pendencia-financeira"));

				if (localDetalhePendenciaFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-pendencia-financeira cannot be null!!");
				}
				elementList.add(localDetalhePendenciaFinanceira);
			}
			if (localDetalheChequeSemFundoVarejoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-cheque-sem-fundo-varejo"));

				if (localDetalheChequeSemFundoVarejo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-sem-fundo-varejo cannot be null!!");
				}
				elementList.add(localDetalheChequeSemFundoVarejo);
			}
			if (localDetalheContraOrdemSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contra-ordem-srs"));

				if (localDetalheContraOrdemSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-srs cannot be null!!");
				}
				elementList.add(localDetalheContraOrdemSrs);
			}
			if (localDetalheContraOrdemDocumentoDiferenteSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-contra-ordem-documento-diferente-srs"));

				if (localDetalheContraOrdemDocumentoDiferenteSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-contra-ordem-documento-diferente-srs cannot be null!!");
				}
				elementList.add(localDetalheContraOrdemDocumentoDiferenteSrs);
			}
			if (localDetalheChequeOutrasOcorrenciasSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-cheque-outras-ocorrencias-srs"));

				if (localDetalheChequeOutrasOcorrenciasSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-outras-ocorrencias-srs cannot be null!!");
				}
				elementList.add(localDetalheChequeOutrasOcorrenciasSrs);
			}
			if (localDetalheChequeConsultaOnlineSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-cheque-consulta-online-srs"));

				if (localDetalheChequeConsultaOnlineSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-cheque-consulta-online-srs cannot be null!!");
				}
				elementList.add(localDetalheChequeConsultaOnlineSrs);
			}
			if (localDetalheConsultaRealizadaChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-consulta-realizada-cheque"));

				if (localDetalheConsultaRealizadaCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-consulta-realizada-cheque cannot be null!!");
				}
				elementList.add(localDetalheConsultaRealizadaCheque);
			}
			if (localDetalheReferenciaisNegociosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-referenciais-negocios"));

				if (localDetalheReferenciaisNegocios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-referenciais-negocios cannot be null!!");
				}
				elementList.add(localDetalheReferenciaisNegocios);
			}
			if (localDetalheHistoricoPagamentoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-historico-pagamento"));

				if (localDetalheHistoricoPagamento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-pagamento cannot be null!!");
				}
				elementList.add(localDetalheHistoricoPagamento);
			}
			if (localDetalheHistoricoChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-historico-cheque"));

				if (localDetalheHistoricoCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-cheque cannot be null!!");
				}
				elementList.add(localDetalheHistoricoCheque);
			}
			if (localDetalheHistoricoChequeDocumentoDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-historico-cheque-documento-diferente"));

				if (localDetalheHistoricoChequeDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-cheque-documento-diferente cannot be null!!");
				}
				elementList.add(localDetalheHistoricoChequeDocumentoDiferente);
			}
			if (localDetalheHistoricoContaCorrenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-historico-conta-corrente"));

				if (localDetalheHistoricoContaCorrente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-historico-conta-corrente cannot be null!!");
				}
				elementList.add(localDetalheHistoricoContaCorrente);
			}
			if (localDetalheRelacionamentoMaisAntigoComFornecedoresTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-relacionamento-mais-antigo-com-fornecedores"));

				if (localDetalheRelacionamentoMaisAntigoComFornecedores == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-relacionamento-mais-antigo-com-fornecedores cannot be null!!");
				}
				elementList
						.add(localDetalheRelacionamentoMaisAntigoComFornecedores);
			}
			if (localDetalheRegistroConsultaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-registro-consulta"));

				if (localDetalheRegistroConsulta == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-registro-consulta cannot be null!!");
				}
				elementList.add(localDetalheRegistroConsulta);
			}
			if (localDetalheUltimasConsultasTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-ultimas-consultas"));

				if (localDetalheUltimasConsultas == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-ultimas-consultas cannot be null!!");
				}
				elementList.add(localDetalheUltimasConsultas);
			}
			if (localDetalheCapitalSocialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-capital-social"));

				if (localDetalheCapitalSocial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-capital-social cannot be null!!");
				}
				elementList.add(localDetalheCapitalSocial);
			}
			if (localDetalheAntecessoraTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-antecessora"));

				if (localDetalheAntecessora == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-antecessora cannot be null!!");
				}
				elementList.add(localDetalheAntecessora);
			}
			if (localDetalheAtividadeEmpresaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-atividade-empresa"));

				if (localDetalheAtividadeEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-atividade-empresa cannot be null!!");
				}
				elementList.add(localDetalheAtividadeEmpresa);
			}
			if (localDetalheFilialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-filial"));

				if (localDetalheFilial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-filial cannot be null!!");
				}
				elementList.add(localDetalheFilial);
			}
			if (localDetalheInformacoesAdicionaisTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-informacoes-adicionais"));

				if (localDetalheInformacoesAdicionais == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-informacoes-adicionais cannot be null!!");
				}
				elementList.add(localDetalheInformacoesAdicionais);
			}
			if (localDetalheIncorporacaoFusaoCisaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-incorporacao-fusao-cisao"));

				if (localDetalheIncorporacaoFusaoCisao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-incorporacao-fusao-cisao cannot be null!!");
				}
				elementList.add(localDetalheIncorporacaoFusaoCisao);
			}
			if (localDetalhePrincipaisProdutosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-principais-produtos"));

				if (localDetalhePrincipaisProdutos == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-principais-produtos cannot be null!!");
				}
				elementList.add(localDetalhePrincipaisProdutos);
			}
			if (localDetalheSpcScore3MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-spc-score-3-meses"));

				if (localDetalheSpcScore3Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc-score-3-meses cannot be null!!");
				}
				elementList.add(localDetalheSpcScore3Meses);
			}
			if (localDetalheSpcScore12MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-spc-score-12-meses"));

				if (localDetalheSpcScore12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc-score-12-meses cannot be null!!");
				}
				elementList.add(localDetalheSpcScore12Meses);
			}
			if (localDetalheSpcObitoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-spc-obito"));

				if (localDetalheSpcObito == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-spc-obito cannot be null!!");
				}
				elementList.add(localDetalheSpcObito);
			}
			if (localDetalheConfirmacaoRgTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"detalhe-confirmacao-rg"));

				if (localDetalheConfirmacaoRg == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"detalhe-confirmacao-rg cannot be null!!");
				}
				elementList.add(localDetalheConfirmacaoRg);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoInsumoChoice_type0 parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoInsumoChoice_type0 object = new ResultadoInsumoChoice_type0();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-grafia-pj").equals(reader
									.getName())) {

						object.setDetalheGrafiaPj(GrafiaPJ.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "detalhe-spc")
									.equals(reader.getName())) {

						object.setDetalheSpc(InsumoSPC.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-cheque-lojista").equals(reader
									.getName())) {

						object.setDetalheChequeLojista(InsumoChequeLojista.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "detalhe-ccf")
									.equals(reader.getName())) {

						object.setDetalheCcf(InsumoCCF.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contra-ordem").equals(reader
									.getName())) {

						object.setDetalheContraOrdem(InsumoContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contra-ordem-documento-diferente")
									.equals(reader.getName())) {

						object.setDetalheContraOrdemDocumentoDiferente(InsumoContraOrdemDocumentoDiferente.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contra-ordem-agencia-conta-diferente")
									.equals(reader.getName())) {

						object.setDetalheContraOrdemAgenciaContaDiferente(InsumoContraOrdemAgenciaContaDiferente.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contra-ordem-agencia-diferente")
									.equals(reader.getName())) {

						object.setDetalheContraOrdemAgenciaDiferente(InsumoContraOrdemAgenciaDiferente.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contumacia").equals(reader
									.getName())) {

						object.setDetalheContumacia(InsumoContumacia.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-dados-agencia-bancaria")
									.equals(reader.getName())) {

						object.setDetalheDadosAgenciaBancaria(DadosAgenciaBancaria.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-banco-agencia-conta-documento-diferente")
									.equals(reader.getName())) {

						object.setDetalheBancoAgenciaContaDocumentoDiferente(AgenciaContaDocumentoDiferente.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-consulta-realizada").equals(reader
									.getName())) {

						object.setDetalheConsultaRealizada(InsumoConsultaRealizada.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-credito-concedido").equals(reader
									.getName())) {

						object.setDetalheCreditoConcedido(InsumoCreditoConcedido.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-alerta-documento").equals(reader
									.getName())) {

						object.setDetalheAlertaDocumento(InsumoAlertaDocumento.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "detalhe-acao")
									.equals(reader.getName())) {

						object.setDetalheAcao(InsumoAcao.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-protesto")
									.equals(reader.getName())) {

						object.setDetalheProtesto(InsumoProtesto.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-participacao-empresa")
									.equals(reader.getName())) {

						object.setDetalheParticipacaoEmpresa(InsumoParticipacaoEmpresas.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-socio").equals(reader.getName())) {

						object.setDetalheSocio(InsumoQuadroSocietario.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-administrador").equals(reader
									.getName())) {

						object.setDetalheAdministrador(InsumoQuadroAdministrativo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-endereco-cep-consultado")
									.equals(reader.getName())) {

						object.setDetalheEnderecoCepConsultado(InsumoEnderecoCEPConsultado.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-telefone-consultado")
									.equals(reader.getName())) {

						object.setDetalheTelefoneConsultado(InsumoDadosTelefoneConsultado.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-telefone-vinculado-consumidor")
									.equals(reader.getName())) {

						object.setDetalheTelefoneVinculadoConsumidor(InsumoTelefoneVinculadoConsumidor.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-telefone-vinculado-assinante-consultado")
									.equals(reader.getName())) {

						object.setDetalheTelefoneVinculadoAssinanteConsultado(InsumoTelefoneVinculadoAssinanteConsultado.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-ultimo-telefone-informado")
									.equals(reader.getName())) {

						object.setDetalheUltimoTelefoneInformado(InsumoTelefoneConsultado.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-ultimo-endereco-informado")
									.equals(reader.getName())) {

						object.setDetalheUltimoEnderecoInformado(InsumoOcorrenciaConsumidor.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-informacao-poder-judiciario")
									.equals(reader.getName())) {

						object.setDetalheInformacaoPoderJudiciario(InsumoInformacaoPoderJudiciario.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-riskscoring-6-meses")
									.equals(reader.getName())) {

						object.setDetalheRiskscoring6Meses(InsumoRiskscoring6Meses.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-riskscoring-12-meses")
									.equals(reader.getName())) {

						object.setDetalheRiskscoring12Meses(InsumoRiskscoring12Meses.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-cheque-sem-fundo-achei")
									.equals(reader.getName())) {

						object.setDetalheChequeSemFundoAchei(InsumoChequeSemFundoAchei.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-cheque-sem-fundo-achei-ccf")
									.equals(reader.getName())) {

						object.setDetalheChequeSemFundoAcheiCcf(InsumoChequeSemFundoAcheiCCF.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contumacia-srs").equals(reader
									.getName())) {

						object.setDetalheContumaciaSrs(InsumoContumaciaSRS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-participacao-falencia")
									.equals(reader.getName())) {

						object.setDetalheParticipacaoFalencia(InsumoParticipacaoFalencia.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-divida-vencida").equals(reader
									.getName())) {

						object.setDetalheDividaVencida(InsumoDividaVencida.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-restricao-financeira")
									.equals(reader.getName())) {

						object.setDetalheRestricaoFinanceira(InsumoRestricaoFinanceira.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-pendencia-financeira")
									.equals(reader.getName())) {

						object.setDetalhePendenciaFinanceira(InsumoPendenciaFinanceira.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-cheque-sem-fundo-varejo")
									.equals(reader.getName())) {

						object.setDetalheChequeSemFundoVarejo(InsumoChequeSemFundoVarejo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contra-ordem-srs").equals(reader
									.getName())) {

						object.setDetalheContraOrdemSrs(InsumoContraOrdemSRS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-contra-ordem-documento-diferente-srs")
									.equals(reader.getName())) {

						object.setDetalheContraOrdemDocumentoDiferenteSrs(InsumoContraOrdemDocumentoDiferenteSRS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-cheque-outras-ocorrencias-srs")
									.equals(reader.getName())) {

						object.setDetalheChequeOutrasOcorrenciasSrs(InsumoChequeOutrasOcorrenciasSRS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-cheque-consulta-online-srs")
									.equals(reader.getName())) {

						object.setDetalheChequeConsultaOnlineSrs(InsumoChequeConsultaOnlineSRS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-consulta-realizada-cheque")
									.equals(reader.getName())) {

						object.setDetalheConsultaRealizadaCheque(InsumoConsultaRealizadaCheque.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-referenciais-negocios")
									.equals(reader.getName())) {

						object.setDetalheReferenciaisNegocios(InsumoReferenciaisNegocios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-historico-pagamento")
									.equals(reader.getName())) {

						object.setDetalheHistoricoPagamento(InsumoHistoricoPagamento.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-historico-cheque").equals(reader
									.getName())) {

						object.setDetalheHistoricoCheque(InsumoHistoricoCheque.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-historico-cheque-documento-diferente")
									.equals(reader.getName())) {

						object.setDetalheHistoricoChequeDocumentoDiferente(InsumoHistoricoChequeDocumentoDiferente.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-historico-conta-corrente")
									.equals(reader.getName())) {

						object.setDetalheHistoricoContaCorrente(InsumoHistoricoContaCorrente.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-relacionamento-mais-antigo-com-fornecedores")
									.equals(reader.getName())) {

						object.setDetalheRelacionamentoMaisAntigoComFornecedores(InsumoRelacionamentoMaisAntigoComFornecedores.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-registro-consulta").equals(reader
									.getName())) {

						object.setDetalheRegistroConsulta(InsumoRegistroConsultas.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-ultimas-consultas").equals(reader
									.getName())) {

						object.setDetalheUltimasConsultas(InsumoUltimasConsultas.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-capital-social").equals(reader
									.getName())) {

						object.setDetalheCapitalSocial(InsumoCapitalSocial.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-antecessora").equals(reader
									.getName())) {

						object.setDetalheAntecessora(InsumoAntecessora.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-atividade-empresa").equals(reader
									.getName())) {

						object.setDetalheAtividadeEmpresa(InsumoAtividadeEmpresa.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-filial").equals(reader.getName())) {

						object.setDetalheFilial(InsumoFilial.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-informacoes-adicionais")
									.equals(reader.getName())) {

						object.setDetalheInformacoesAdicionais(InsumoInformacoesAdicionais.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-incorporacao-fusao-cisao")
									.equals(reader.getName())) {

						object.setDetalheIncorporacaoFusaoCisao(InsumoIncorporacaoFusaoCisao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-principais-produtos")
									.equals(reader.getName())) {

						object.setDetalhePrincipaisProdutos(InsumoPrincipaisProdutos.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-spc-score-3-meses").equals(reader
									.getName())) {

						object.setDetalheSpcScore3Meses(InsumoSPCScore3Meses.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-spc-score-12-meses").equals(reader
									.getName())) {

						object.setDetalheSpcScore12Meses(InsumoSPCScore12Meses.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-spc-obito").equals(reader
									.getName())) {

						object.setDetalheSpcObito(InsumoObito.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"detalhe-confirmacao-rg").equals(reader
									.getName())) {

						object.setDetalheConfirmacaoRg(InsumoRg.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoChequeSemFundoVarejo implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Cheque-Sem-Fundo-Varejo Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DadosBancarios
		 */

		protected DadosBancarios localDadosBancarios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDadosBancariosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return DadosBancarios
		 */
		public DadosBancarios getDadosBancarios() {
			return localDadosBancarios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DadosBancarios
		 */
		public void setDadosBancarios(DadosBancarios param) {

			if (param != null) {
				// update the setting tracker
				localDadosBancariosTracker = true;
			} else {
				localDadosBancariosTracker = false;

			}

			this.localDadosBancarios = param;

		}

		/**
		 * field for CidadeOcorrencia
		 */

		protected Cidade localCidadeOcorrencia;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeOcorrenciaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidadeOcorrencia() {
			return localCidadeOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CidadeOcorrencia
		 */
		public void setCidadeOcorrencia(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeOcorrenciaTracker = true;
			} else {
				localCidadeOcorrenciaTracker = false;

			}

			this.localCidadeOcorrencia = param;

		}

		/**
		 * field for DataOcorrenciaMaisRecente This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrenciaMaisRecente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrenciaMaisRecente() {
			return localDataOcorrenciaMaisRecente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrenciaMaisRecente
		 */
		public void setDataOcorrenciaMaisRecente(java.util.Calendar param) {

			this.localDataOcorrenciaMaisRecente = param;

		}

		/**
		 * field for NumeroLoja This was an Attribute!
		 */

		protected int localNumeroLoja;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumeroLoja() {
			return localNumeroLoja;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroLoja
		 */
		public void setNumeroLoja(int param) {

			this.localNumeroLoja = param;

		}

		/**
		 * field for OrigemOcorrenciaMaisRecente This was an Attribute!
		 */

		protected java.lang.String localOrigemOcorrenciaMaisRecente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigemOcorrenciaMaisRecente() {
			return localOrigemOcorrenciaMaisRecente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            OrigemOcorrenciaMaisRecente
		 */
		public void setOrigemOcorrenciaMaisRecente(java.lang.String param) {

			this.localOrigemOcorrenciaMaisRecente = param;

		}

		/**
		 * field for QuantidadeCheques This was an Attribute!
		 */

		protected int localQuantidadeCheques;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeCheques() {
			return localQuantidadeCheques;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeCheques
		 */
		public void setQuantidadeCheques(int param) {

			this.localQuantidadeCheques = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoChequeSemFundoVarejo.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Cheque-Sem-Fundo-Varejo",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Cheque-Sem-Fundo-Varejo", xmlWriter);
				}

			}

			if (localDataOcorrenciaMaisRecente != null) {

				writeAttribute(
						"",
						"data-ocorrencia-mais-recente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrenciaMaisRecente),
						xmlWriter);

			}

			if (localNumeroLoja != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero-loja",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroLoja), xmlWriter);

			}

			if (localOrigemOcorrenciaMaisRecente != null) {

				writeAttribute(
						"",
						"origem-ocorrencia-mais-recente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigemOcorrenciaMaisRecente),
						xmlWriter);

			}

			if (localQuantidadeCheques != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-cheques",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeCheques),
						xmlWriter);

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			if (localCidadeOcorrenciaTracker) {
				if (localCidadeOcorrencia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-ocorrencia cannot be null!!");
				}
				localCidadeOcorrencia.serialize(new javax.xml.namespace.QName(
						"", "cidade-ocorrencia"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			if (localCidadeOcorrenciaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cidade-ocorrencia"));

				if (localCidadeOcorrencia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-ocorrencia cannot be null!!");
				}
				elementList.add(localCidadeOcorrencia);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-ocorrencia-mais-recente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrenciaMaisRecente));

			attribList.add(new javax.xml.namespace.QName("", "numero-loja"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroLoja));

			attribList.add(new javax.xml.namespace.QName("",
					"origem-ocorrencia-mais-recente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigemOcorrenciaMaisRecente));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-cheques"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeCheques));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoChequeSemFundoVarejo parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoChequeSemFundoVarejo object = new InsumoChequeSemFundoVarejo();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Cheque-Sem-Fundo-Varejo".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoChequeSemFundoVarejo) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia-mais-recente"
					java.lang.String tempAttribDataOcorrenciaMaisRecente =

					reader.getAttributeValue(null,
							"data-ocorrencia-mais-recente");

					if (tempAttribDataOcorrenciaMaisRecente != null) {
						java.lang.String content = tempAttribDataOcorrenciaMaisRecente;

						object.setDataOcorrenciaMaisRecente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrenciaMaisRecente));

					} else {

					}
					handledAttributes.add("data-ocorrencia-mais-recente");

					// handle attribute "numero-loja"
					java.lang.String tempAttribNumeroLoja =

					reader.getAttributeValue(null, "numero-loja");

					if (tempAttribNumeroLoja != null) {
						java.lang.String content = tempAttribNumeroLoja;

						object.setNumeroLoja(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumeroLoja));

					} else {

						object.setNumeroLoja(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero-loja");

					// handle attribute "origem-ocorrencia-mais-recente"
					java.lang.String tempAttribOrigemOcorrenciaMaisRecente =

					reader.getAttributeValue(null,
							"origem-ocorrencia-mais-recente");

					if (tempAttribOrigemOcorrenciaMaisRecente != null) {
						java.lang.String content = tempAttribOrigemOcorrenciaMaisRecente;

						object.setOrigemOcorrenciaMaisRecente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigemOcorrenciaMaisRecente));

					} else {

					}
					handledAttributes.add("origem-ocorrencia-mais-recente");

					// handle attribute "quantidade-cheques"
					java.lang.String tempAttribQuantidadeCheques =

					reader.getAttributeValue(null, "quantidade-cheques");

					if (tempAttribQuantidadeCheques != null) {
						java.lang.String content = tempAttribQuantidadeCheques;

						object.setQuantidadeCheques(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeCheques));

					} else {

						object.setQuantidadeCheques(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-cheques");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cidade-ocorrencia").equals(reader
									.getName())) {

						object.setCidadeOcorrencia(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class MensagemComplementar implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Mensagem-Complementar Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Mensagem This was an Array!
		 */

		protected java.lang.String[] localMensagem;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMensagemTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String[]
		 */
		public java.lang.String[] getMensagem() {
			return localMensagem;
		}

		/**
		 * validate the array for Mensagem
		 */
		protected void validateMensagem(java.lang.String[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Mensagem
		 */
		public void setMensagem(java.lang.String[] param) {

			validateMensagem(param);

			if (param != null) {
				// update the setting tracker
				localMensagemTracker = true;
			} else {
				localMensagemTracker = false;

			}

			this.localMensagem = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            java.lang.String
		 */
		public void addMensagem(java.lang.String param) {
			if (localMensagem == null) {
				localMensagem = new java.lang.String[] {};
			}

			// update the setting tracker
			localMensagemTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localMensagem);
			list.add(param);
			this.localMensagem = (java.lang.String[]) list
					.toArray(new java.lang.String[list.size()]);

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					MensagemComplementar.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Mensagem-Complementar",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Mensagem-Complementar", xmlWriter);
				}

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}
			if (localMensagemTracker) {
				if (localMensagem != null) {
					namespace = "";
					boolean emptyNamespace = namespace == null
							|| namespace.length() == 0;
					prefix = emptyNamespace ? null : xmlWriter
							.getPrefix(namespace);
					for (int i = 0; i < localMensagem.length; i++) {

						if (localMensagem[i] != null) {

							if (!emptyNamespace) {
								if (prefix == null) {
									java.lang.String prefix2 = generatePrefix(namespace);

									xmlWriter.writeStartElement(prefix2,
											"mensagem", namespace);
									xmlWriter
											.writeNamespace(prefix2, namespace);
									xmlWriter.setPrefix(prefix2, namespace);

								} else {
									xmlWriter.writeStartElement(namespace,
											"mensagem");
								}

							} else {
								xmlWriter.writeStartElement("mensagem");
							}

							xmlWriter
									.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(localMensagem[i]));

							xmlWriter.writeEndElement();

						} else {

							// we have to do nothing since minOccurs is zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem cannot be null!!");

				}

			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localMensagemTracker) {
				if (localMensagem != null) {
					for (int i = 0; i < localMensagem.length; i++) {

						if (localMensagem[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"mensagem"));
							elementList
									.add(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(localMensagem[i]));
						} else {

							// have to do nothing

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static MensagemComplementar parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				MensagemComplementar object = new MensagemComplementar();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Mensagem-Complementar".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (MensagemComplementar) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					reader.next();

					java.util.ArrayList list1 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "mensagem")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list1.add(reader.getElementText());

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone1 = false;
						while (!loopDone1) {
							// Ensure we are at the EndElement
							while (!reader.isEndElement()) {
								reader.next();
							}
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone1 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"mensagem").equals(reader.getName())) {
									list1.add(reader.getElementText());

								} else {
									loopDone1 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setMensagem((java.lang.String[]) list1
								.toArray(new java.lang.String[list1.size()]));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class CartaAnuencia implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"Carta-Anuencia", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CartaAnuencia
		 */

		protected java.lang.String localCartaAnuencia;

		private static java.util.HashMap _table_ = new java.util.HashMap();

		// Constructor

		protected CartaAnuencia(java.lang.String value, boolean isRegisterValue) {
			localCartaAnuencia = value;
			if (isRegisterValue) {

				_table_.put(localCartaAnuencia, this);

			}

		}

		public static final java.lang.String _CREDOR = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("CREDOR");

		public static final java.lang.String _CREDOR_ELETRONICA = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("CREDOR_ELETRONICA");

		public static final java.lang.String _DEVEDOR = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("DEVEDOR");

		public static final CartaAnuencia CREDOR = new CartaAnuencia(_CREDOR,
				true);

		public static final CartaAnuencia CREDOR_ELETRONICA = new CartaAnuencia(
				_CREDOR_ELETRONICA, true);

		public static final CartaAnuencia DEVEDOR = new CartaAnuencia(_DEVEDOR,
				true);

		public java.lang.String getValue() {
			return localCartaAnuencia;
		}

		public boolean equals(java.lang.Object obj) {
			return (obj == this);
		}

		public int hashCode() {
			return toString().hashCode();
		}

		public java.lang.String toString() {

			return localCartaAnuencia.toString();

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					CartaAnuencia.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Carta-Anuencia",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Carta-Anuencia", xmlWriter);
				}
			}

			if (localCartaAnuencia == null) {

				throw new org.apache.axis2.databinding.ADBException(
						"Value cannot be null !!");

			} else {

				xmlWriter.writeCharacters(localCartaAnuencia);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCartaAnuencia) },
					null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static CartaAnuencia fromValue(java.lang.String value)
					throws java.lang.IllegalArgumentException {
				CartaAnuencia enumeration = (CartaAnuencia)

				_table_.get(value);

				if (enumeration == null)
					throw new java.lang.IllegalArgumentException();
				return enumeration;
			}

			public static CartaAnuencia fromString(java.lang.String value,
					java.lang.String namespaceURI)
					throws java.lang.IllegalArgumentException {
				try {

					return fromValue(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(value));

				} catch (java.lang.Exception e) {
					throw new java.lang.IllegalArgumentException();
				}
			}

			public static CartaAnuencia fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return CartaAnuencia.Factory.fromString(content,
							namespaceUri);
				} else {
					return CartaAnuencia.Factory.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static CartaAnuencia parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				CartaAnuencia object = null;
				// initialize a hash map to keep values
				java.util.Map attributeMap = new java.util.HashMap();
				java.util.List extraAttributeList = new java.util.ArrayList();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							java.lang.String content = reader.getElementText();

							if (content.indexOf(":") > 0) {
								// this seems to be a Qname so find the
								// namespace and send
								prefix = content.substring(0,
										content.indexOf(":"));
								namespaceuri = reader.getNamespaceURI(prefix);
								object = CartaAnuencia.Factory.fromString(
										content, namespaceuri);
							} else {
								// this seems to be not a qname send and empty
								// namespace incase of it is
								// check is done in fromString method
								object = CartaAnuencia.Factory.fromString(
										content, "");
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoConsumidor implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-Consumidor Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for ConsumidorPessoaFisica
		 */

		protected PessoaFisica localConsumidorPessoaFisica;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localConsumidorPessoaFisicaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return PessoaFisica
		 */
		public PessoaFisica getConsumidorPessoaFisica() {
			return localConsumidorPessoaFisica;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ConsumidorPessoaFisica
		 */
		public void setConsumidorPessoaFisica(PessoaFisica param) {

			if (param != null) {
				// update the setting tracker
				localConsumidorPessoaFisicaTracker = true;
			} else {
				localConsumidorPessoaFisicaTracker = false;

			}

			this.localConsumidorPessoaFisica = param;

		}

		/**
		 * field for ConsumidorPessoaJuridica
		 */

		protected PessoaJuridica localConsumidorPessoaJuridica;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localConsumidorPessoaJuridicaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return PessoaJuridica
		 */
		public PessoaJuridica getConsumidorPessoaJuridica() {
			return localConsumidorPessoaJuridica;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ConsumidorPessoaJuridica
		 */
		public void setConsumidorPessoaJuridica(PessoaJuridica param) {

			if (param != null) {
				// update the setting tracker
				localConsumidorPessoaJuridicaTracker = true;
			} else {
				localConsumidorPessoaJuridicaTracker = false;

			}

			this.localConsumidorPessoaJuridica = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoConsumidor.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Resultado-Consumidor",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Resultado-Consumidor", xmlWriter);
				}

			}
			if (localConsumidorPessoaFisicaTracker) {
				if (localConsumidorPessoaFisica == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consumidor-pessoa-fisica cannot be null!!");
				}
				localConsumidorPessoaFisica
						.serialize(new javax.xml.namespace.QName("",
								"consumidor-pessoa-fisica"), factory, xmlWriter);
			}
			if (localConsumidorPessoaJuridicaTracker) {
				if (localConsumidorPessoaJuridica == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consumidor-pessoa-juridica cannot be null!!");
				}
				localConsumidorPessoaJuridica.serialize(
						new javax.xml.namespace.QName("",
								"consumidor-pessoa-juridica"), factory,
						xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localConsumidorPessoaFisicaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"consumidor-pessoa-fisica"));

				if (localConsumidorPessoaFisica == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consumidor-pessoa-fisica cannot be null!!");
				}
				elementList.add(localConsumidorPessoaFisica);
			}
			if (localConsumidorPessoaJuridicaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"consumidor-pessoa-juridica"));

				if (localConsumidorPessoaJuridica == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consumidor-pessoa-juridica cannot be null!!");
				}
				elementList.add(localConsumidorPessoaJuridica);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoConsumidor parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoConsumidor object = new ResultadoConsumidor();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resultado-Consumidor".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResultadoConsumidor) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"consumidor-pessoa-fisica").equals(reader
									.getName())) {

						object.setConsumidorPessoaFisica(PessoaFisica.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"consumidor-pessoa-juridica").equals(reader
									.getName())) {

						object.setConsumidorPessoaJuridica(PessoaJuridica.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Endereco implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Endereco Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cidade
		 */

		protected Cidade localCidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidade() {
			return localCidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cidade
		 */
		public void setCidade(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeTracker = true;
			} else {
				localCidadeTracker = false;

			}

			this.localCidade = param;

		}

		/**
		 * field for Logradouro This was an Attribute!
		 */

		protected java.lang.String localLogradouro;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getLogradouro() {
			return localLogradouro;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Logradouro
		 */
		public void setLogradouro(java.lang.String param) {

			this.localLogradouro = param;

		}

		/**
		 * field for Numero This was an Attribute!
		 */

		protected java.lang.String localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(java.lang.String param) {

			this.localNumero = param;

		}

		/**
		 * field for Complemento This was an Attribute!
		 */

		protected java.lang.String localComplemento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getComplemento() {
			return localComplemento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Complemento
		 */
		public void setComplemento(java.lang.String param) {

			this.localComplemento = param;

		}

		/**
		 * field for Bairro This was an Attribute!
		 */

		protected java.lang.String localBairro;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getBairro() {
			return localBairro;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Bairro
		 */
		public void setBairro(java.lang.String param) {

			this.localBairro = param;

		}

		/**
		 * field for Cep This was an Attribute!
		 */

		protected Cep localCep;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cep
		 */
		public Cep getCep() {
			return localCep;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cep
		 */
		public void setCep(Cep param) {

			this.localCep = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Endereco.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Endereco", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Endereco", xmlWriter);
				}

			}

			if (localLogradouro != null) {

				writeAttribute("", "logradouro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localLogradouro), xmlWriter);

			}

			if (localNumero != null) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localComplemento != null) {

				writeAttribute("", "complemento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localComplemento), xmlWriter);

			}

			if (localBairro != null) {

				writeAttribute("", "bairro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localBairro), xmlWriter);

			}

			if (localCep != null) {
				writeAttribute("", "cep", localCep.toString(), xmlWriter);
			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			attribList.add(new javax.xml.namespace.QName("", "logradouro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localLogradouro));

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "complemento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localComplemento));

			attribList.add(new javax.xml.namespace.QName("", "bairro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localBairro));

			attribList.add(new javax.xml.namespace.QName("", "cep"));

			attribList.add(localCep.toString());

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Endereco parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Endereco object = new Endereco();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Endereco".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Endereco) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "logradouro"
					java.lang.String tempAttribLogradouro =

					reader.getAttributeValue(null, "logradouro");

					if (tempAttribLogradouro != null) {
						java.lang.String content = tempAttribLogradouro;

						object.setLogradouro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribLogradouro));

					} else {

					}
					handledAttributes.add("logradouro");

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumero));

					} else {

					}
					handledAttributes.add("numero");

					// handle attribute "complemento"
					java.lang.String tempAttribComplemento =

					reader.getAttributeValue(null, "complemento");

					if (tempAttribComplemento != null) {
						java.lang.String content = tempAttribComplemento;

						object.setComplemento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribComplemento));

					} else {

					}
					handledAttributes.add("complemento");

					// handle attribute "bairro"
					java.lang.String tempAttribBairro =

					reader.getAttributeValue(null, "bairro");

					if (tempAttribBairro != null) {
						java.lang.String content = tempAttribBairro;

						object.setBairro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribBairro));

					} else {

					}
					handledAttributes.add("bairro");

					// handle attribute "cep"
					java.lang.String tempAttribCep =

					reader.getAttributeValue(null, "cep");

					if (tempAttribCep != null) {
						java.lang.String content = tempAttribCep;

						object.setCep(Cep.Factory.fromString(reader,
								tempAttribCep));

					} else {

					}
					handledAttributes.add("cep");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoTelefoneVinculadoConsumidor implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Telefone-Vinculado-Consumidor Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Assinante
		 */

		protected AssinanteTelefone localAssinante;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAssinanteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return AssinanteTelefone
		 */
		public AssinanteTelefone getAssinante() {
			return localAssinante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Assinante
		 */
		public void setAssinante(AssinanteTelefone param) {

			if (param != null) {
				// update the setting tracker
				localAssinanteTracker = true;
			} else {
				localAssinanteTracker = false;

			}

			this.localAssinante = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoTelefoneVinculadoConsumidor.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Telefone-Vinculado-Consumidor",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Telefone-Vinculado-Consumidor",
							xmlWriter);
				}

			}
			if (localAssinanteTracker) {
				if (localAssinante == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"assinante cannot be null!!");
				}
				localAssinante.serialize(new javax.xml.namespace.QName("",
						"assinante"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localAssinanteTracker) {
				elementList.add(new javax.xml.namespace.QName("", "assinante"));

				if (localAssinante == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"assinante cannot be null!!");
				}
				elementList.add(localAssinante);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoTelefoneVinculadoConsumidor parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoTelefoneVinculadoConsumidor object = new InsumoTelefoneVinculadoConsumidor();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Telefone-Vinculado-Consumidor"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoTelefoneVinculadoConsumidor) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "assinante")
									.equals(reader.getName())) {

						object.setAssinante(AssinanteTelefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Cheque implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cheque Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DadosBancarios
		 */

		protected DadosBancarios localDadosBancarios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDadosBancariosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return DadosBancarios
		 */
		public DadosBancarios getDadosBancarios() {
			return localDadosBancarios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DadosBancarios
		 */
		public void setDadosBancarios(DadosBancarios param) {

			if (param != null) {
				// update the setting tracker
				localDadosBancariosTracker = true;
			} else {
				localDadosBancariosTracker = false;

			}

			this.localDadosBancarios = param;

		}

		/**
		 * field for Numero This was an Attribute!
		 */

		protected int localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(int param) {

			this.localNumero = param;

		}

		/**
		 * field for Digito This was an Attribute!
		 */

		protected int localDigito;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getDigito() {
			return localDigito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Digito
		 */
		public void setDigito(int param) {

			this.localDigito = param;

		}

		/**
		 * field for Valor This was an Attribute!
		 */

		protected java.math.BigDecimal localValor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValor() {
			return localValor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Valor
		 */
		public void setValor(java.math.BigDecimal param) {

			this.localValor = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Cheque.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cheque", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cheque", xmlWriter);
				}

			}

			if (localNumero != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localDigito != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "digito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigito), xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "digito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigito));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Cheque parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Cheque object = new Cheque();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cheque".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Cheque) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumero));

					} else {

						object.setNumero(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero");

					// handle attribute "digito"
					java.lang.String tempAttribDigito =

					reader.getAttributeValue(null, "digito");

					if (tempAttribDigito != null) {
						java.lang.String content = tempAttribDigito;

						object.setDigito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribDigito));

					} else {

						object.setDigito(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("digito");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class GrafiaPJ implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Grafia-PJ Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for RazaoSocial This was an Attribute!
		 */

		protected java.lang.String localRazaoSocial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getRazaoSocial() {
			return localRazaoSocial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RazaoSocial
		 */
		public void setRazaoSocial(java.lang.String param) {

			this.localRazaoSocial = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					GrafiaPJ.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Grafia-PJ", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Grafia-PJ", xmlWriter);
				}

			}

			if (localRazaoSocial != null) {

				writeAttribute("", "razao-social",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRazaoSocial), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "razao-social"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRazaoSocial));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static GrafiaPJ parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				GrafiaPJ object = new GrafiaPJ();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Grafia-PJ".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (GrafiaPJ) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "razao-social"
					java.lang.String tempAttribRazaoSocial =

					reader.getAttributeValue(null, "razao-social");

					if (tempAttribRazaoSocial != null) {
						java.lang.String content = tempAttribRazaoSocial;

						object.setRazaoSocial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribRazaoSocial));

					} else {

					}
					handledAttributes.add("razao-social");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class TelefoneFiltro implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Telefone-Filtro Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Ddd
		 */

		protected int localDdd;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getDdd() {
			return localDdd;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Ddd
		 */
		public void setDdd(int param) {

			this.localDdd = param;

		}

		/**
		 * field for Numero
		 */

		protected int localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(int param) {

			this.localNumero = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					TelefoneFiltro.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Telefone-Filtro",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Telefone-Filtro", xmlWriter);
				}

			}

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "ddd", namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "ddd");
				}

			} else {
				xmlWriter.writeStartElement("ddd");
			}

			if (localDdd == java.lang.Integer.MIN_VALUE) {

				throw new org.apache.axis2.databinding.ADBException(
						"ddd cannot be null!!");

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDdd));
			}

			xmlWriter.writeEndElement();

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "numero", namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "numero");
				}

			} else {
				xmlWriter.writeStartElement("numero");
			}

			if (localNumero == java.lang.Integer.MIN_VALUE) {

				throw new org.apache.axis2.databinding.ADBException(
						"numero cannot be null!!");

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero));
			}

			xmlWriter.writeEndElement();

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			elementList.add(new javax.xml.namespace.QName("", "ddd"));

			elementList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDdd));

			elementList.add(new javax.xml.namespace.QName("", "numero"));

			elementList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static TelefoneFiltro parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				TelefoneFiltro object = new TelefoneFiltro();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Telefone-Filtro".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (TelefoneFiltro) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "ddd")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDdd(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "numero")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoReferenciaisNegocios implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Referenciais-Negocios Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataPotencial This was an Attribute!
		 */

		protected java.util.Calendar localDataPotencial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataPotencial() {
			return localDataPotencial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataPotencial
		 */
		public void setDataPotencial(java.util.Calendar param) {

			this.localDataPotencial = param;

		}

		/**
		 * field for DescricaoNegocio This was an Attribute!
		 */

		protected java.lang.String localDescricaoNegocio;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoNegocio() {
			return localDescricaoNegocio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoNegocio
		 */
		public void setDescricaoNegocio(java.lang.String param) {

			this.localDescricaoNegocio = param;

		}

		/**
		 * field for MediaPotencial This was an Attribute!
		 */

		protected java.math.BigDecimal localMediaPotencial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getMediaPotencial() {
			return localMediaPotencial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MediaPotencial
		 */
		public void setMediaPotencial(java.math.BigDecimal param) {

			this.localMediaPotencial = param;

		}

		/**
		 * field for ValorPotencial This was an Attribute!
		 */

		protected java.math.BigDecimal localValorPotencial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorPotencial() {
			return localValorPotencial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorPotencial
		 */
		public void setValorPotencial(java.math.BigDecimal param) {

			this.localValorPotencial = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoReferenciaisNegocios.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Referenciais-Negocios",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Referenciais-Negocios", xmlWriter);
				}

			}

			if (localDataPotencial != null) {

				writeAttribute("", "data-potencial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataPotencial), xmlWriter);

			}

			if (localDescricaoNegocio != null) {

				writeAttribute("", "descricao-negocio",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoNegocio),
						xmlWriter);

			}

			if (localMediaPotencial != null) {

				writeAttribute("", "media-potencial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMediaPotencial),
						xmlWriter);

			}

			if (localValorPotencial != null) {

				writeAttribute("", "valor-potencial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorPotencial),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "data-potencial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataPotencial));

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-negocio"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricaoNegocio));

			attribList
					.add(new javax.xml.namespace.QName("", "media-potencial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMediaPotencial));

			attribList
					.add(new javax.xml.namespace.QName("", "valor-potencial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorPotencial));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoReferenciaisNegocios parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoReferenciaisNegocios object = new InsumoReferenciaisNegocios();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Referenciais-Negocios".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoReferenciaisNegocios) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-potencial"
					java.lang.String tempAttribDataPotencial =

					reader.getAttributeValue(null, "data-potencial");

					if (tempAttribDataPotencial != null) {
						java.lang.String content = tempAttribDataPotencial;

						object.setDataPotencial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataPotencial));

					} else {

					}
					handledAttributes.add("data-potencial");

					// handle attribute "descricao-negocio"
					java.lang.String tempAttribDescricaoNegocio =

					reader.getAttributeValue(null, "descricao-negocio");

					if (tempAttribDescricaoNegocio != null) {
						java.lang.String content = tempAttribDescricaoNegocio;

						object.setDescricaoNegocio(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoNegocio));

					} else {

					}
					handledAttributes.add("descricao-negocio");

					// handle attribute "media-potencial"
					java.lang.String tempAttribMediaPotencial =

					reader.getAttributeValue(null, "media-potencial");

					if (tempAttribMediaPotencial != null) {
						java.lang.String content = tempAttribMediaPotencial;

						object.setMediaPotencial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribMediaPotencial));

					} else {

					}
					handledAttributes.add("media-potencial");

					// handle attribute "valor-potencial"
					java.lang.String tempAttribValorPotencial =

					reader.getAttributeValue(null, "valor-potencial");

					if (tempAttribValorPotencial != null) {
						java.lang.String content = tempAttribValorPotencial;

						object.setValorPotencial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorPotencial));

					} else {

					}
					handledAttributes.add("valor-potencial");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Operador implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Operador Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Codigo This was an Attribute!
		 */

		protected java.lang.String localCodigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(java.lang.String param) {

			this.localCodigo = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Operador.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Operador", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Operador", xmlWriter);
				}

			}

			if (localCodigo != null) {

				writeAttribute("", "codigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigo), xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "codigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigo));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Operador parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Operador object = new Operador();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Operador".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Operador) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "codigo"
					java.lang.String tempAttribCodigo =

					reader.getAttributeValue(null, "codigo");

					if (tempAttribCodigo != null) {
						java.lang.String content = tempAttribCodigo;

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCodigo));

					} else {

					}
					handledAttributes.add("codigo");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class CartorioObito implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cartorio-Obito Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CidadeCartorio
		 */

		protected Cidade localCidadeCartorio;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeCartorioTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidadeCartorio() {
			return localCidadeCartorio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CidadeCartorio
		 */
		public void setCidadeCartorio(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeCartorioTracker = true;
			} else {
				localCidadeCartorioTracker = false;

			}

			this.localCidadeCartorio = param;

		}

		/**
		 * field for Cartorio This was an Attribute!
		 */

		protected java.lang.String localCartorio;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCartorio() {
			return localCartorio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cartorio
		 */
		public void setCartorio(java.lang.String param) {

			this.localCartorio = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					CartorioObito.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cartorio-Obito",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cartorio-Obito", xmlWriter);
				}

			}

			if (localCartorio != null) {

				writeAttribute("", "cartorio",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCartorio), xmlWriter);

			}
			if (localCidadeCartorioTracker) {
				if (localCidadeCartorio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-cartorio cannot be null!!");
				}
				localCidadeCartorio.serialize(new javax.xml.namespace.QName("",
						"cidade-cartorio"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCidadeCartorioTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cidade-cartorio"));

				if (localCidadeCartorio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-cartorio cannot be null!!");
				}
				elementList.add(localCidadeCartorio);
			}
			attribList.add(new javax.xml.namespace.QName("", "cartorio"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCartorio));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static CartorioObito parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				CartorioObito object = new CartorioObito();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cartorio-Obito".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (CartorioObito) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "cartorio"
					java.lang.String tempAttribCartorio =

					reader.getAttributeValue(null, "cartorio");

					if (tempAttribCartorio != null) {
						java.lang.String content = tempAttribCartorio;

						object.setCartorio(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCartorio));

					} else {

					}
					handledAttributes.add("cartorio");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cidade-cartorio").equals(reader.getName())) {

						object.setCidadeCartorio(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ListaProduto implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Lista-Produto Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Produto This was an Array!
		 */

		protected Produto[] localProduto;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localProdutoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Produto[]
		 */
		public Produto[] getProduto() {
			return localProduto;
		}

		/**
		 * validate the array for Produto
		 */
		protected void validateProduto(Produto[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Produto
		 */
		public void setProduto(Produto[] param) {

			validateProduto(param);

			if (param != null) {
				// update the setting tracker
				localProdutoTracker = true;
			} else {
				localProdutoTracker = false;

			}

			this.localProduto = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            Produto
		 */
		public void addProduto(Produto param) {
			if (localProduto == null) {
				localProduto = new Produto[] {};
			}

			// update the setting tracker
			localProdutoTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localProduto);
			list.add(param);
			this.localProduto = (Produto[]) list.toArray(new Produto[list
					.size()]);

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ListaProduto.this
							.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Lista-Produto",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Lista-Produto", xmlWriter);
				}

			}
			if (localProdutoTracker) {
				if (localProduto != null) {
					for (int i = 0; i < localProduto.length; i++) {
						if (localProduto[i] != null) {
							localProduto[i]
									.serialize(new javax.xml.namespace.QName(
											"", "produto"), factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"produto cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localProdutoTracker) {
				if (localProduto != null) {
					for (int i = 0; i < localProduto.length; i++) {

						if (localProduto[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"produto"));
							elementList.add(localProduto[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"produto cannot be null!!");

				}

			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ListaProduto parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ListaProduto object = new ListaProduto();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Lista-Produto".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ListaProduto) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					java.util.ArrayList list1 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "produto")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list1.add(Produto.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone1 = false;
						while (!loopDone1) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone1 = true;
							} else {
								if (new javax.xml.namespace.QName("", "produto")
										.equals(reader.getName())) {
									list1.add(Produto.Factory.parse(reader));

								} else {
									loopDone1 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setProduto((Produto[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(Produto.class, list1));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoAlertaDocumento implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Alerta-Documento Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for TipoDocumentoAlerta This was an Array!
		 */

		protected TipoDocumentoAlerta[] localTipoDocumentoAlerta;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTipoDocumentoAlertaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return TipoDocumentoAlerta[]
		 */
		public TipoDocumentoAlerta[] getTipoDocumentoAlerta() {
			return localTipoDocumentoAlerta;
		}

		/**
		 * validate the array for TipoDocumentoAlerta
		 */
		protected void validateTipoDocumentoAlerta(TipoDocumentoAlerta[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoDocumentoAlerta
		 */
		public void setTipoDocumentoAlerta(TipoDocumentoAlerta[] param) {

			validateTipoDocumentoAlerta(param);

			if (param != null) {
				// update the setting tracker
				localTipoDocumentoAlertaTracker = true;
			} else {
				localTipoDocumentoAlertaTracker = false;

			}

			this.localTipoDocumentoAlerta = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            TipoDocumentoAlerta
		 */
		public void addTipoDocumentoAlerta(TipoDocumentoAlerta param) {
			if (localTipoDocumentoAlerta == null) {
				localTipoDocumentoAlerta = new TipoDocumentoAlerta[] {};
			}

			// update the setting tracker
			localTipoDocumentoAlertaTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localTipoDocumentoAlerta);
			list.add(param);
			this.localTipoDocumentoAlerta = (TipoDocumentoAlerta[]) list
					.toArray(new TipoDocumentoAlerta[list.size()]);

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for EntidadeOrigem This was an Attribute!
		 */

		protected java.lang.String localEntidadeOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getEntidadeOrigem() {
			return localEntidadeOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EntidadeOrigem
		 */
		public void setEntidadeOrigem(java.lang.String param) {

			this.localEntidadeOrigem = param;

		}

		/**
		 * field for Motivo This was an Attribute!
		 */

		protected java.lang.String localMotivo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMotivo() {
			return localMotivo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Motivo
		 */
		public void setMotivo(java.lang.String param) {

			this.localMotivo = param;

		}

		/**
		 * field for Observacao This was an Attribute!
		 */

		protected java.lang.String localObservacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getObservacao() {
			return localObservacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Observacao
		 */
		public void setObservacao(java.lang.String param) {

			this.localObservacao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoAlertaDocumento.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Alerta-Documento", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Alerta-Documento", xmlWriter);
				}

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localEntidadeOrigem != null) {

				writeAttribute("", "entidade-origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localEntidadeOrigem),
						xmlWriter);

			}

			if (localMotivo != null) {

				writeAttribute("", "motivo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMotivo), xmlWriter);

			}

			if (localObservacao != null) {

				writeAttribute("", "observacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localObservacao), xmlWriter);

			}
			if (localTipoDocumentoAlertaTracker) {
				if (localTipoDocumentoAlerta != null) {
					for (int i = 0; i < localTipoDocumentoAlerta.length; i++) {
						if (localTipoDocumentoAlerta[i] != null) {
							localTipoDocumentoAlerta[i].serialize(
									new javax.xml.namespace.QName("",
											"tipo-documento-alerta"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"tipo-documento-alerta cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localTipoDocumentoAlertaTracker) {
				if (localTipoDocumentoAlerta != null) {
					for (int i = 0; i < localTipoDocumentoAlerta.length; i++) {

						if (localTipoDocumentoAlerta[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"tipo-documento-alerta"));
							elementList.add(localTipoDocumentoAlerta[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"tipo-documento-alerta cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList
					.add(new javax.xml.namespace.QName("", "entidade-origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localEntidadeOrigem));

			attribList.add(new javax.xml.namespace.QName("", "motivo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMotivo));

			attribList.add(new javax.xml.namespace.QName("", "observacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localObservacao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoAlertaDocumento parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoAlertaDocumento object = new InsumoAlertaDocumento();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Alerta-Documento".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoAlertaDocumento) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "entidade-origem"
					java.lang.String tempAttribEntidadeOrigem =

					reader.getAttributeValue(null, "entidade-origem");

					if (tempAttribEntidadeOrigem != null) {
						java.lang.String content = tempAttribEntidadeOrigem;

						object.setEntidadeOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribEntidadeOrigem));

					} else {

					}
					handledAttributes.add("entidade-origem");

					// handle attribute "motivo"
					java.lang.String tempAttribMotivo =

					reader.getAttributeValue(null, "motivo");

					if (tempAttribMotivo != null) {
						java.lang.String content = tempAttribMotivo;

						object.setMotivo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMotivo));

					} else {

					}
					handledAttributes.add("motivo");

					// handle attribute "observacao"
					java.lang.String tempAttribObservacao =

					reader.getAttributeValue(null, "observacao");

					if (tempAttribObservacao != null) {
						java.lang.String content = tempAttribObservacao;

						object.setObservacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribObservacao));

					} else {

					}
					handledAttributes.add("observacao");

					reader.next();

					java.util.ArrayList list1 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"tipo-documento-alerta").equals(reader
									.getName())) {

						// Process the array and step past its final element's
						// end.
						list1.add(TipoDocumentoAlerta.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone1 = false;
						while (!loopDone1) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone1 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"tipo-documento-alerta").equals(reader
										.getName())) {
									list1.add(TipoDocumentoAlerta.Factory
											.parse(reader));

								} else {
									loopDone1 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setTipoDocumentoAlerta((TipoDocumentoAlerta[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(TipoDocumentoAlerta.class,
										list1));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class FiltroConsulta implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Filtro-Consulta Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CodigoProduto
		 */

		protected java.lang.String localCodigoProduto;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCodigoProduto() {
			return localCodigoProduto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CodigoProduto
		 */
		public void setCodigoProduto(java.lang.String param) {

			this.localCodigoProduto = param;

		}

		/**
		 * field for TipoConsumidor
		 */

		protected TipoPessoa localTipoConsumidor;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTipoConsumidorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return TipoPessoa
		 */
		public TipoPessoa getTipoConsumidor() {
			return localTipoConsumidor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoConsumidor
		 */
		public void setTipoConsumidor(TipoPessoa param) {

			if (param != null) {
				// update the setting tracker
				localTipoConsumidorTracker = true;
			} else {
				localTipoConsumidorTracker = false;

			}

			this.localTipoConsumidor = param;

		}

		/**
		 * field for DocumentoConsumidor
		 */

		protected java.lang.String localDocumentoConsumidor;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDocumentoConsumidorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDocumentoConsumidor() {
			return localDocumentoConsumidor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DocumentoConsumidor
		 */
		public void setDocumentoConsumidor(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localDocumentoConsumidorTracker = true;
			} else {
				localDocumentoConsumidorTracker = false;

			}

			this.localDocumentoConsumidor = param;

		}

		/**
		 * field for CepConsumidor
		 */

		protected java.lang.String localCepConsumidor;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCepConsumidorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCepConsumidor() {
			return localCepConsumidor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CepConsumidor
		 */
		public void setCepConsumidor(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCepConsumidorTracker = true;
			} else {
				localCepConsumidorTracker = false;

			}

			this.localCepConsumidor = param;

		}

		/**
		 * field for TelefoneConsultar
		 */

		protected TelefoneFiltro localTelefoneConsultar;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneConsultarTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return TelefoneFiltro
		 */
		public TelefoneFiltro getTelefoneConsultar() {
			return localTelefoneConsultar;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneConsultar
		 */
		public void setTelefoneConsultar(TelefoneFiltro param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneConsultarTracker = true;
			} else {
				localTelefoneConsultarTracker = false;

			}

			this.localTelefoneConsultar = param;

		}

		/**
		 * field for UtilizaCMC7
		 */

		protected boolean localUtilizaCMC7;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUtilizaCMC7Tracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getUtilizaCMC7() {
			return localUtilizaCMC7;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UtilizaCMC7
		 */
		public void setUtilizaCMC7(boolean param) {

			// setting primitive attribute tracker to true

			if (false) {
				localUtilizaCMC7Tracker = false;

			} else {
				localUtilizaCMC7Tracker = true;
			}

			this.localUtilizaCMC7 = param;

		}

		/**
		 * field for BancoChequeInicial
		 */

		protected int localBancoChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localBancoChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getBancoChequeInicial() {
			return localBancoChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            BancoChequeInicial
		 */
		public void setBancoChequeInicial(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localBancoChequeInicialTracker = false;

			} else {
				localBancoChequeInicialTracker = true;
			}

			this.localBancoChequeInicial = param;

		}

		/**
		 * field for AgenciaChequeInicial
		 */

		protected int localAgenciaChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAgenciaChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getAgenciaChequeInicial() {
			return localAgenciaChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AgenciaChequeInicial
		 */
		public void setAgenciaChequeInicial(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localAgenciaChequeInicialTracker = false;

			} else {
				localAgenciaChequeInicialTracker = true;
			}

			this.localAgenciaChequeInicial = param;

		}

		/**
		 * field for ContaCorrenteChequeInicial
		 */

		protected int localContaCorrenteChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContaCorrenteChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getContaCorrenteChequeInicial() {
			return localContaCorrenteChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContaCorrenteChequeInicial
		 */
		public void setContaCorrenteChequeInicial(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localContaCorrenteChequeInicialTracker = false;

			} else {
				localContaCorrenteChequeInicialTracker = true;
			}

			this.localContaCorrenteChequeInicial = param;

		}

		/**
		 * field for DigitoContaCorrenteChequeInicial
		 */

		protected java.lang.String localDigitoContaCorrenteChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDigitoContaCorrenteChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDigitoContaCorrenteChequeInicial() {
			return localDigitoContaCorrenteChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DigitoContaCorrenteChequeInicial
		 */
		public void setDigitoContaCorrenteChequeInicial(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localDigitoContaCorrenteChequeInicialTracker = true;
			} else {
				localDigitoContaCorrenteChequeInicialTracker = false;

			}

			this.localDigitoContaCorrenteChequeInicial = param;

		}

		/**
		 * field for NumeroChequeInicial
		 */

		protected int localNumeroChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNumeroChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumeroChequeInicial() {
			return localNumeroChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroChequeInicial
		 */
		public void setNumeroChequeInicial(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localNumeroChequeInicialTracker = false;

			} else {
				localNumeroChequeInicialTracker = true;
			}

			this.localNumeroChequeInicial = param;

		}

		/**
		 * field for DigitoChequeInicial
		 */

		protected int localDigitoChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDigitoChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getDigitoChequeInicial() {
			return localDigitoChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DigitoChequeInicial
		 */
		public void setDigitoChequeInicial(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localDigitoChequeInicialTracker = false;

			} else {
				localDigitoChequeInicialTracker = true;
			}

			this.localDigitoChequeInicial = param;

		}

		/**
		 * field for Cmc71ChequeInicial
		 */

		protected java.lang.String localCmc71ChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCmc71ChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCmc71ChequeInicial() {
			return localCmc71ChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cmc71ChequeInicial
		 */
		public void setCmc71ChequeInicial(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCmc71ChequeInicialTracker = true;
			} else {
				localCmc71ChequeInicialTracker = false;

			}

			this.localCmc71ChequeInicial = param;

		}

		/**
		 * field for Cmc72ChequeInicial
		 */

		protected java.lang.String localCmc72ChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCmc72ChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCmc72ChequeInicial() {
			return localCmc72ChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cmc72ChequeInicial
		 */
		public void setCmc72ChequeInicial(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCmc72ChequeInicialTracker = true;
			} else {
				localCmc72ChequeInicialTracker = false;

			}

			this.localCmc72ChequeInicial = param;

		}

		/**
		 * field for Cmc73ChequeInicial
		 */

		protected java.lang.String localCmc73ChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCmc73ChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCmc73ChequeInicial() {
			return localCmc73ChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cmc73ChequeInicial
		 */
		public void setCmc73ChequeInicial(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCmc73ChequeInicialTracker = true;
			} else {
				localCmc73ChequeInicialTracker = false;

			}

			this.localCmc73ChequeInicial = param;

		}

		/**
		 * field for QuantidadeCheque
		 */

		protected int localQuantidadeCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localQuantidadeChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeCheque() {
			return localQuantidadeCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeCheque
		 */
		public void setQuantidadeCheque(int param) {

			// setting primitive attribute tracker to true

			if (param == java.lang.Integer.MIN_VALUE) {
				localQuantidadeChequeTracker = false;

			} else {
				localQuantidadeChequeTracker = true;
			}

			this.localQuantidadeCheque = param;

		}

		/**
		 * field for ChequeDetalhado This was an Array!
		 */

		protected ChequeFiltro[] localChequeDetalhado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeDetalhadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ChequeFiltro[]
		 */
		public ChequeFiltro[] getChequeDetalhado() {
			return localChequeDetalhado;
		}

		/**
		 * validate the array for ChequeDetalhado
		 */
		protected void validateChequeDetalhado(ChequeFiltro[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeDetalhado
		 */
		public void setChequeDetalhado(ChequeFiltro[] param) {

			validateChequeDetalhado(param);

			if (param != null) {
				// update the setting tracker
				localChequeDetalhadoTracker = true;
			} else {
				localChequeDetalhadoTracker = false;

			}

			this.localChequeDetalhado = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            ChequeFiltro
		 */
		public void addChequeDetalhado(ChequeFiltro param) {
			if (localChequeDetalhado == null) {
				localChequeDetalhado = new ChequeFiltro[] {};
			}

			// update the setting tracker
			localChequeDetalhadoTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localChequeDetalhado);
			list.add(param);
			this.localChequeDetalhado = (ChequeFiltro[]) list
					.toArray(new ChequeFiltro[list.size()]);

		}

		/**
		 * field for CodigoInsumoOpcional This was an Array!
		 */

		protected long[] localCodigoInsumoOpcional;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCodigoInsumoOpcionalTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return long[]
		 */
		public long[] getCodigoInsumoOpcional() {
			return localCodigoInsumoOpcional;
		}

		/**
		 * validate the array for CodigoInsumoOpcional
		 */
		protected void validateCodigoInsumoOpcional(long[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CodigoInsumoOpcional
		 */
		public void setCodigoInsumoOpcional(long[] param) {

			validateCodigoInsumoOpcional(param);

			if (param != null) {
				// update the setting tracker
				localCodigoInsumoOpcionalTracker = true;
			} else {
				localCodigoInsumoOpcionalTracker = false;

			}

			this.localCodigoInsumoOpcional = param;
		}

		/**
		 * field for CepOrigem
		 */

		protected java.lang.String localCepOrigem;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCepOrigemTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCepOrigem() {
			return localCepOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CepOrigem
		 */
		public void setCepOrigem(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCepOrigemTracker = true;
			} else {
				localCepOrigemTracker = false;

			}

			this.localCepOrigem = param;

		}

		/**
		 * field for CodigoEstacaoConsultante
		 */

		protected java.lang.String localCodigoEstacaoConsultante;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCodigoEstacaoConsultanteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCodigoEstacaoConsultante() {
			return localCodigoEstacaoConsultante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CodigoEstacaoConsultante
		 */
		public void setCodigoEstacaoConsultante(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCodigoEstacaoConsultanteTracker = true;
			} else {
				localCodigoEstacaoConsultanteTracker = false;

			}

			this.localCodigoEstacaoConsultante = param;

		}

		/**
		 * field for NumeroRg
		 */

		protected java.lang.String localNumeroRg;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNumeroRgTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroRg() {
			return localNumeroRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroRg
		 */
		public void setNumeroRg(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localNumeroRgTracker = true;
			} else {
				localNumeroRgTracker = false;

			}

			this.localNumeroRg = param;

		}

		/**
		 * field for DataNascimentoRg
		 */

		protected java.util.Calendar localDataNascimentoRg;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDataNascimentoRgTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataNascimentoRg() {
			return localDataNascimentoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataNascimentoRg
		 */
		public void setDataNascimentoRg(java.util.Calendar param) {

			if (param != null) {
				// update the setting tracker
				localDataNascimentoRgTracker = true;
			} else {
				localDataNascimentoRgTracker = false;

			}

			this.localDataNascimentoRg = param;

		}

		/**
		 * field for UfEmissaoRg
		 */

		protected java.lang.String localUfEmissaoRg;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUfEmissaoRgTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getUfEmissaoRg() {
			return localUfEmissaoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UfEmissaoRg
		 */
		public void setUfEmissaoRg(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localUfEmissaoRgTracker = true;
			} else {
				localUfEmissaoRgTracker = false;

			}

			this.localUfEmissaoRg = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					FiltroConsulta.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Filtro-Consulta",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Filtro-Consulta", xmlWriter);
				}

			}

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "codigo-produto",
							namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "codigo-produto");
				}

			} else {
				xmlWriter.writeStartElement("codigo-produto");
			}

			if (localCodigoProduto == null) {
				// write the nil attribute

				throw new org.apache.axis2.databinding.ADBException(
						"codigo-produto cannot be null!!");

			} else {

				xmlWriter.writeCharacters(localCodigoProduto);

			}

			xmlWriter.writeEndElement();
			if (localTipoConsumidorTracker) {
				if (localTipoConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"tipo-consumidor cannot be null!!");
				}
				localTipoConsumidor.serialize(new javax.xml.namespace.QName("",
						"tipo-consumidor"), factory, xmlWriter);
			}
			if (localDocumentoConsumidorTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"documento-consumidor", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"documento-consumidor");
					}

				} else {
					xmlWriter.writeStartElement("documento-consumidor");
				}

				if (localDocumentoConsumidor == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"documento-consumidor cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localDocumentoConsumidor);

				}

				xmlWriter.writeEndElement();
			}
			if (localCepConsumidorTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "cep-consumidor",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter
								.writeStartElement(namespace, "cep-consumidor");
					}

				} else {
					xmlWriter.writeStartElement("cep-consumidor");
				}

				if (localCepConsumidor == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"cep-consumidor cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCepConsumidor);

				}

				xmlWriter.writeEndElement();
			}
			if (localTelefoneConsultarTracker) {
				if (localTelefoneConsultar == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-consultar cannot be null!!");
				}
				localTelefoneConsultar.serialize(new javax.xml.namespace.QName(
						"", "telefone-consultar"), factory, xmlWriter);
			}
			if (localUtilizaCMC7Tracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "utiliza-CMC7",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "utiliza-CMC7");
					}

				} else {
					xmlWriter.writeStartElement("utiliza-CMC7");
				}

				if (false) {

					throw new org.apache.axis2.databinding.ADBException(
							"utiliza-CMC7 cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localUtilizaCMC7));
				}

				xmlWriter.writeEndElement();
			}
			if (localBancoChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"banco-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"banco-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("banco-cheque-inicial");
				}

				if (localBancoChequeInicial == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"banco-cheque-inicial cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localBancoChequeInicial));
				}

				xmlWriter.writeEndElement();
			}
			if (localAgenciaChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"agencia-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"agencia-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("agencia-cheque-inicial");
				}

				if (localAgenciaChequeInicial == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"agencia-cheque-inicial cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localAgenciaChequeInicial));
				}

				xmlWriter.writeEndElement();
			}
			if (localContaCorrenteChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"conta-corrente-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"conta-corrente-cheque-inicial");
					}

				} else {
					xmlWriter
							.writeStartElement("conta-corrente-cheque-inicial");
				}

				if (localContaCorrenteChequeInicial == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"conta-corrente-cheque-inicial cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localContaCorrenteChequeInicial));
				}

				xmlWriter.writeEndElement();
			}
			if (localDigitoContaCorrenteChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"digito-conta-corrente-cheque-inicial",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"digito-conta-corrente-cheque-inicial");
					}

				} else {
					xmlWriter
							.writeStartElement("digito-conta-corrente-cheque-inicial");
				}

				if (localDigitoContaCorrenteChequeInicial == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"digito-conta-corrente-cheque-inicial cannot be null!!");

				} else {

					xmlWriter
							.writeCharacters(localDigitoContaCorrenteChequeInicial);

				}

				xmlWriter.writeEndElement();
			}
			if (localNumeroChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"numero-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"numero-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("numero-cheque-inicial");
				}

				if (localNumeroChequeInicial == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"numero-cheque-inicial cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localNumeroChequeInicial));
				}

				xmlWriter.writeEndElement();
			}
			if (localDigitoChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"digito-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"digito-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("digito-cheque-inicial");
				}

				if (localDigitoChequeInicial == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"digito-cheque-inicial cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localDigitoChequeInicial));
				}

				xmlWriter.writeEndElement();
			}
			if (localCmc71ChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"cmc71-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"cmc71-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("cmc71-cheque-inicial");
				}

				if (localCmc71ChequeInicial == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"cmc71-cheque-inicial cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCmc71ChequeInicial);

				}

				xmlWriter.writeEndElement();
			}
			if (localCmc72ChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"cmc72-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"cmc72-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("cmc72-cheque-inicial");
				}

				if (localCmc72ChequeInicial == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"cmc72-cheque-inicial cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCmc72ChequeInicial);

				}

				xmlWriter.writeEndElement();
			}
			if (localCmc73ChequeInicialTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"cmc73-cheque-inicial", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"cmc73-cheque-inicial");
					}

				} else {
					xmlWriter.writeStartElement("cmc73-cheque-inicial");
				}

				if (localCmc73ChequeInicial == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"cmc73-cheque-inicial cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCmc73ChequeInicial);

				}

				xmlWriter.writeEndElement();
			}
			if (localQuantidadeChequeTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"quantidade-cheque", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"quantidade-cheque");
					}

				} else {
					xmlWriter.writeStartElement("quantidade-cheque");
				}

				if (localQuantidadeCheque == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"quantidade-cheque cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localQuantidadeCheque));
				}

				xmlWriter.writeEndElement();
			}
			if (localChequeDetalhadoTracker) {
				if (localChequeDetalhado != null) {
					for (int i = 0; i < localChequeDetalhado.length; i++) {
						if (localChequeDetalhado[i] != null) {
							localChequeDetalhado[i].serialize(
									new javax.xml.namespace.QName("",
											"cheque-detalhado"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"cheque-detalhado cannot be null!!");

				}
			}
			if (localCodigoInsumoOpcionalTracker) {
				if (localCodigoInsumoOpcional != null) {
					namespace = "";
					boolean emptyNamespace = namespace == null
							|| namespace.length() == 0;
					prefix = emptyNamespace ? null : xmlWriter
							.getPrefix(namespace);
					for (int i = 0; i < localCodigoInsumoOpcional.length; i++) {

						if (localCodigoInsumoOpcional[i] != java.lang.Long.MIN_VALUE) {

							if (!emptyNamespace) {
								if (prefix == null) {
									java.lang.String prefix2 = generatePrefix(namespace);

									xmlWriter
											.writeStartElement(prefix2,
													"codigo-insumo-opcional",
													namespace);
									xmlWriter
											.writeNamespace(prefix2, namespace);
									xmlWriter.setPrefix(prefix2, namespace);

								} else {
									xmlWriter.writeStartElement(namespace,
											"codigo-insumo-opcional");
								}

							} else {
								xmlWriter
										.writeStartElement("codigo-insumo-opcional");
							}

							xmlWriter
									.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(localCodigoInsumoOpcional[i]));
							xmlWriter.writeEndElement();

						} else {

							// we have to do nothing since minOccurs is zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"codigo-insumo-opcional cannot be null!!");

				}

			}
			if (localCepOrigemTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "cep-origem",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "cep-origem");
					}

				} else {
					xmlWriter.writeStartElement("cep-origem");
				}

				if (localCepOrigem == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"cep-origem cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCepOrigem);

				}

				xmlWriter.writeEndElement();
			}
			if (localCodigoEstacaoConsultanteTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"codigo-estacao-consultante", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"codigo-estacao-consultante");
					}

				} else {
					xmlWriter.writeStartElement("codigo-estacao-consultante");
				}

				if (localCodigoEstacaoConsultante == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"codigo-estacao-consultante cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCodigoEstacaoConsultante);

				}

				xmlWriter.writeEndElement();
			}
			if (localNumeroRgTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "numero-rg",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "numero-rg");
					}

				} else {
					xmlWriter.writeStartElement("numero-rg");
				}

				if (localNumeroRg == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"numero-rg cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localNumeroRg);

				}

				xmlWriter.writeEndElement();
			}
			if (localDataNascimentoRgTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"data-nascimento-rg", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"data-nascimento-rg");
					}

				} else {
					xmlWriter.writeStartElement("data-nascimento-rg");
				}

				if (localDataNascimentoRg == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"data-nascimento-rg cannot be null!!");

				} else {

					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localDataNascimentoRg));

				}

				xmlWriter.writeEndElement();
			}
			if (localUfEmissaoRgTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "uf-emissao-rg",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "uf-emissao-rg");
					}

				} else {
					xmlWriter.writeStartElement("uf-emissao-rg");
				}

				if (localUfEmissaoRg == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"uf-emissao-rg cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localUfEmissaoRg);

				}

				xmlWriter.writeEndElement();
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			elementList
					.add(new javax.xml.namespace.QName("", "codigo-produto"));

			if (localCodigoProduto != null) {
				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigoProduto));
			} else {
				throw new org.apache.axis2.databinding.ADBException(
						"codigo-produto cannot be null!!");
			}
			if (localTipoConsumidorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"tipo-consumidor"));

				if (localTipoConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"tipo-consumidor cannot be null!!");
				}
				elementList.add(localTipoConsumidor);
			}
			if (localDocumentoConsumidorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"documento-consumidor"));

				if (localDocumentoConsumidor != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localDocumentoConsumidor));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"documento-consumidor cannot be null!!");
				}
			}
			if (localCepConsumidorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cep-consumidor"));

				if (localCepConsumidor != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCepConsumidor));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"cep-consumidor cannot be null!!");
				}
			}
			if (localTelefoneConsultarTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-consultar"));

				if (localTelefoneConsultar == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-consultar cannot be null!!");
				}
				elementList.add(localTelefoneConsultar);
			}
			if (localUtilizaCMC7Tracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"utiliza-CMC7"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localUtilizaCMC7));
			}
			if (localBancoChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"banco-cheque-inicial"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localBancoChequeInicial));
			}
			if (localAgenciaChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"agencia-cheque-inicial"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localAgenciaChequeInicial));
			}
			if (localContaCorrenteChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"conta-corrente-cheque-inicial"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localContaCorrenteChequeInicial));
			}
			if (localDigitoContaCorrenteChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"digito-conta-corrente-cheque-inicial"));

				if (localDigitoContaCorrenteChequeInicial != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localDigitoContaCorrenteChequeInicial));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"digito-conta-corrente-cheque-inicial cannot be null!!");
				}
			}
			if (localNumeroChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"numero-cheque-inicial"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroChequeInicial));
			}
			if (localDigitoChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"digito-cheque-inicial"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigitoChequeInicial));
			}
			if (localCmc71ChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cmc71-cheque-inicial"));

				if (localCmc71ChequeInicial != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCmc71ChequeInicial));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"cmc71-cheque-inicial cannot be null!!");
				}
			}
			if (localCmc72ChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cmc72-cheque-inicial"));

				if (localCmc72ChequeInicial != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCmc72ChequeInicial));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"cmc72-cheque-inicial cannot be null!!");
				}
			}
			if (localCmc73ChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cmc73-cheque-inicial"));

				if (localCmc73ChequeInicial != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCmc73ChequeInicial));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"cmc73-cheque-inicial cannot be null!!");
				}
			}
			if (localQuantidadeChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"quantidade-cheque"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeCheque));
			}
			if (localChequeDetalhadoTracker) {
				if (localChequeDetalhado != null) {
					for (int i = 0; i < localChequeDetalhado.length; i++) {

						if (localChequeDetalhado[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"cheque-detalhado"));
							elementList.add(localChequeDetalhado[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"cheque-detalhado cannot be null!!");

				}

			}
			if (localCodigoInsumoOpcionalTracker) {
				if (localCodigoInsumoOpcional != null) {
					for (int i = 0; i < localCodigoInsumoOpcional.length; i++) {

						elementList.add(new javax.xml.namespace.QName("",
								"codigo-insumo-opcional"));
						elementList
								.add(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(localCodigoInsumoOpcional[i]));

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"codigo-insumo-opcional cannot be null!!");

				}

			}
			if (localCepOrigemTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "cep-origem"));

				if (localCepOrigem != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCepOrigem));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"cep-origem cannot be null!!");
				}
			}
			if (localCodigoEstacaoConsultanteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"codigo-estacao-consultante"));

				if (localCodigoEstacaoConsultante != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCodigoEstacaoConsultante));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"codigo-estacao-consultante cannot be null!!");
				}
			}
			if (localNumeroRgTracker) {
				elementList.add(new javax.xml.namespace.QName("", "numero-rg"));

				if (localNumeroRg != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localNumeroRg));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"numero-rg cannot be null!!");
				}
			}
			if (localDataNascimentoRgTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"data-nascimento-rg"));

				if (localDataNascimentoRg != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localDataNascimentoRg));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"data-nascimento-rg cannot be null!!");
				}
			}
			if (localUfEmissaoRgTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"uf-emissao-rg"));

				if (localUfEmissaoRg != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localUfEmissaoRg));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"uf-emissao-rg cannot be null!!");
				}
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static FiltroConsulta parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				FiltroConsulta object = new FiltroConsulta();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Filtro-Consulta".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (FiltroConsulta) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					java.util.ArrayList list17 = new java.util.ArrayList();

					java.util.ArrayList list18 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"codigo-produto").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCodigoProduto(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"tipo-consumidor").equals(reader.getName())) {

						object.setTipoConsumidor(TipoPessoa.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"documento-consumidor").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDocumentoConsumidor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cep-consumidor").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCepConsumidor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-consultar").equals(reader
									.getName())) {

						object.setTelefoneConsultar(TelefoneFiltro.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "utiliza-CMC7")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setUtilizaCMC7(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"banco-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setBancoChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setBancoChequeInicial(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"agencia-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setAgenciaChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setAgenciaChequeInicial(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"conta-corrente-cheque-inicial")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setContaCorrenteChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setContaCorrenteChequeInicial(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"digito-conta-corrente-cheque-inicial")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDigitoContaCorrenteChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"numero-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setNumeroChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setNumeroChequeInicial(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"digito-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDigitoChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setDigitoChequeInicial(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cmc71-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCmc71ChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cmc72-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCmc72ChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cmc73-cheque-inicial").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCmc73ChequeInicial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"quantidade-cheque").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setQuantidadeCheque(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setQuantidadeCheque(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-detalhado")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list17.add(ChequeFiltro.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone17 = false;
						while (!loopDone17) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone17 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"cheque-detalhado").equals(reader
										.getName())) {
									list17.add(ChequeFiltro.Factory
											.parse(reader));

								} else {
									loopDone17 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setChequeDetalhado((ChequeFiltro[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(ChequeFiltro.class, list17));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"codigo-insumo-opcional").equals(reader
									.getName())) {

						// Process the array and step past its final element's
						// end.
						list18.add(reader.getElementText());

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone18 = false;
						while (!loopDone18) {
							// Ensure we are at the EndElement
							while (!reader.isEndElement()) {
								reader.next();
							}
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone18 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"codigo-insumo-opcional").equals(reader
										.getName())) {
									list18.add(reader.getElementText());

								} else {
									loopDone18 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setCodigoInsumoOpcional((long[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(long.class, list18));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cep-origem")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCepOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"codigo-estacao-consultante").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCodigoEstacaoConsultante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "numero-rg")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setNumeroRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"data-nascimento-rg").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDataNascimentoRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"uf-emissao-rg").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setUfEmissaoRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Sexo implements org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/", "Sexo",
				"ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Sexo
		 */

		protected java.lang.String localSexo;

		private static java.util.HashMap _table_ = new java.util.HashMap();

		// Constructor

		protected Sexo(java.lang.String value, boolean isRegisterValue) {
			localSexo = value;
			if (isRegisterValue) {

				_table_.put(localSexo, this);

			}

		}

		public static final java.lang.String _MASCULINO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("MASCULINO");

		public static final java.lang.String _FEMININO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("FEMININO");

		public static final Sexo MASCULINO = new Sexo(_MASCULINO, true);

		public static final Sexo FEMININO = new Sexo(_FEMININO, true);

		public java.lang.String getValue() {
			return localSexo;
		}

		public boolean equals(java.lang.Object obj) {
			return (obj == this);
		}

		public int hashCode() {
			return toString().hashCode();
		}

		public java.lang.String toString() {

			return localSexo.toString();

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Sexo.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Sexo", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Sexo", xmlWriter);
				}
			}

			if (localSexo == null) {

				throw new org.apache.axis2.databinding.ADBException(
						"Value cannot be null !!");

			} else {

				xmlWriter.writeCharacters(localSexo);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localSexo) }, null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static Sexo fromValue(java.lang.String value)
					throws java.lang.IllegalArgumentException {
				Sexo enumeration = (Sexo)

				_table_.get(value);

				if (enumeration == null)
					throw new java.lang.IllegalArgumentException();
				return enumeration;
			}

			public static Sexo fromString(java.lang.String value,
					java.lang.String namespaceURI)
					throws java.lang.IllegalArgumentException {
				try {

					return fromValue(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(value));

				} catch (java.lang.Exception e) {
					throw new java.lang.IllegalArgumentException();
				}
			}

			public static Sexo fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return Sexo.Factory.fromString(content, namespaceUri);
				} else {
					return Sexo.Factory.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Sexo parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Sexo object = null;
				// initialize a hash map to keep values
				java.util.Map attributeMap = new java.util.HashMap();
				java.util.List extraAttributeList = new java.util.ArrayList();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							java.lang.String content = reader.getElementText();

							if (content.indexOf(":") > 0) {
								// this seems to be a Qname so find the
								// namespace and send
								prefix = content.substring(0,
										content.indexOf(":"));
								namespaceuri = reader.getNamespaceURI(prefix);
								object = Sexo.Factory.fromString(content,
										namespaceuri);
							} else {
								// this seems to be not a qname send and empty
								// namespace incase of it is
								// check is done in fromString method
								object = Sexo.Factory.fromString(content, "");
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoDadosTelefoneConsultado implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Dados-Telefone-Consultado Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Assinante
		 */

		protected AssinanteTelefone localAssinante;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAssinanteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return AssinanteTelefone
		 */
		public AssinanteTelefone getAssinante() {
			return localAssinante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Assinante
		 */
		public void setAssinante(AssinanteTelefone param) {

			if (param != null) {
				// update the setting tracker
				localAssinanteTracker = true;
			} else {
				localAssinanteTracker = false;

			}

			this.localAssinante = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoDadosTelefoneConsultado.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Dados-Telefone-Consultado",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Dados-Telefone-Consultado",
							xmlWriter);
				}

			}
			if (localAssinanteTracker) {
				if (localAssinante == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"assinante cannot be null!!");
				}
				localAssinante.serialize(new javax.xml.namespace.QName("",
						"assinante"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localAssinanteTracker) {
				elementList.add(new javax.xml.namespace.QName("", "assinante"));

				if (localAssinante == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"assinante cannot be null!!");
				}
				elementList.add(localAssinante);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoDadosTelefoneConsultado parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoDadosTelefoneConsultado object = new InsumoDadosTelefoneConsultado();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Dados-Telefone-Consultado"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoDadosTelefoneConsultado) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "assinante")
									.equals(reader.getName())) {

						object.setAssinante(AssinanteTelefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Signo implements org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/", "Signo",
				"ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Signo
		 */

		protected java.lang.String localSigno;

		private static java.util.HashMap _table_ = new java.util.HashMap();

		// Constructor

		protected Signo(java.lang.String value, boolean isRegisterValue) {
			localSigno = value;
			if (isRegisterValue) {

				_table_.put(localSigno, this);

			}

		}

		public static final java.lang.String _CAPRICORNIO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("CAPRICORNIO");

		public static final java.lang.String _AQUARIO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("AQUARIO");

		public static final java.lang.String _PEIXES = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("PEIXES");

		public static final java.lang.String _ARIES = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("ARIES");

		public static final java.lang.String _TOURO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("TOURO");

		public static final java.lang.String _GEMEOS = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("GEMEOS");

		public static final java.lang.String _CANCER = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("CANCER");

		public static final java.lang.String _LEAO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("LEAO");

		public static final java.lang.String _VIRGEM = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("VIRGEM");

		public static final java.lang.String _LIBRA = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("LIBRA");

		public static final java.lang.String _ESCORPIAO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("ESCORPIAO");

		public static final java.lang.String _SAGITARIO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("SAGITARIO");

		public static final Signo CAPRICORNIO = new Signo(_CAPRICORNIO, true);

		public static final Signo AQUARIO = new Signo(_AQUARIO, true);

		public static final Signo PEIXES = new Signo(_PEIXES, true);

		public static final Signo ARIES = new Signo(_ARIES, true);

		public static final Signo TOURO = new Signo(_TOURO, true);

		public static final Signo GEMEOS = new Signo(_GEMEOS, true);

		public static final Signo CANCER = new Signo(_CANCER, true);

		public static final Signo LEAO = new Signo(_LEAO, true);

		public static final Signo VIRGEM = new Signo(_VIRGEM, true);

		public static final Signo LIBRA = new Signo(_LIBRA, true);

		public static final Signo ESCORPIAO = new Signo(_ESCORPIAO, true);

		public static final Signo SAGITARIO = new Signo(_SAGITARIO, true);

		public java.lang.String getValue() {
			return localSigno;
		}

		public boolean equals(java.lang.Object obj) {
			return (obj == this);
		}

		public int hashCode() {
			return toString().hashCode();
		}

		public java.lang.String toString() {

			return localSigno.toString();

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Signo.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Signo", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Signo", xmlWriter);
				}
			}

			if (localSigno == null) {

				throw new org.apache.axis2.databinding.ADBException(
						"Value cannot be null !!");

			} else {

				xmlWriter.writeCharacters(localSigno);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localSigno) }, null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static Signo fromValue(java.lang.String value)
					throws java.lang.IllegalArgumentException {
				Signo enumeration = (Signo)

				_table_.get(value);

				if (enumeration == null)
					throw new java.lang.IllegalArgumentException();
				return enumeration;
			}

			public static Signo fromString(java.lang.String value,
					java.lang.String namespaceURI)
					throws java.lang.IllegalArgumentException {
				try {

					return fromValue(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(value));

				} catch (java.lang.Exception e) {
					throw new java.lang.IllegalArgumentException();
				}
			}

			public static Signo fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return Signo.Factory.fromString(content, namespaceUri);
				} else {
					return Signo.Factory.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Signo parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Signo object = null;
				// initialize a hash map to keep values
				java.util.Map attributeMap = new java.util.HashMap();
				java.util.List extraAttributeList = new java.util.ArrayList();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							java.lang.String content = reader.getElementText();

							if (content.indexOf(":") > 0) {
								// this seems to be a Qname so find the
								// namespace and send
								prefix = content.substring(0,
										content.indexOf(":"));
								namespaceuri = reader.getNamespaceURI(prefix);
								object = Signo.Factory.fromString(content,
										namespaceuri);
							} else {
								// this seems to be not a qname send and empty
								// namespace incase of it is
								// check is done in fromString method
								object = Signo.Factory.fromString(content, "");
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class DadosBancarios implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Dados-Bancarios Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Endereco
		 */

		protected Endereco localEndereco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Endereco
		 */
		public Endereco getEndereco() {
			return localEndereco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Endereco
		 */
		public void setEndereco(Endereco param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoTracker = true;
			} else {
				localEnderecoTracker = false;

			}

			this.localEndereco = param;

		}

		/**
		 * field for Banco
		 */

		protected Banco localBanco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localBancoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Banco
		 */
		public Banco getBanco() {
			return localBanco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Banco
		 */
		public void setBanco(Banco param) {

			if (param != null) {
				// update the setting tracker
				localBancoTracker = true;
			} else {
				localBancoTracker = false;

			}

			this.localBanco = param;

		}

		/**
		 * field for Telefone
		 */

		protected Telefone localTelefone;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefone() {
			return localTelefone;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Telefone
		 */
		public void setTelefone(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneTracker = true;
			} else {
				localTelefoneTracker = false;

			}

			this.localTelefone = param;

		}

		/**
		 * field for Fax
		 */

		protected Telefone localFax;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localFaxTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getFax() {
			return localFax;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Fax
		 */
		public void setFax(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localFaxTracker = true;
			} else {
				localFaxTracker = false;

			}

			this.localFax = param;

		}

		/**
		 * field for NumeroAgencia This was an Attribute!
		 */

		protected int localNumeroAgencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumeroAgencia() {
			return localNumeroAgencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroAgencia
		 */
		public void setNumeroAgencia(int param) {

			this.localNumeroAgencia = param;

		}

		/**
		 * field for NomeAgencia This was an Attribute!
		 */

		protected java.lang.String localNomeAgencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeAgencia() {
			return localNomeAgencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeAgencia
		 */
		public void setNomeAgencia(java.lang.String param) {

			this.localNomeAgencia = param;

		}

		/**
		 * field for NumeroContaCorrente This was an Attribute!
		 */

		protected java.lang.String localNumeroContaCorrente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroContaCorrente() {
			return localNumeroContaCorrente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroContaCorrente
		 */
		public void setNumeroContaCorrente(java.lang.String param) {

			this.localNumeroContaCorrente = param;

		}

		/**
		 * field for DigitoContaCorrente This was an Attribute!
		 */

		protected java.lang.String localDigitoContaCorrente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDigitoContaCorrente() {
			return localDigitoContaCorrente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DigitoContaCorrente
		 */
		public void setDigitoContaCorrente(java.lang.String param) {

			this.localDigitoContaCorrente = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					DadosBancarios.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Dados-Bancarios",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Dados-Bancarios", xmlWriter);
				}

			}

			if (localNumeroAgencia != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero-agencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroAgencia), xmlWriter);

			}

			if (localNomeAgencia != null) {

				writeAttribute("", "nome-agencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeAgencia), xmlWriter);

			}

			if (localNumeroContaCorrente != null) {

				writeAttribute("", "numero-conta-corrente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroContaCorrente),
						xmlWriter);

			}

			if (localDigitoContaCorrente != null) {

				writeAttribute("", "digito-conta-corrente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigitoContaCorrente),
						xmlWriter);

			}
			if (localEnderecoTracker) {
				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				localEndereco.serialize(new javax.xml.namespace.QName("",
						"endereco"), factory, xmlWriter);
			}
			if (localBancoTracker) {
				if (localBanco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"banco cannot be null!!");
				}
				localBanco.serialize(
						new javax.xml.namespace.QName("", "banco"), factory,
						xmlWriter);
			}
			if (localTelefoneTracker) {
				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				localTelefone.serialize(new javax.xml.namespace.QName("",
						"telefone"), factory, xmlWriter);
			}
			if (localFaxTracker) {
				if (localFax == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"fax cannot be null!!");
				}
				localFax.serialize(new javax.xml.namespace.QName("", "fax"),
						factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localEnderecoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "endereco"));

				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				elementList.add(localEndereco);
			}
			if (localBancoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "banco"));

				if (localBanco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"banco cannot be null!!");
				}
				elementList.add(localBanco);
			}
			if (localTelefoneTracker) {
				elementList.add(new javax.xml.namespace.QName("", "telefone"));

				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				elementList.add(localTelefone);
			}
			if (localFaxTracker) {
				elementList.add(new javax.xml.namespace.QName("", "fax"));

				if (localFax == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"fax cannot be null!!");
				}
				elementList.add(localFax);
			}
			attribList.add(new javax.xml.namespace.QName("", "numero-agencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroAgencia));

			attribList.add(new javax.xml.namespace.QName("", "nome-agencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeAgencia));

			attribList.add(new javax.xml.namespace.QName("",
					"numero-conta-corrente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroContaCorrente));

			attribList.add(new javax.xml.namespace.QName("",
					"digito-conta-corrente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigitoContaCorrente));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static DadosBancarios parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				DadosBancarios object = new DadosBancarios();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Dados-Bancarios".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (DadosBancarios) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero-agencia"
					java.lang.String tempAttribNumeroAgencia =

					reader.getAttributeValue(null, "numero-agencia");

					if (tempAttribNumeroAgencia != null) {
						java.lang.String content = tempAttribNumeroAgencia;

						object.setNumeroAgencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumeroAgencia));

					} else {

						object.setNumeroAgencia(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero-agencia");

					// handle attribute "nome-agencia"
					java.lang.String tempAttribNomeAgencia =

					reader.getAttributeValue(null, "nome-agencia");

					if (tempAttribNomeAgencia != null) {
						java.lang.String content = tempAttribNomeAgencia;

						object.setNomeAgencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeAgencia));

					} else {

					}
					handledAttributes.add("nome-agencia");

					// handle attribute "numero-conta-corrente"
					java.lang.String tempAttribNumeroContaCorrente =

					reader.getAttributeValue(null, "numero-conta-corrente");

					if (tempAttribNumeroContaCorrente != null) {
						java.lang.String content = tempAttribNumeroContaCorrente;

						object.setNumeroContaCorrente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroContaCorrente));

					} else {

					}
					handledAttributes.add("numero-conta-corrente");

					// handle attribute "digito-conta-corrente"
					java.lang.String tempAttribDigitoContaCorrente =

					reader.getAttributeValue(null, "digito-conta-corrente");

					if (tempAttribDigitoContaCorrente != null) {
						java.lang.String content = tempAttribDigitoContaCorrente;

						object.setDigitoContaCorrente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDigitoContaCorrente));

					} else {

					}
					handledAttributes.add("digito-conta-corrente");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "endereco")
									.equals(reader.getName())) {

						object.setEndereco(Endereco.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "banco")
									.equals(reader.getName())) {

						object.setBanco(Banco.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "telefone")
									.equals(reader.getName())) {

						object.setTelefone(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "fax")
									.equals(reader.getName())) {

						object.setFax(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoInsumo implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-Insumo Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Resumo
		 */

		protected ResumoInsumo localResumo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localResumoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResumoInsumo
		 */
		public ResumoInsumo getResumo() {
			return localResumo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Resumo
		 */
		public void setResumo(ResumoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localResumoTracker = true;
			} else {
				localResumoTracker = false;

			}

			this.localResumo = param;

		}

		/**
		 * field for ResultadoInsumoChoice_type0 This was an Array!
		 */

		protected ResultadoInsumoChoice_type0[] localResultadoInsumoChoice_type0;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localResultadoInsumoChoice_type0Tracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoChoice_type0[]
		 */
		public ResultadoInsumoChoice_type0[] getResultadoInsumoChoice_type0() {
			return localResultadoInsumoChoice_type0;
		}

		/**
		 * validate the array for ResultadoInsumoChoice_type0
		 */
		protected void validateResultadoInsumoChoice_type0(
				ResultadoInsumoChoice_type0[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ResultadoInsumoChoice_type0
		 */
		public void setResultadoInsumoChoice_type0(
				ResultadoInsumoChoice_type0[] param) {

			validateResultadoInsumoChoice_type0(param);

			if (param != null) {
				// update the setting tracker
				localResultadoInsumoChoice_type0Tracker = true;
			} else {
				localResultadoInsumoChoice_type0Tracker = false;

			}

			this.localResultadoInsumoChoice_type0 = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            ResultadoInsumoChoice_type0
		 */
		public void addResultadoInsumoChoice_type0(
				ResultadoInsumoChoice_type0 param) {
			if (localResultadoInsumoChoice_type0 == null) {
				localResultadoInsumoChoice_type0 = new ResultadoInsumoChoice_type0[] {};
			}

			// update the setting tracker
			localResultadoInsumoChoice_type0Tracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localResultadoInsumoChoice_type0);
			list.add(param);
			this.localResultadoInsumoChoice_type0 = (ResultadoInsumoChoice_type0[]) list
					.toArray(new ResultadoInsumoChoice_type0[list.size()]);

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoInsumo.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Resultado-Insumo",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Resultado-Insumo", xmlWriter);
				}

			}
			if (localResumoTracker) {
				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				localResumo.serialize(new javax.xml.namespace.QName("",
						"resumo"), factory, xmlWriter);
			}
			if (localResultadoInsumoChoice_type0Tracker) {

				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {
						if (localResultadoInsumoChoice_type0[i] != null) {
							localResultadoInsumoChoice_type0[i].serialize(null,
									factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");
				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localResumoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "resumo"));

				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				elementList.add(localResumo);
			}
			if (localResultadoInsumoChoice_type0Tracker) {
				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {

						if (localResultadoInsumoChoice_type0[i] != null) {
							elementList
									.add(new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"Resultado-InsumoChoice_type0"));
							elementList
									.add(localResultadoInsumoChoice_type0[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");

				}

			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoInsumo parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoInsumo object = new ResultadoInsumo();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resultado-Insumo".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResultadoInsumo) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					java.util.ArrayList list2 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "resumo")
									.equals(reader.getName())) {

						object.setResumo(ResumoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					try {

						if (reader.isStartElement()) {

							// Process the array and step past its final
							// element's end.
							list2.add(ResultadoInsumoChoice_type0.Factory
									.parse(reader));
							// loop until we find a start element that is not
							// part of this array
							boolean loopDone2 = false;
							while (!loopDone2) {

								// Step to next element event.
								while (!reader.isStartElement()
										&& !reader.isEndElement())
									reader.next();
								if (reader.isEndElement()) {
									// two continuous end elements means we are
									// exiting the xml structure
									loopDone2 = true;
								} else {
									list2.add(ResultadoInsumoChoice_type0.Factory
											.parse(reader));
								}
							}
							// call the converter utility to convert and set the
							// array
							object.setResultadoInsumoChoice_type0((ResultadoInsumoChoice_type0[]) org.apache.axis2.databinding.utils.ConverterUtil
									.convertToArray(
											ResultadoInsumoChoice_type0.class,
											list2));

						} // End of if for expected property start element

						else {

						}

					} catch (java.lang.Exception e) {
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Filtro implements org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/", "filtro",
				"ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Filtro
		 */

		protected FiltroConsulta localFiltro;

		/**
		 * Auto generated getter method
		 * 
		 * @return FiltroConsulta
		 */
		public FiltroConsulta getFiltro() {
			return localFiltro;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Filtro
		 */
		public void setFiltro(FiltroConsulta param) {

			this.localFiltro = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Filtro.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localFiltro == null) {
				java.lang.String namespace = "http://webservice.consulta.spcjava.spcbrasil.org/";

				if (!namespace.equals("")) {
					java.lang.String prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter
								.writeStartElement(prefix, "filtro", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "filtro");
					}

				} else {
					xmlWriter.writeStartElement("filtro");
				}

				// write the nil attribute
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "nil",
						"1", xmlWriter);
				xmlWriter.writeEndElement();
			} else {
				localFiltro.serialize(MY_QNAME, factory, xmlWriter);
			}

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localFiltro == null) {
				return new org.apache.axis2.databinding.utils.reader.NullXMLStreamReader(
						MY_QNAME);
			} else {
				return localFiltro.getPullParser(MY_QNAME);
			}

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Filtro parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Filtro object = new Filtro();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					nillableValue = reader.getAttributeValue(
							"http://www.w3.org/2001/XMLSchema-instance", "nil");
					if ("true".equals(nillableValue)
							|| "1".equals(nillableValue)) {
						// Skip the element and report the null value. It cannot
						// have subelements.
						while (!reader.isEndElement())
							reader.next();

						return object;

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement()) {

							if (reader.isStartElement()
									&& new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"filtro").equals(reader.getName())) {

								nillableValue = reader
										.getAttributeValue(
												"http://www.w3.org/2001/XMLSchema-instance",
												"nil");
								if ("true".equals(nillableValue)
										|| "1".equals(nillableValue)) {
									object.setFiltro(null);
									reader.next();

								} else {

									object.setFiltro(FiltroConsulta.Factory
											.parse(reader));
								}
							} // End of if for expected property start element

							else {
								// A start element we are not expecting
								// indicates an invalid parameter was passed
								throw new org.apache.axis2.databinding.ADBException(
										"Unexpected subelement "
												+ reader.getLocalName());
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoHistoricoCheque implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Historico-Cheque Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for ChequeConsultado
		 */

		protected Cheque localChequeConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getChequeConsultado() {
			return localChequeConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeConsultado
		 */
		public void setChequeConsultado(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localChequeConsultadoTracker = true;
			} else {
				localChequeConsultadoTracker = false;

			}

			this.localChequeConsultado = param;

		}

		/**
		 * field for DataConsultaMaisAntiga This was an Attribute!
		 */

		protected java.util.Calendar localDataConsultaMaisAntiga;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsultaMaisAntiga() {
			return localDataConsultaMaisAntiga;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsultaMaisAntiga
		 */
		public void setDataConsultaMaisAntiga(java.util.Calendar param) {

			this.localDataConsultaMaisAntiga = param;

		}

		/**
		 * field for DataConsultaMaisRecente This was an Attribute!
		 */

		protected java.util.Calendar localDataConsultaMaisRecente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsultaMaisRecente() {
			return localDataConsultaMaisRecente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsultaMaisRecente
		 */
		public void setDataConsultaMaisRecente(java.util.Calendar param) {

			this.localDataConsultaMaisRecente = param;

		}

		/**
		 * field for NomeEmpresaUltimaConsulta This was an Attribute!
		 */

		protected java.lang.String localNomeEmpresaUltimaConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeEmpresaUltimaConsulta() {
			return localNomeEmpresaUltimaConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeEmpresaUltimaConsulta
		 */
		public void setNomeEmpresaUltimaConsulta(java.lang.String param) {

			this.localNomeEmpresaUltimaConsulta = param;

		}

		/**
		 * field for QuantidadeConsultas This was an Attribute!
		 */

		protected int localQuantidadeConsultas;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeConsultas() {
			return localQuantidadeConsultas;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeConsultas
		 */
		public void setQuantidadeConsultas(int param) {

			this.localQuantidadeConsultas = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoHistoricoCheque.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Historico-Cheque", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Historico-Cheque", xmlWriter);
				}

			}

			if (localDataConsultaMaisAntiga != null) {

				writeAttribute("", "data-consulta-mais-antiga",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaMaisAntiga),
						xmlWriter);

			}

			if (localDataConsultaMaisRecente != null) {

				writeAttribute("", "data-consulta-mais-recente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaMaisRecente),
						xmlWriter);

			}

			if (localNomeEmpresaUltimaConsulta != null) {

				writeAttribute(
						"",
						"nome-empresa-ultima-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeEmpresaUltimaConsulta),
						xmlWriter);

			}

			if (localQuantidadeConsultas != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-consultas",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsultas),
						xmlWriter);

			}
			if (localChequeConsultadoTracker) {
				if (localChequeConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-consultado cannot be null!!");
				}
				localChequeConsultado.serialize(new javax.xml.namespace.QName(
						"", "cheque-consultado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localChequeConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-consultado"));

				if (localChequeConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-consultado cannot be null!!");
				}
				elementList.add(localChequeConsultado);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-mais-antiga"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaMaisAntiga));

			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-mais-recente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaMaisRecente));

			attribList.add(new javax.xml.namespace.QName("",
					"nome-empresa-ultima-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeEmpresaUltimaConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consultas"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsultas));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoHistoricoCheque parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoHistoricoCheque object = new InsumoHistoricoCheque();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Historico-Cheque".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoHistoricoCheque) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-consulta-mais-antiga"
					java.lang.String tempAttribDataConsultaMaisAntiga =

					reader.getAttributeValue(null, "data-consulta-mais-antiga");

					if (tempAttribDataConsultaMaisAntiga != null) {
						java.lang.String content = tempAttribDataConsultaMaisAntiga;

						object.setDataConsultaMaisAntiga(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaMaisAntiga));

					} else {

					}
					handledAttributes.add("data-consulta-mais-antiga");

					// handle attribute "data-consulta-mais-recente"
					java.lang.String tempAttribDataConsultaMaisRecente =

					reader.getAttributeValue(null, "data-consulta-mais-recente");

					if (tempAttribDataConsultaMaisRecente != null) {
						java.lang.String content = tempAttribDataConsultaMaisRecente;

						object.setDataConsultaMaisRecente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaMaisRecente));

					} else {

					}
					handledAttributes.add("data-consulta-mais-recente");

					// handle attribute "nome-empresa-ultima-consulta"
					java.lang.String tempAttribNomeEmpresaUltimaConsulta =

					reader.getAttributeValue(null,
							"nome-empresa-ultima-consulta");

					if (tempAttribNomeEmpresaUltimaConsulta != null) {
						java.lang.String content = tempAttribNomeEmpresaUltimaConsulta;

						object.setNomeEmpresaUltimaConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeEmpresaUltimaConsulta));

					} else {

					}
					handledAttributes.add("nome-empresa-ultima-consulta");

					// handle attribute "quantidade-consultas"
					java.lang.String tempAttribQuantidadeConsultas =

					reader.getAttributeValue(null, "quantidade-consultas");

					if (tempAttribQuantidadeConsultas != null) {
						java.lang.String content = tempAttribQuantidadeConsultas;

						object.setQuantidadeConsultas(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeConsultas));

					} else {

						object.setQuantidadeConsultas(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consultas");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-consultado").equals(reader
									.getName())) {

						object.setChequeConsultado(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoParticipacaoEmpresas extends
			InsumoQuadroSocietario implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Participacao-Empresas Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Participante This was an Array!
		 */

		protected InsumoQuadroSocietario[] localParticipante;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localParticipanteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoQuadroSocietario[]
		 */
		public InsumoQuadroSocietario[] getParticipante() {
			return localParticipante;
		}

		/**
		 * validate the array for Participante
		 */
		protected void validateParticipante(InsumoQuadroSocietario[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Participante
		 */
		public void setParticipante(InsumoQuadroSocietario[] param) {

			validateParticipante(param);

			if (param != null) {
				// update the setting tracker
				localParticipanteTracker = true;
			} else {
				localParticipanteTracker = false;

			}

			this.localParticipante = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            InsumoQuadroSocietario
		 */
		public void addParticipante(InsumoQuadroSocietario param) {
			if (localParticipante == null) {
				localParticipante = new InsumoQuadroSocietario[] {};
			}

			// update the setting tracker
			localParticipanteTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localParticipante);
			list.add(param);
			this.localParticipante = (InsumoQuadroSocietario[]) list
					.toArray(new InsumoQuadroSocietario[list.size()]);

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoParticipacaoEmpresas.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Insumo-Participacao-Empresas",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Participacao-Empresas", xmlWriter);
			}

			if (localCargoAdministracao != null) {

				writeAttribute("", "cargo-administracao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCargoAdministracao),
						xmlWriter);

			}

			if (localCargoDirecao != null) {

				writeAttribute("", "cargo-direcao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCargoDirecao), xmlWriter);

			}

			if (localCondicao != null) {

				writeAttribute("", "condicao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCondicao), xmlWriter);

			}

			if (localDataEntrada != null) {

				writeAttribute("", "data-entrada",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataEntrada), xmlWriter);

			}

			if (localDataSaida != null) {

				writeAttribute("", "data-saida",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataSaida), xmlWriter);

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}

			if (true) {

				writeAttribute("", "indicador-restricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localIndicadorRestricao),
						xmlWriter);

			}

			if (localMunicipioEMBRATEL != null) {

				writeAttribute("", "municipio-EMBRATEL",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMunicipioEMBRATEL),
						xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localPorcentualParticipacao != null) {

				writeAttribute("", "porcentual-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPorcentualParticipacao),
						xmlWriter);

			}

			if (localSituacaoDocumento != null) {

				writeAttribute("", "situacao-documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localSituacaoDocumento),
						xmlWriter);

			}

			if (localTipoRelacionamento != null) {

				writeAttribute("", "tipo-relacionamento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTipoRelacionamento),
						xmlWriter);

			}

			if (localDataUltimaAtualizacao != null) {

				writeAttribute("", "data-ultima-atualizacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimaAtualizacao),
						xmlWriter);

			}

			if (localValorParticipacao != null) {

				writeAttribute("", "valor-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorParticipacao),
						xmlWriter);

			}
			if (localNacionalidadeTracker) {
				if (localNacionalidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"nacionalidade cannot be null!!");
				}
				localNacionalidade.serialize(new javax.xml.namespace.QName("",
						"nacionalidade"), factory, xmlWriter);
			}
			if (localEstadoEMBRATELTracker) {
				if (localEstadoEMBRATEL == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-EMBRATEL cannot be null!!");
				}
				localEstadoEMBRATEL.serialize(new javax.xml.namespace.QName("",
						"estado-EMBRATEL"), factory, xmlWriter);
			}
			if (localParticipanteTracker) {
				if (localParticipante != null) {
					for (int i = 0; i < localParticipante.length; i++) {
						if (localParticipante[i] != null) {
							localParticipante[i]
									.serialize(new javax.xml.namespace.QName(
											"", "participante"), factory,
											xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"participante cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Participacao-Empresas"));
			if (localNacionalidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"nacionalidade"));

				if (localNacionalidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"nacionalidade cannot be null!!");
				}
				elementList.add(localNacionalidade);
			}
			if (localEstadoEMBRATELTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"estado-EMBRATEL"));

				if (localEstadoEMBRATEL == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-EMBRATEL cannot be null!!");
				}
				elementList.add(localEstadoEMBRATEL);
			}
			if (localParticipanteTracker) {
				if (localParticipante != null) {
					for (int i = 0; i < localParticipante.length; i++) {

						if (localParticipante[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"participante"));
							elementList.add(localParticipante[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"participante cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("",
					"cargo-administracao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCargoAdministracao));

			attribList.add(new javax.xml.namespace.QName("", "cargo-direcao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCargoDirecao));

			attribList.add(new javax.xml.namespace.QName("", "condicao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCondicao));

			attribList.add(new javax.xml.namespace.QName("", "data-entrada"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataEntrada));

			attribList.add(new javax.xml.namespace.QName("", "data-saida"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataSaida));

			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			attribList.add(new javax.xml.namespace.QName("",
					"indicador-restricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localIndicadorRestricao));

			attribList.add(new javax.xml.namespace.QName("",
					"municipio-EMBRATEL"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMunicipioEMBRATEL));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("",
					"porcentual-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPorcentualParticipacao));

			attribList.add(new javax.xml.namespace.QName("",
					"situacao-documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localSituacaoDocumento));

			attribList.add(new javax.xml.namespace.QName("",
					"tipo-relacionamento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTipoRelacionamento));

			attribList.add(new javax.xml.namespace.QName("",
					"data-ultima-atualizacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimaAtualizacao));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorParticipacao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoParticipacaoEmpresas parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoParticipacaoEmpresas object = new InsumoParticipacaoEmpresas();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Participacao-Empresas".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoParticipacaoEmpresas) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "cargo-administracao"
					java.lang.String tempAttribCargoAdministracao =

					reader.getAttributeValue(null, "cargo-administracao");

					if (tempAttribCargoAdministracao != null) {
						java.lang.String content = tempAttribCargoAdministracao;

						object.setCargoAdministracao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCargoAdministracao));

					} else {

					}
					handledAttributes.add("cargo-administracao");

					// handle attribute "cargo-direcao"
					java.lang.String tempAttribCargoDirecao =

					reader.getAttributeValue(null, "cargo-direcao");

					if (tempAttribCargoDirecao != null) {
						java.lang.String content = tempAttribCargoDirecao;

						object.setCargoDirecao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCargoDirecao));

					} else {

					}
					handledAttributes.add("cargo-direcao");

					// handle attribute "condicao"
					java.lang.String tempAttribCondicao =

					reader.getAttributeValue(null, "condicao");

					if (tempAttribCondicao != null) {
						java.lang.String content = tempAttribCondicao;

						object.setCondicao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCondicao));

					} else {

					}
					handledAttributes.add("condicao");

					// handle attribute "data-entrada"
					java.lang.String tempAttribDataEntrada =

					reader.getAttributeValue(null, "data-entrada");

					if (tempAttribDataEntrada != null) {
						java.lang.String content = tempAttribDataEntrada;

						object.setDataEntrada(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataEntrada));

					} else {

					}
					handledAttributes.add("data-entrada");

					// handle attribute "data-saida"
					java.lang.String tempAttribDataSaida =

					reader.getAttributeValue(null, "data-saida");

					if (tempAttribDataSaida != null) {
						java.lang.String content = tempAttribDataSaida;

						object.setDataSaida(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataSaida));

					} else {

					}
					handledAttributes.add("data-saida");

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					// handle attribute "indicador-restricao"
					java.lang.String tempAttribIndicadorRestricao =

					reader.getAttributeValue(null, "indicador-restricao");

					if (tempAttribIndicadorRestricao != null) {
						java.lang.String content = tempAttribIndicadorRestricao;

						object.setIndicadorRestricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribIndicadorRestricao));

					} else {

					}
					handledAttributes.add("indicador-restricao");

					// handle attribute "municipio-EMBRATEL"
					java.lang.String tempAttribMunicipioEMBRATEL =

					reader.getAttributeValue(null, "municipio-EMBRATEL");

					if (tempAttribMunicipioEMBRATEL != null) {
						java.lang.String content = tempAttribMunicipioEMBRATEL;

						object.setMunicipioEMBRATEL(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMunicipioEMBRATEL));

					} else {

					}
					handledAttributes.add("municipio-EMBRATEL");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "porcentual-participacao"
					java.lang.String tempAttribPorcentualParticipacao =

					reader.getAttributeValue(null, "porcentual-participacao");

					if (tempAttribPorcentualParticipacao != null) {
						java.lang.String content = tempAttribPorcentualParticipacao;

						object.setPorcentualParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribPorcentualParticipacao));

					} else {

					}
					handledAttributes.add("porcentual-participacao");

					// handle attribute "situacao-documento"
					java.lang.String tempAttribSituacaoDocumento =

					reader.getAttributeValue(null, "situacao-documento");

					if (tempAttribSituacaoDocumento != null) {
						java.lang.String content = tempAttribSituacaoDocumento;

						object.setSituacaoDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribSituacaoDocumento));

					} else {

					}
					handledAttributes.add("situacao-documento");

					// handle attribute "tipo-relacionamento"
					java.lang.String tempAttribTipoRelacionamento =

					reader.getAttributeValue(null, "tipo-relacionamento");

					if (tempAttribTipoRelacionamento != null) {
						java.lang.String content = tempAttribTipoRelacionamento;

						object.setTipoRelacionamento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTipoRelacionamento));

					} else {

					}
					handledAttributes.add("tipo-relacionamento");

					// handle attribute "data-ultima-atualizacao"
					java.lang.String tempAttribDataUltimaAtualizacao =

					reader.getAttributeValue(null, "data-ultima-atualizacao");

					if (tempAttribDataUltimaAtualizacao != null) {
						java.lang.String content = tempAttribDataUltimaAtualizacao;

						object.setDataUltimaAtualizacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimaAtualizacao));

					} else {

					}
					handledAttributes.add("data-ultima-atualizacao");

					// handle attribute "valor-participacao"
					java.lang.String tempAttribValorParticipacao =

					reader.getAttributeValue(null, "valor-participacao");

					if (tempAttribValorParticipacao != null) {
						java.lang.String content = tempAttribValorParticipacao;

						object.setValorParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorParticipacao));

					} else {

					}
					handledAttributes.add("valor-participacao");

					reader.next();

					java.util.ArrayList list3 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"nacionalidade").equals(reader.getName())) {

						object.setNacionalidade(Pais.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"estado-EMBRATEL").equals(reader.getName())) {

						object.setEstadoEMBRATEL(Estado.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "participante")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list3.add(InsumoQuadroSocietario.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone3 = false;
						while (!loopDone3) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone3 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"participante")
										.equals(reader.getName())) {
									list3.add(InsumoQuadroSocietario.Factory
											.parse(reader));

								} else {
									loopDone3 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setParticipante((InsumoQuadroSocietario[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(InsumoQuadroSocietario.class,
										list3));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Estado implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Estado Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for SiglaUf This was an Attribute!
		 */

		protected java.lang.String localSiglaUf;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getSiglaUf() {
			return localSiglaUf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SiglaUf
		 */
		public void setSiglaUf(java.lang.String param) {

			this.localSiglaUf = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Estado.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Estado", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Estado", xmlWriter);
				}

			}

			if (localSiglaUf != null) {

				writeAttribute("", "sigla-uf",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localSiglaUf), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "sigla-uf"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localSiglaUf));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Estado parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Estado object = new Estado();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Estado".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Estado) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "sigla-uf"
					java.lang.String tempAttribSiglaUf =

					reader.getAttributeValue(null, "sigla-uf");

					if (tempAttribSiglaUf != null) {
						java.lang.String content = tempAttribSiglaUf;

						object.setSiglaUf(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribSiglaUf));

					} else {

					}
					handledAttributes.add("sigla-uf");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoObito implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Obito Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CartorioObito
		 */

		protected CartorioObito localCartorioObito;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCartorioObitoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return CartorioObito
		 */
		public CartorioObito getCartorioObito() {
			return localCartorioObito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CartorioObito
		 */
		public void setCartorioObito(CartorioObito param) {

			if (param != null) {
				// update the setting tracker
				localCartorioObitoTracker = true;
			} else {
				localCartorioObitoTracker = false;

			}

			this.localCartorioObito = param;

		}

		/**
		 * field for DataObito This was an Attribute!
		 */

		protected java.util.Calendar localDataObito;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataObito() {
			return localDataObito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataObito
		 */
		public void setDataObito(java.util.Calendar param) {

			this.localDataObito = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoObito.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Obito",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Obito", xmlWriter);
				}

			}

			if (localDataObito != null) {

				writeAttribute("", "data-obito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataObito), xmlWriter);

			}
			if (localCartorioObitoTracker) {
				if (localCartorioObito == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cartorio-obito cannot be null!!");
				}
				localCartorioObito.serialize(new javax.xml.namespace.QName("",
						"cartorio-obito"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCartorioObitoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cartorio-obito"));

				if (localCartorioObito == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cartorio-obito cannot be null!!");
				}
				elementList.add(localCartorioObito);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-obito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataObito));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoObito parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoObito object = new InsumoObito();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Obito".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoObito) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-obito"
					java.lang.String tempAttribDataObito =

					reader.getAttributeValue(null, "data-obito");

					if (tempAttribDataObito != null) {
						java.lang.String content = tempAttribDataObito;

						object.setDataObito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataObito));

					} else {

					}
					handledAttributes.add("data-obito");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cartorio-obito").equals(reader.getName())) {

						object.setCartorioObito(CartorioObito.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoTelefoneConsultado implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Telefone-Consultado Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Telefone
		 */

		protected Telefone localTelefone;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefone() {
			return localTelefone;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Telefone
		 */
		public void setTelefone(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneTracker = true;
			} else {
				localTelefoneTracker = false;

			}

			this.localTelefone = param;

		}

		/**
		 * field for DataPrimeiraConsulta This was an Attribute!
		 */

		protected java.util.Calendar localDataPrimeiraConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataPrimeiraConsulta() {
			return localDataPrimeiraConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataPrimeiraConsulta
		 */
		public void setDataPrimeiraConsulta(java.util.Calendar param) {

			this.localDataPrimeiraConsulta = param;

		}

		/**
		 * field for DataUltimaConsulta This was an Attribute!
		 */

		protected java.util.Calendar localDataUltimaConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataUltimaConsulta() {
			return localDataUltimaConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataUltimaConsulta
		 */
		public void setDataUltimaConsulta(java.util.Calendar param) {

			this.localDataUltimaConsulta = param;

		}

		/**
		 * field for QuantidadeConsulta This was an Attribute!
		 */

		protected long localQuantidadeConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getQuantidadeConsulta() {
			return localQuantidadeConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeConsulta
		 */
		public void setQuantidadeConsulta(long param) {

			this.localQuantidadeConsulta = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoTelefoneConsultado.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Telefone-Consultado", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Telefone-Consultado", xmlWriter);
				}

			}

			if (localDataPrimeiraConsulta != null) {

				writeAttribute("", "data-primeira-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataPrimeiraConsulta),
						xmlWriter);

			}

			if (localDataUltimaConsulta != null) {

				writeAttribute("", "data-ultima-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimaConsulta),
						xmlWriter);

			}

			if (localQuantidadeConsulta != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "quantidade-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsulta),
						xmlWriter);

			}
			if (localTelefoneTracker) {
				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				localTelefone.serialize(new javax.xml.namespace.QName("",
						"telefone"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localTelefoneTracker) {
				elementList.add(new javax.xml.namespace.QName("", "telefone"));

				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				elementList.add(localTelefone);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-primeira-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataPrimeiraConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"data-ultima-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimaConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsulta));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoTelefoneConsultado parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoTelefoneConsultado object = new InsumoTelefoneConsultado();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Telefone-Consultado".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoTelefoneConsultado) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-primeira-consulta"
					java.lang.String tempAttribDataPrimeiraConsulta =

					reader.getAttributeValue(null, "data-primeira-consulta");

					if (tempAttribDataPrimeiraConsulta != null) {
						java.lang.String content = tempAttribDataPrimeiraConsulta;

						object.setDataPrimeiraConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataPrimeiraConsulta));

					} else {

					}
					handledAttributes.add("data-primeira-consulta");

					// handle attribute "data-ultima-consulta"
					java.lang.String tempAttribDataUltimaConsulta =

					reader.getAttributeValue(null, "data-ultima-consulta");

					if (tempAttribDataUltimaConsulta != null) {
						java.lang.String content = tempAttribDataUltimaConsulta;

						object.setDataUltimaConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimaConsulta));

					} else {

					}
					handledAttributes.add("data-ultima-consulta");

					// handle attribute "quantidade-consulta"
					java.lang.String tempAttribQuantidadeConsulta =

					reader.getAttributeValue(null, "quantidade-consulta");

					if (tempAttribQuantidadeConsulta != null) {
						java.lang.String content = tempAttribQuantidadeConsulta;

						object.setQuantidadeConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribQuantidadeConsulta));

					} else {

						object.setQuantidadeConsulta(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consulta");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "telefone")
									.equals(reader.getName())) {

						object.setTelefone(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoEnderecoCEPConsultado implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Endereco-CEP-Consultado Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Endereco
		 */

		protected Endereco localEndereco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Endereco
		 */
		public Endereco getEndereco() {
			return localEndereco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Endereco
		 */
		public void setEndereco(Endereco param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoTracker = true;
			} else {
				localEnderecoTracker = false;

			}

			this.localEndereco = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoEnderecoCEPConsultado.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Endereco-CEP-Consultado",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Endereco-CEP-Consultado", xmlWriter);
				}

			}
			if (localEnderecoTracker) {
				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				localEndereco.serialize(new javax.xml.namespace.QName("",
						"endereco"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localEnderecoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "endereco"));

				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				elementList.add(localEndereco);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoEnderecoCEPConsultado parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoEnderecoCEPConsultado object = new InsumoEnderecoCEPConsultado();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Endereco-CEP-Consultado".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoEnderecoCEPConsultado) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "endereco")
									.equals(reader.getName())) {

						object.setEndereco(Endereco.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class MensagemRiskscoring implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Mensagem-Riskscoring Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataMensagemRiskscoring This was an Attribute!
		 */

		protected java.util.Calendar localDataMensagemRiskscoring;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataMensagemRiskscoring() {
			return localDataMensagemRiskscoring;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataMensagemRiskscoring
		 */
		public void setDataMensagemRiskscoring(java.util.Calendar param) {

			this.localDataMensagemRiskscoring = param;

		}

		/**
		 * field for TextoMensagemRiskscoring This was an Attribute!
		 */

		protected java.lang.String localTextoMensagemRiskscoring;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTextoMensagemRiskscoring() {
			return localTextoMensagemRiskscoring;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TextoMensagemRiskscoring
		 */
		public void setTextoMensagemRiskscoring(java.lang.String param) {

			this.localTextoMensagemRiskscoring = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					MensagemRiskscoring.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Mensagem-Riskscoring",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Mensagem-Riskscoring", xmlWriter);
				}

			}

			if (localDataMensagemRiskscoring != null) {

				writeAttribute("", "data-mensagem-riskscoring",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataMensagemRiskscoring),
						xmlWriter);

			}

			if (localTextoMensagemRiskscoring != null) {

				writeAttribute(
						"",
						"texto-mensagem-riskscoring",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTextoMensagemRiskscoring),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"data-mensagem-riskscoring"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataMensagemRiskscoring));

			attribList.add(new javax.xml.namespace.QName("",
					"texto-mensagem-riskscoring"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTextoMensagemRiskscoring));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static MensagemRiskscoring parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				MensagemRiskscoring object = new MensagemRiskscoring();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Mensagem-Riskscoring".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (MensagemRiskscoring) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-mensagem-riskscoring"
					java.lang.String tempAttribDataMensagemRiskscoring =

					reader.getAttributeValue(null, "data-mensagem-riskscoring");

					if (tempAttribDataMensagemRiskscoring != null) {
						java.lang.String content = tempAttribDataMensagemRiskscoring;

						object.setDataMensagemRiskscoring(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataMensagemRiskscoring));

					} else {

					}
					handledAttributes.add("data-mensagem-riskscoring");

					// handle attribute "texto-mensagem-riskscoring"
					java.lang.String tempAttribTextoMensagemRiskscoring =

					reader.getAttributeValue(null, "texto-mensagem-riskscoring");

					if (tempAttribTextoMensagemRiskscoring != null) {
						java.lang.String content = tempAttribTextoMensagemRiskscoring;

						object.setTextoMensagemRiskscoring(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTextoMensagemRiskscoring));

					} else {

					}
					handledAttributes.add("texto-mensagem-riskscoring");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class NaturezaAnotacao implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Natureza-Anotacao Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DescricaoNaturezaAnotacao This was an Attribute!
		 */

		protected java.lang.String localDescricaoNaturezaAnotacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoNaturezaAnotacao() {
			return localDescricaoNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoNaturezaAnotacao
		 */
		public void setDescricaoNaturezaAnotacao(java.lang.String param) {

			this.localDescricaoNaturezaAnotacao = param;

		}

		/**
		 * field for DescricaoComplementarNaturezaAnotacao This was an
		 * Attribute!
		 */

		protected java.lang.String localDescricaoComplementarNaturezaAnotacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoComplementarNaturezaAnotacao() {
			return localDescricaoComplementarNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoComplementarNaturezaAnotacao
		 */
		public void setDescricaoComplementarNaturezaAnotacao(
				java.lang.String param) {

			this.localDescricaoComplementarNaturezaAnotacao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					NaturezaAnotacao.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Natureza-Anotacao",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Natureza-Anotacao", xmlWriter);
				}

			}

			if (localDescricaoNaturezaAnotacao != null) {

				writeAttribute(
						"",
						"descricao-natureza-anotacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoNaturezaAnotacao),
						xmlWriter);

			}

			if (localDescricaoComplementarNaturezaAnotacao != null) {

				writeAttribute(
						"",
						"descricao-complementar-natureza-anotacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoComplementarNaturezaAnotacao),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-natureza-anotacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricaoNaturezaAnotacao));

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-complementar-natureza-anotacao"));

			attribList
					.add(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(localDescricaoComplementarNaturezaAnotacao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static NaturezaAnotacao parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				NaturezaAnotacao object = new NaturezaAnotacao();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Natureza-Anotacao".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (NaturezaAnotacao) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao-natureza-anotacao"
					java.lang.String tempAttribDescricaoNaturezaAnotacao =

					reader.getAttributeValue(null,
							"descricao-natureza-anotacao");

					if (tempAttribDescricaoNaturezaAnotacao != null) {
						java.lang.String content = tempAttribDescricaoNaturezaAnotacao;

						object.setDescricaoNaturezaAnotacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoNaturezaAnotacao));

					} else {

					}
					handledAttributes.add("descricao-natureza-anotacao");

					// handle attribute
					// "descricao-complementar-natureza-anotacao"
					java.lang.String tempAttribDescricaoComplementarNaturezaAnotacao =

					reader.getAttributeValue(null,
							"descricao-complementar-natureza-anotacao");

					if (tempAttribDescricaoComplementarNaturezaAnotacao != null) {
						java.lang.String content = tempAttribDescricaoComplementarNaturezaAnotacao;

						object.setDescricaoComplementarNaturezaAnotacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoComplementarNaturezaAnotacao));

					} else {

					}
					handledAttributes
							.add("descricao-complementar-natureza-anotacao");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoInsumoConsultaRealizada extends
			ResultadoInsumo implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-Insumo-Consulta-Realizada Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for QuantidadeDiasConsultados This was an Attribute!
		 */

		protected int localQuantidadeDiasConsultados;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeDiasConsultados() {
			return localQuantidadeDiasConsultados;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeDiasConsultados
		 */
		public void setQuantidadeDiasConsultados(int param) {

			this.localQuantidadeDiasConsultados = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoInsumoConsultaRealizada.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix
								+ ":Resultado-Insumo-Consulta-Realizada",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Resultado-Insumo-Consulta-Realizada", xmlWriter);
			}

			if (localQuantidadeDiasConsultados != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"quantidade-dias-consultados",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeDiasConsultados),
						xmlWriter);

			}
			if (localResumoTracker) {
				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				localResumo.serialize(new javax.xml.namespace.QName("",
						"resumo"), factory, xmlWriter);
			}
			if (localResultadoInsumoChoice_type0Tracker) {

				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {
						if (localResultadoInsumoChoice_type0[i] != null) {
							localResultadoInsumoChoice_type0[i].serialize(null,
									factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");
				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Resultado-Insumo-Consulta-Realizada"));
			if (localResumoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "resumo"));

				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				elementList.add(localResumo);
			}
			if (localResultadoInsumoChoice_type0Tracker) {
				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {

						if (localResultadoInsumoChoice_type0[i] != null) {
							elementList
									.add(new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"Resultado-InsumoChoice_type0"));
							elementList
									.add(localResultadoInsumoChoice_type0[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-dias-consultados"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeDiasConsultados));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoInsumoConsultaRealizada parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoInsumoConsultaRealizada object = new ResultadoInsumoConsultaRealizada();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resultado-Insumo-Consulta-Realizada"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResultadoInsumoConsultaRealizada) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "quantidade-dias-consultados"
					java.lang.String tempAttribQuantidadeDiasConsultados =

					reader.getAttributeValue(null,
							"quantidade-dias-consultados");

					if (tempAttribQuantidadeDiasConsultados != null) {
						java.lang.String content = tempAttribQuantidadeDiasConsultados;

						object.setQuantidadeDiasConsultados(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeDiasConsultados));

					} else {

						object.setQuantidadeDiasConsultados(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-dias-consultados");

					reader.next();

					java.util.ArrayList list2 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "resumo")
									.equals(reader.getName())) {

						object.setResumo(ResumoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					try {

						if (reader.isStartElement()) {

							// Process the array and step past its final
							// element's end.
							list2.add(ResultadoInsumoChoice_type0.Factory
									.parse(reader));
							// loop until we find a start element that is not
							// part of this array
							boolean loopDone2 = false;
							while (!loopDone2) {

								// Step to next element event.
								while (!reader.isStartElement()
										&& !reader.isEndElement())
									reader.next();
								if (reader.isEndElement()) {
									// two continuous end elements means we are
									// exiting the xml structure
									loopDone2 = true;
								} else {
									list2.add(ResultadoInsumoChoice_type0.Factory
											.parse(reader));
								}
							}
							// call the converter utility to convert and set the
							// array
							object.setResultadoInsumoChoice_type0((ResultadoInsumoChoice_type0[]) org.apache.axis2.databinding.utils.ConverterUtil
									.convertToArray(
											ResultadoInsumoChoice_type0.class,
											list2));

						} // End of if for expected property start element

						else {

						}

					} catch (java.lang.Exception e) {
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class SituacaoDocumentoWS implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Situacao-Documento-WS Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DescricaoSituacao This was an Attribute!
		 */

		protected java.lang.String localDescricaoSituacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoSituacao() {
			return localDescricaoSituacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoSituacao
		 */
		public void setDescricaoSituacao(java.lang.String param) {

			this.localDescricaoSituacao = param;

		}

		/**
		 * field for DataSituacao This was an Attribute!
		 */

		protected java.util.Calendar localDataSituacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataSituacao() {
			return localDataSituacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataSituacao
		 */
		public void setDataSituacao(java.util.Calendar param) {

			this.localDataSituacao = param;

		}

		/**
		 * field for Uf This was an Attribute!
		 */

		protected java.lang.String localUf;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getUf() {
			return localUf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Uf
		 */
		public void setUf(java.lang.String param) {

			this.localUf = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					SituacaoDocumentoWS.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Situacao-Documento-WS",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Situacao-Documento-WS", xmlWriter);
				}

			}

			if (localDescricaoSituacao != null) {

				writeAttribute("", "descricao-situacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoSituacao),
						xmlWriter);

			}

			if (localDataSituacao != null) {

				writeAttribute("", "data-situacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataSituacao), xmlWriter);

			}

			if (localUf != null) {

				writeAttribute("", "uf",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localUf), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-situacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricaoSituacao));

			attribList.add(new javax.xml.namespace.QName("", "data-situacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataSituacao));

			attribList.add(new javax.xml.namespace.QName("", "uf"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localUf));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static SituacaoDocumentoWS parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				SituacaoDocumentoWS object = new SituacaoDocumentoWS();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Situacao-Documento-WS".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (SituacaoDocumentoWS) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao-situacao"
					java.lang.String tempAttribDescricaoSituacao =

					reader.getAttributeValue(null, "descricao-situacao");

					if (tempAttribDescricaoSituacao != null) {
						java.lang.String content = tempAttribDescricaoSituacao;

						object.setDescricaoSituacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoSituacao));

					} else {

					}
					handledAttributes.add("descricao-situacao");

					// handle attribute "data-situacao"
					java.lang.String tempAttribDataSituacao =

					reader.getAttributeValue(null, "data-situacao");

					if (tempAttribDataSituacao != null) {
						java.lang.String content = tempAttribDataSituacao;

						object.setDataSituacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataSituacao));

					} else {

					}
					handledAttributes.add("data-situacao");

					// handle attribute "uf"
					java.lang.String tempAttribUf =

					reader.getAttributeValue(null, "uf");

					if (tempAttribUf != null) {
						java.lang.String content = tempAttribUf;

						object.setUf(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribUf));

					} else {

					}
					handledAttributes.add("uf");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ProtocoloConsulta implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Protocolo-Consulta Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Numero This was an Attribute!
		 */

		protected long localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(long param) {

			this.localNumero = param;

		}

		/**
		 * field for Digito This was an Attribute!
		 */

		protected int localDigito;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getDigito() {
			return localDigito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Digito
		 */
		public void setDigito(int param) {

			this.localDigito = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ProtocoloConsulta.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Protocolo-Consulta",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Protocolo-Consulta", xmlWriter);
				}

			}

			if (localNumero != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localDigito != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "digito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigito), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "digito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigito));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ProtocoloConsulta parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ProtocoloConsulta object = new ProtocoloConsulta();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Protocolo-Consulta".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ProtocoloConsulta) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribNumero));

					} else {

						object.setNumero(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("numero");

					// handle attribute "digito"
					java.lang.String tempAttribDigito =

					reader.getAttributeValue(null, "digito");

					if (tempAttribDigito != null) {
						java.lang.String content = tempAttribDigito;

						object.setDigito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribDigito));

					} else {

						object.setDigito(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("digito");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoParticipacaoFalencia implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Participacao-Falencia Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for TipoAcao
		 */

		protected TipoAcao localTipoAcao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTipoAcaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return TipoAcao
		 */
		public TipoAcao getTipoAcao() {
			return localTipoAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoAcao
		 */
		public void setTipoAcao(TipoAcao param) {

			if (param != null) {
				// update the setting tracker
				localTipoAcaoTracker = true;
			} else {
				localTipoAcaoTracker = false;

			}

			this.localTipoAcao = param;

		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for VaraCivel
		 */

		protected Vara localVaraCivel;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localVaraCivelTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Vara
		 */
		public Vara getVaraCivel() {
			return localVaraCivel;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            VaraCivel
		 */
		public void setVaraCivel(Vara param) {

			if (param != null) {
				// update the setting tracker
				localVaraCivelTracker = true;
			} else {
				localVaraCivelTracker = false;

			}

			this.localVaraCivel = param;

		}

		/**
		 * field for DataAcao This was an Attribute!
		 */

		protected java.util.Calendar localDataAcao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataAcao() {
			return localDataAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataAcao
		 */
		public void setDataAcao(java.util.Calendar param) {

			this.localDataAcao = param;

		}

		/**
		 * field for DescricaoTipoParticipacao This was an Attribute!
		 */

		protected java.lang.String localDescricaoTipoParticipacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoTipoParticipacao() {
			return localDescricaoTipoParticipacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoTipoParticipacao
		 */
		public void setDescricaoTipoParticipacao(java.lang.String param) {

			this.localDescricaoTipoParticipacao = param;

		}

		/**
		 * field for EmpresaParticipacao This was an Attribute!
		 */

		protected java.lang.String localEmpresaParticipacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getEmpresaParticipacao() {
			return localEmpresaParticipacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EmpresaParticipacao
		 */
		public void setEmpresaParticipacao(java.lang.String param) {

			this.localEmpresaParticipacao = param;

		}

		/**
		 * field for QualificacaoParticipanteEmpresaFalida This was an
		 * Attribute!
		 */

		protected java.lang.String localQualificacaoParticipanteEmpresaFalida;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getQualificacaoParticipanteEmpresaFalida() {
			return localQualificacaoParticipanteEmpresaFalida;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QualificacaoParticipanteEmpresaFalida
		 */
		public void setQualificacaoParticipanteEmpresaFalida(
				java.lang.String param) {

			this.localQualificacaoParticipanteEmpresaFalida = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoParticipacaoFalencia.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Participacao-Falencia",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Participacao-Falencia", xmlWriter);
				}

			}

			if (localDataAcao != null) {

				writeAttribute("", "data-acao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataAcao), xmlWriter);

			}

			if (localDescricaoTipoParticipacao != null) {

				writeAttribute(
						"",
						"descricao-tipo-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoTipoParticipacao),
						xmlWriter);

			}

			if (localEmpresaParticipacao != null) {

				writeAttribute("", "empresa-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localEmpresaParticipacao),
						xmlWriter);

			}

			if (localQualificacaoParticipanteEmpresaFalida != null) {

				writeAttribute(
						"",
						"qualificacao-participante-empresa-falida",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQualificacaoParticipanteEmpresaFalida),
						xmlWriter);

			}
			if (localTipoAcaoTracker) {
				if (localTipoAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"tipo-acao cannot be null!!");
				}
				localTipoAcao.serialize(new javax.xml.namespace.QName("",
						"tipo-acao"), factory, xmlWriter);
			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			if (localVaraCivelTracker) {
				if (localVaraCivel == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"vara-civel cannot be null!!");
				}
				localVaraCivel.serialize(new javax.xml.namespace.QName("",
						"vara-civel"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localTipoAcaoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "tipo-acao"));

				if (localTipoAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"tipo-acao cannot be null!!");
				}
				elementList.add(localTipoAcao);
			}
			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			if (localVaraCivelTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "vara-civel"));

				if (localVaraCivel == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"vara-civel cannot be null!!");
				}
				elementList.add(localVaraCivel);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-acao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataAcao));

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-tipo-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricaoTipoParticipacao));

			attribList.add(new javax.xml.namespace.QName("",
					"empresa-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localEmpresaParticipacao));

			attribList.add(new javax.xml.namespace.QName("",
					"qualificacao-participante-empresa-falida"));

			attribList
					.add(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(localQualificacaoParticipanteEmpresaFalida));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoParticipacaoFalencia parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoParticipacaoFalencia object = new InsumoParticipacaoFalencia();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Participacao-Falencia".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoParticipacaoFalencia) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-acao"
					java.lang.String tempAttribDataAcao =

					reader.getAttributeValue(null, "data-acao");

					if (tempAttribDataAcao != null) {
						java.lang.String content = tempAttribDataAcao;

						object.setDataAcao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataAcao));

					} else {

					}
					handledAttributes.add("data-acao");

					// handle attribute "descricao-tipo-participacao"
					java.lang.String tempAttribDescricaoTipoParticipacao =

					reader.getAttributeValue(null,
							"descricao-tipo-participacao");

					if (tempAttribDescricaoTipoParticipacao != null) {
						java.lang.String content = tempAttribDescricaoTipoParticipacao;

						object.setDescricaoTipoParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoTipoParticipacao));

					} else {

					}
					handledAttributes.add("descricao-tipo-participacao");

					// handle attribute "empresa-participacao"
					java.lang.String tempAttribEmpresaParticipacao =

					reader.getAttributeValue(null, "empresa-participacao");

					if (tempAttribEmpresaParticipacao != null) {
						java.lang.String content = tempAttribEmpresaParticipacao;

						object.setEmpresaParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribEmpresaParticipacao));

					} else {

					}
					handledAttributes.add("empresa-participacao");

					// handle attribute
					// "qualificacao-participante-empresa-falida"
					java.lang.String tempAttribQualificacaoParticipanteEmpresaFalida =

					reader.getAttributeValue(null,
							"qualificacao-participante-empresa-falida");

					if (tempAttribQualificacaoParticipanteEmpresaFalida != null) {
						java.lang.String content = tempAttribQualificacaoParticipanteEmpresaFalida;

						object.setQualificacaoParticipanteEmpresaFalida(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribQualificacaoParticipanteEmpresaFalida));

					} else {

					}
					handledAttributes
							.add("qualificacao-participante-empresa-falida");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "tipo-acao")
									.equals(reader.getName())) {

						object.setTipoAcao(TipoAcao.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "vara-civel")
									.equals(reader.getName())) {

						object.setVaraCivel(Vara.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ChequeFinal extends Cheque implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cheque-Final Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ChequeFinal.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Cheque-Final", xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Cheque-Final", xmlWriter);
			}

			if (localNumero != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localDigito != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "digito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigito), xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Cheque-Final"));
			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "digito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigito));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ChequeFinal parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ChequeFinal object = new ChequeFinal();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cheque-Final".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ChequeFinal) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumero));

					} else {

						object.setNumero(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero");

					// handle attribute "digito"
					java.lang.String tempAttribDigito =

					reader.getAttributeValue(null, "digito");

					if (tempAttribDigito != null) {
						java.lang.String content = tempAttribDigito;

						object.setDigito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribDigito));

					} else {

						object.setDigito(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("digito");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Telefone implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Telefone Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for NumeroDdd This was an Attribute!
		 */

		protected int localNumeroDdd;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumeroDdd() {
			return localNumeroDdd;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroDdd
		 */
		public void setNumeroDdd(int param) {

			this.localNumeroDdd = param;

		}

		/**
		 * field for Numero This was an Attribute!
		 */

		protected long localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(long param) {

			this.localNumero = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Telefone.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Telefone", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Telefone", xmlWriter);
				}

			}

			if (localNumeroDdd != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero-ddd",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroDdd), xmlWriter);

			}

			if (localNumero != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "numero-ddd"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroDdd));

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Telefone parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Telefone object = new Telefone();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Telefone".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Telefone) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero-ddd"
					java.lang.String tempAttribNumeroDdd =

					reader.getAttributeValue(null, "numero-ddd");

					if (tempAttribNumeroDdd != null) {
						java.lang.String content = tempAttribNumeroDdd;

						object.setNumeroDdd(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumeroDdd));

					} else {

						object.setNumeroDdd(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero-ddd");

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribNumero));

					} else {

						object.setNumero(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("numero");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ChequeContraOrdem extends Cheque implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cheque-Contra-Ordem Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ChequeContraOrdem.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Cheque-Contra-Ordem", xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Cheque-Contra-Ordem", xmlWriter);
			}

			if (localNumero != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localDigito != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "digito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigito), xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Cheque-Contra-Ordem"));
			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "digito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigito));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ChequeContraOrdem parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ChequeContraOrdem object = new ChequeContraOrdem();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cheque-Contra-Ordem".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ChequeContraOrdem) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumero));

					} else {

						object.setNumero(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero");

					// handle attribute "digito"
					java.lang.String tempAttribDigito =

					reader.getAttributeValue(null, "digito");

					if (tempAttribDigito != null) {
						java.lang.String content = tempAttribDigito;

						object.setDigito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribDigito));

					} else {

						object.setDigito(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("digito");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ReferenciaComercial implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Referencia-Comercial Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataConsultaCheque This was an Attribute!
		 */

		protected java.util.Calendar localDataConsultaCheque;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsultaCheque() {
			return localDataConsultaCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsultaCheque
		 */
		public void setDataConsultaCheque(java.util.Calendar param) {

			this.localDataConsultaCheque = param;

		}

		/**
		 * field for NomeEmpresaConsultante This was an Attribute!
		 */

		protected java.lang.String localNomeEmpresaConsultante;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeEmpresaConsultante() {
			return localNomeEmpresaConsultante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeEmpresaConsultante
		 */
		public void setNomeEmpresaConsultante(java.lang.String param) {

			this.localNomeEmpresaConsultante = param;

		}

		/**
		 * field for OrdemConsulta This was an Attribute!
		 */

		protected int localOrdemConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getOrdemConsulta() {
			return localOrdemConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            OrdemConsulta
		 */
		public void setOrdemConsulta(int param) {

			this.localOrdemConsulta = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ReferenciaComercial.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Referencia-Comercial",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Referencia-Comercial", xmlWriter);
				}

			}

			if (localDataConsultaCheque != null) {

				writeAttribute("", "data-consulta-cheque",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaCheque),
						xmlWriter);

			}

			if (localNomeEmpresaConsultante != null) {

				writeAttribute("", "nome-empresa-consultante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeEmpresaConsultante),
						xmlWriter);

			}

			if (localOrdemConsulta != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "ordem-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrdemConsulta), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-cheque"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaCheque));

			attribList.add(new javax.xml.namespace.QName("",
					"nome-empresa-consultante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeEmpresaConsultante));

			attribList.add(new javax.xml.namespace.QName("", "ordem-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrdemConsulta));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ReferenciaComercial parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ReferenciaComercial object = new ReferenciaComercial();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Referencia-Comercial".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ReferenciaComercial) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-consulta-cheque"
					java.lang.String tempAttribDataConsultaCheque =

					reader.getAttributeValue(null, "data-consulta-cheque");

					if (tempAttribDataConsultaCheque != null) {
						java.lang.String content = tempAttribDataConsultaCheque;

						object.setDataConsultaCheque(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaCheque));

					} else {

					}
					handledAttributes.add("data-consulta-cheque");

					// handle attribute "nome-empresa-consultante"
					java.lang.String tempAttribNomeEmpresaConsultante =

					reader.getAttributeValue(null, "nome-empresa-consultante");

					if (tempAttribNomeEmpresaConsultante != null) {
						java.lang.String content = tempAttribNomeEmpresaConsultante;

						object.setNomeEmpresaConsultante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeEmpresaConsultante));

					} else {

					}
					handledAttributes.add("nome-empresa-consultante");

					// handle attribute "ordem-consulta"
					java.lang.String tempAttribOrdemConsulta =

					reader.getAttributeValue(null, "ordem-consulta");

					if (tempAttribOrdemConsulta != null) {
						java.lang.String content = tempAttribOrdemConsulta;

						object.setOrdemConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribOrdemConsulta));

					} else {

						object.setOrdemConsulta(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("ordem-consulta");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoDividaVencida implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Divida-Vencida Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for Moeda
		 */

		protected Moeda localMoeda;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMoedaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Moeda
		 */
		public Moeda getMoeda() {
			return localMoeda;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Moeda
		 */
		public void setMoeda(Moeda param) {

			if (param != null) {
				// update the setting tracker
				localMoedaTracker = true;
			} else {
				localMoedaTracker = false;

			}

			this.localMoeda = param;

		}

		/**
		 * field for Subjudice
		 */

		protected Subjudice localSubjudice;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSubjudiceTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Subjudice
		 */
		public Subjudice getSubjudice() {
			return localSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Subjudice
		 */
		public void setSubjudice(Subjudice param) {

			if (param != null) {
				// update the setting tracker
				localSubjudiceTracker = true;
			} else {
				localSubjudiceTracker = false;

			}

			this.localSubjudice = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for InstituicaoFinanceira This was an Attribute!
		 */

		protected java.lang.String localInstituicaoFinanceira;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getInstituicaoFinanceira() {
			return localInstituicaoFinanceira;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            InstituicaoFinanceira
		 */
		public void setInstituicaoFinanceira(java.lang.String param) {

			this.localInstituicaoFinanceira = param;

		}

		/**
		 * field for Local This was an Attribute!
		 */

		protected java.lang.String localLocal;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getLocal() {
			return localLocal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Local
		 */
		public void setLocal(java.lang.String param) {

			this.localLocal = param;

		}

		/**
		 * field for Modalidade This was an Attribute!
		 */

		protected java.lang.String localModalidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getModalidade() {
			return localModalidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Modalidade
		 */
		public void setModalidade(java.lang.String param) {

			this.localModalidade = param;

		}

		/**
		 * field for Titulo This was an Attribute!
		 */

		protected java.lang.String localTitulo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTitulo() {
			return localTitulo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Titulo
		 */
		public void setTitulo(java.lang.String param) {

			this.localTitulo = param;

		}

		/**
		 * field for ValorDivida This was an Attribute!
		 */

		protected java.math.BigDecimal localValorDivida;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorDivida() {
			return localValorDivida;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorDivida
		 */
		public void setValorDivida(java.math.BigDecimal param) {

			this.localValorDivida = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoDividaVencida.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Divida-Vencida",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Divida-Vencida", xmlWriter);
				}

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localInstituicaoFinanceira != null) {

				writeAttribute("", "instituicao-financeira",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInstituicaoFinanceira),
						xmlWriter);

			}

			if (localLocal != null) {

				writeAttribute("", "local",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localLocal), xmlWriter);

			}

			if (localModalidade != null) {

				writeAttribute("", "modalidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localModalidade), xmlWriter);

			}

			if (localTitulo != null) {

				writeAttribute("", "titulo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTitulo), xmlWriter);

			}

			if (localValorDivida != null) {

				writeAttribute("", "valor-divida",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorDivida), xmlWriter);

			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			if (localMoedaTracker) {
				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				localMoeda.serialize(
						new javax.xml.namespace.QName("", "moeda"), factory,
						xmlWriter);
			}
			if (localSubjudiceTracker) {
				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				localSubjudice.serialize(new javax.xml.namespace.QName("",
						"subjudice"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			if (localMoedaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "moeda"));

				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				elementList.add(localMoeda);
			}
			if (localSubjudiceTracker) {
				elementList.add(new javax.xml.namespace.QName("", "subjudice"));

				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				elementList.add(localSubjudice);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("",
					"instituicao-financeira"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInstituicaoFinanceira));

			attribList.add(new javax.xml.namespace.QName("", "local"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localLocal));

			attribList.add(new javax.xml.namespace.QName("", "modalidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localModalidade));

			attribList.add(new javax.xml.namespace.QName("", "titulo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTitulo));

			attribList.add(new javax.xml.namespace.QName("", "valor-divida"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorDivida));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoDividaVencida parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoDividaVencida object = new InsumoDividaVencida();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Divida-Vencida".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoDividaVencida) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "instituicao-financeira"
					java.lang.String tempAttribInstituicaoFinanceira =

					reader.getAttributeValue(null, "instituicao-financeira");

					if (tempAttribInstituicaoFinanceira != null) {
						java.lang.String content = tempAttribInstituicaoFinanceira;

						object.setInstituicaoFinanceira(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInstituicaoFinanceira));

					} else {

					}
					handledAttributes.add("instituicao-financeira");

					// handle attribute "local"
					java.lang.String tempAttribLocal =

					reader.getAttributeValue(null, "local");

					if (tempAttribLocal != null) {
						java.lang.String content = tempAttribLocal;

						object.setLocal(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribLocal));

					} else {

					}
					handledAttributes.add("local");

					// handle attribute "modalidade"
					java.lang.String tempAttribModalidade =

					reader.getAttributeValue(null, "modalidade");

					if (tempAttribModalidade != null) {
						java.lang.String content = tempAttribModalidade;

						object.setModalidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribModalidade));

					} else {

					}
					handledAttributes.add("modalidade");

					// handle attribute "titulo"
					java.lang.String tempAttribTitulo =

					reader.getAttributeValue(null, "titulo");

					if (tempAttribTitulo != null) {
						java.lang.String content = tempAttribTitulo;

						object.setTitulo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTitulo));

					} else {

					}
					handledAttributes.add("titulo");

					// handle attribute "valor-divida"
					java.lang.String tempAttribValorDivida =

					reader.getAttributeValue(null, "valor-divida");

					if (tempAttribValorDivida != null) {
						java.lang.String content = tempAttribValorDivida;

						object.setValorDivida(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorDivida));

					} else {

					}
					handledAttributes.add("valor-divida");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "moeda")
									.equals(reader.getName())) {

						object.setMoeda(Moeda.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "subjudice")
									.equals(reader.getName())) {

						object.setSubjudice(Subjudice.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoQuadroSocietario implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Quadro-Societario Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Nacionalidade
		 */

		protected Pais localNacionalidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNacionalidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Pais
		 */
		public Pais getNacionalidade() {
			return localNacionalidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nacionalidade
		 */
		public void setNacionalidade(Pais param) {

			if (param != null) {
				// update the setting tracker
				localNacionalidadeTracker = true;
			} else {
				localNacionalidadeTracker = false;

			}

			this.localNacionalidade = param;

		}

		/**
		 * field for EstadoEMBRATEL
		 */

		protected Estado localEstadoEMBRATEL;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEstadoEMBRATELTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Estado
		 */
		public Estado getEstadoEMBRATEL() {
			return localEstadoEMBRATEL;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EstadoEMBRATEL
		 */
		public void setEstadoEMBRATEL(Estado param) {

			if (param != null) {
				// update the setting tracker
				localEstadoEMBRATELTracker = true;
			} else {
				localEstadoEMBRATELTracker = false;

			}

			this.localEstadoEMBRATEL = param;

		}

		/**
		 * field for CargoAdministracao This was an Attribute!
		 */

		protected java.lang.String localCargoAdministracao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCargoAdministracao() {
			return localCargoAdministracao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CargoAdministracao
		 */
		public void setCargoAdministracao(java.lang.String param) {

			this.localCargoAdministracao = param;

		}

		/**
		 * field for CargoDirecao This was an Attribute!
		 */

		protected java.lang.String localCargoDirecao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCargoDirecao() {
			return localCargoDirecao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CargoDirecao
		 */
		public void setCargoDirecao(java.lang.String param) {

			this.localCargoDirecao = param;

		}

		/**
		 * field for Condicao This was an Attribute!
		 */

		protected java.lang.String localCondicao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCondicao() {
			return localCondicao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Condicao
		 */
		public void setCondicao(java.lang.String param) {

			this.localCondicao = param;

		}

		/**
		 * field for DataEntrada This was an Attribute!
		 */

		protected java.util.Calendar localDataEntrada;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataEntrada() {
			return localDataEntrada;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataEntrada
		 */
		public void setDataEntrada(java.util.Calendar param) {

			this.localDataEntrada = param;

		}

		/**
		 * field for DataSaida This was an Attribute!
		 */

		protected java.util.Calendar localDataSaida;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataSaida() {
			return localDataSaida;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataSaida
		 */
		public void setDataSaida(java.util.Calendar param) {

			this.localDataSaida = param;

		}

		/**
		 * field for Documento This was an Attribute!
		 */

		protected java.lang.String localDocumento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDocumento() {
			return localDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Documento
		 */
		public void setDocumento(java.lang.String param) {

			this.localDocumento = param;

		}

		/**
		 * field for IndicadorRestricao This was an Attribute!
		 */

		protected boolean localIndicadorRestricao;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getIndicadorRestricao() {
			return localIndicadorRestricao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            IndicadorRestricao
		 */
		public void setIndicadorRestricao(boolean param) {

			this.localIndicadorRestricao = param;

		}

		/**
		 * field for MunicipioEMBRATEL This was an Attribute!
		 */

		protected java.lang.String localMunicipioEMBRATEL;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMunicipioEMBRATEL() {
			return localMunicipioEMBRATEL;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MunicipioEMBRATEL
		 */
		public void setMunicipioEMBRATEL(java.lang.String param) {

			this.localMunicipioEMBRATEL = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * field for PorcentualParticipacao This was an Attribute!
		 */

		protected java.math.BigDecimal localPorcentualParticipacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getPorcentualParticipacao() {
			return localPorcentualParticipacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PorcentualParticipacao
		 */
		public void setPorcentualParticipacao(java.math.BigDecimal param) {

			this.localPorcentualParticipacao = param;

		}

		/**
		 * field for SituacaoDocumento This was an Attribute!
		 */

		protected java.lang.String localSituacaoDocumento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getSituacaoDocumento() {
			return localSituacaoDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SituacaoDocumento
		 */
		public void setSituacaoDocumento(java.lang.String param) {

			this.localSituacaoDocumento = param;

		}

		/**
		 * field for TipoRelacionamento This was an Attribute!
		 */

		protected java.lang.String localTipoRelacionamento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTipoRelacionamento() {
			return localTipoRelacionamento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoRelacionamento
		 */
		public void setTipoRelacionamento(java.lang.String param) {

			this.localTipoRelacionamento = param;

		}

		/**
		 * field for DataUltimaAtualizacao This was an Attribute!
		 */

		protected java.util.Calendar localDataUltimaAtualizacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataUltimaAtualizacao() {
			return localDataUltimaAtualizacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataUltimaAtualizacao
		 */
		public void setDataUltimaAtualizacao(java.util.Calendar param) {

			this.localDataUltimaAtualizacao = param;

		}

		/**
		 * field for ValorParticipacao This was an Attribute!
		 */

		protected java.math.BigDecimal localValorParticipacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorParticipacao() {
			return localValorParticipacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorParticipacao
		 */
		public void setValorParticipacao(java.math.BigDecimal param) {

			this.localValorParticipacao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoQuadroSocietario.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Quadro-Societario", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Quadro-Societario", xmlWriter);
				}

			}

			if (localCargoAdministracao != null) {

				writeAttribute("", "cargo-administracao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCargoAdministracao),
						xmlWriter);

			}

			if (localCargoDirecao != null) {

				writeAttribute("", "cargo-direcao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCargoDirecao), xmlWriter);

			}

			if (localCondicao != null) {

				writeAttribute("", "condicao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCondicao), xmlWriter);

			}

			if (localDataEntrada != null) {

				writeAttribute("", "data-entrada",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataEntrada), xmlWriter);

			}

			if (localDataSaida != null) {

				writeAttribute("", "data-saida",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataSaida), xmlWriter);

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}

			if (true) {

				writeAttribute("", "indicador-restricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localIndicadorRestricao),
						xmlWriter);

			}

			if (localMunicipioEMBRATEL != null) {

				writeAttribute("", "municipio-EMBRATEL",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMunicipioEMBRATEL),
						xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localPorcentualParticipacao != null) {

				writeAttribute("", "porcentual-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPorcentualParticipacao),
						xmlWriter);

			}

			if (localSituacaoDocumento != null) {

				writeAttribute("", "situacao-documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localSituacaoDocumento),
						xmlWriter);

			}

			if (localTipoRelacionamento != null) {

				writeAttribute("", "tipo-relacionamento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTipoRelacionamento),
						xmlWriter);

			}

			if (localDataUltimaAtualizacao != null) {

				writeAttribute("", "data-ultima-atualizacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimaAtualizacao),
						xmlWriter);

			}

			if (localValorParticipacao != null) {

				writeAttribute("", "valor-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorParticipacao),
						xmlWriter);

			}
			if (localNacionalidadeTracker) {
				if (localNacionalidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"nacionalidade cannot be null!!");
				}
				localNacionalidade.serialize(new javax.xml.namespace.QName("",
						"nacionalidade"), factory, xmlWriter);
			}
			if (localEstadoEMBRATELTracker) {
				if (localEstadoEMBRATEL == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-EMBRATEL cannot be null!!");
				}
				localEstadoEMBRATEL.serialize(new javax.xml.namespace.QName("",
						"estado-EMBRATEL"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localNacionalidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"nacionalidade"));

				if (localNacionalidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"nacionalidade cannot be null!!");
				}
				elementList.add(localNacionalidade);
			}
			if (localEstadoEMBRATELTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"estado-EMBRATEL"));

				if (localEstadoEMBRATEL == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-EMBRATEL cannot be null!!");
				}
				elementList.add(localEstadoEMBRATEL);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"cargo-administracao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCargoAdministracao));

			attribList.add(new javax.xml.namespace.QName("", "cargo-direcao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCargoDirecao));

			attribList.add(new javax.xml.namespace.QName("", "condicao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCondicao));

			attribList.add(new javax.xml.namespace.QName("", "data-entrada"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataEntrada));

			attribList.add(new javax.xml.namespace.QName("", "data-saida"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataSaida));

			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			attribList.add(new javax.xml.namespace.QName("",
					"indicador-restricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localIndicadorRestricao));

			attribList.add(new javax.xml.namespace.QName("",
					"municipio-EMBRATEL"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMunicipioEMBRATEL));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("",
					"porcentual-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPorcentualParticipacao));

			attribList.add(new javax.xml.namespace.QName("",
					"situacao-documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localSituacaoDocumento));

			attribList.add(new javax.xml.namespace.QName("",
					"tipo-relacionamento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTipoRelacionamento));

			attribList.add(new javax.xml.namespace.QName("",
					"data-ultima-atualizacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimaAtualizacao));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorParticipacao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoQuadroSocietario parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoQuadroSocietario object = new InsumoQuadroSocietario();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Quadro-Societario".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoQuadroSocietario) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "cargo-administracao"
					java.lang.String tempAttribCargoAdministracao =

					reader.getAttributeValue(null, "cargo-administracao");

					if (tempAttribCargoAdministracao != null) {
						java.lang.String content = tempAttribCargoAdministracao;

						object.setCargoAdministracao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCargoAdministracao));

					} else {

					}
					handledAttributes.add("cargo-administracao");

					// handle attribute "cargo-direcao"
					java.lang.String tempAttribCargoDirecao =

					reader.getAttributeValue(null, "cargo-direcao");

					if (tempAttribCargoDirecao != null) {
						java.lang.String content = tempAttribCargoDirecao;

						object.setCargoDirecao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCargoDirecao));

					} else {

					}
					handledAttributes.add("cargo-direcao");

					// handle attribute "condicao"
					java.lang.String tempAttribCondicao =

					reader.getAttributeValue(null, "condicao");

					if (tempAttribCondicao != null) {
						java.lang.String content = tempAttribCondicao;

						object.setCondicao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCondicao));

					} else {

					}
					handledAttributes.add("condicao");

					// handle attribute "data-entrada"
					java.lang.String tempAttribDataEntrada =

					reader.getAttributeValue(null, "data-entrada");

					if (tempAttribDataEntrada != null) {
						java.lang.String content = tempAttribDataEntrada;

						object.setDataEntrada(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataEntrada));

					} else {

					}
					handledAttributes.add("data-entrada");

					// handle attribute "data-saida"
					java.lang.String tempAttribDataSaida =

					reader.getAttributeValue(null, "data-saida");

					if (tempAttribDataSaida != null) {
						java.lang.String content = tempAttribDataSaida;

						object.setDataSaida(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataSaida));

					} else {

					}
					handledAttributes.add("data-saida");

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					// handle attribute "indicador-restricao"
					java.lang.String tempAttribIndicadorRestricao =

					reader.getAttributeValue(null, "indicador-restricao");

					if (tempAttribIndicadorRestricao != null) {
						java.lang.String content = tempAttribIndicadorRestricao;

						object.setIndicadorRestricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribIndicadorRestricao));

					} else {

					}
					handledAttributes.add("indicador-restricao");

					// handle attribute "municipio-EMBRATEL"
					java.lang.String tempAttribMunicipioEMBRATEL =

					reader.getAttributeValue(null, "municipio-EMBRATEL");

					if (tempAttribMunicipioEMBRATEL != null) {
						java.lang.String content = tempAttribMunicipioEMBRATEL;

						object.setMunicipioEMBRATEL(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMunicipioEMBRATEL));

					} else {

					}
					handledAttributes.add("municipio-EMBRATEL");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "porcentual-participacao"
					java.lang.String tempAttribPorcentualParticipacao =

					reader.getAttributeValue(null, "porcentual-participacao");

					if (tempAttribPorcentualParticipacao != null) {
						java.lang.String content = tempAttribPorcentualParticipacao;

						object.setPorcentualParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribPorcentualParticipacao));

					} else {

					}
					handledAttributes.add("porcentual-participacao");

					// handle attribute "situacao-documento"
					java.lang.String tempAttribSituacaoDocumento =

					reader.getAttributeValue(null, "situacao-documento");

					if (tempAttribSituacaoDocumento != null) {
						java.lang.String content = tempAttribSituacaoDocumento;

						object.setSituacaoDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribSituacaoDocumento));

					} else {

					}
					handledAttributes.add("situacao-documento");

					// handle attribute "tipo-relacionamento"
					java.lang.String tempAttribTipoRelacionamento =

					reader.getAttributeValue(null, "tipo-relacionamento");

					if (tempAttribTipoRelacionamento != null) {
						java.lang.String content = tempAttribTipoRelacionamento;

						object.setTipoRelacionamento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTipoRelacionamento));

					} else {

					}
					handledAttributes.add("tipo-relacionamento");

					// handle attribute "data-ultima-atualizacao"
					java.lang.String tempAttribDataUltimaAtualizacao =

					reader.getAttributeValue(null, "data-ultima-atualizacao");

					if (tempAttribDataUltimaAtualizacao != null) {
						java.lang.String content = tempAttribDataUltimaAtualizacao;

						object.setDataUltimaAtualizacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimaAtualizacao));

					} else {

					}
					handledAttributes.add("data-ultima-atualizacao");

					// handle attribute "valor-participacao"
					java.lang.String tempAttribValorParticipacao =

					reader.getAttributeValue(null, "valor-participacao");

					if (tempAttribValorParticipacao != null) {
						java.lang.String content = tempAttribValorParticipacao;

						object.setValorParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorParticipacao));

					} else {

					}
					handledAttributes.add("valor-participacao");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"nacionalidade").equals(reader.getName())) {

						object.setNacionalidade(Pais.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"estado-EMBRATEL").equals(reader.getName())) {

						object.setEstadoEMBRATEL(Estado.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoPendenciaFinanceira implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Pendencia-Financeira Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Moeda
		 */

		protected Moeda localMoeda;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMoedaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Moeda
		 */
		public Moeda getMoeda() {
			return localMoeda;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Moeda
		 */
		public void setMoeda(Moeda param) {

			if (param != null) {
				// update the setting tracker
				localMoedaTracker = true;
			} else {
				localMoedaTracker = false;

			}

			this.localMoeda = param;

		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for Subjudice
		 */

		protected Subjudice localSubjudice;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSubjudiceTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Subjudice
		 */
		public Subjudice getSubjudice() {
			return localSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Subjudice
		 */
		public void setSubjudice(Subjudice param) {

			if (param != null) {
				// update the setting tracker
				localSubjudiceTracker = true;
			} else {
				localSubjudiceTracker = false;

			}

			this.localSubjudice = param;

		}

		/**
		 * field for Cidade
		 */

		protected Cidade localCidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidade() {
			return localCidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cidade
		 */
		public void setCidade(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeTracker = true;
			} else {
				localCidadeTracker = false;

			}

			this.localCidade = param;

		}

		/**
		 * field for Avalista This was an Attribute!
		 */

		protected boolean localAvalista;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getAvalista() {
			return localAvalista;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Avalista
		 */
		public void setAvalista(boolean param) {

			this.localAvalista = param;

		}

		/**
		 * field for Contrato This was an Attribute!
		 */

		protected java.lang.String localContrato;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getContrato() {
			return localContrato;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Contrato
		 */
		public void setContrato(java.lang.String param) {

			this.localContrato = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for Filial This was an Attribute!
		 */

		protected java.lang.String localFilial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getFilial() {
			return localFilial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Filial
		 */
		public void setFilial(java.lang.String param) {

			this.localFilial = param;

		}

		/**
		 * field for IndicadorSubjudice This was an Attribute!
		 */

		protected boolean localIndicadorSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getIndicadorSubjudice() {
			return localIndicadorSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            IndicadorSubjudice
		 */
		public void setIndicadorSubjudice(boolean param) {

			this.localIndicadorSubjudice = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * field for TituloOcorrencia This was an Attribute!
		 */

		protected java.lang.String localTituloOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTituloOcorrencia() {
			return localTituloOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TituloOcorrencia
		 */
		public void setTituloOcorrencia(java.lang.String param) {

			this.localTituloOcorrencia = param;

		}

		/**
		 * field for ValorPendencia This was an Attribute!
		 */

		protected java.math.BigDecimal localValorPendencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorPendencia() {
			return localValorPendencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorPendencia
		 */
		public void setValorPendencia(java.math.BigDecimal param) {

			this.localValorPendencia = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoPendenciaFinanceira.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Pendencia-Financeira", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Pendencia-Financeira", xmlWriter);
				}

			}

			if (true) {

				writeAttribute("", "avalista",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localAvalista), xmlWriter);

			}

			if (localContrato != null) {

				writeAttribute("", "contrato",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localContrato), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localFilial != null) {

				writeAttribute("", "filial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFilial), xmlWriter);

			}

			if (true) {

				writeAttribute("", "indicador-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localIndicadorSubjudice),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localTituloOcorrencia != null) {

				writeAttribute("", "titulo-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTituloOcorrencia),
						xmlWriter);

			}

			if (localValorPendencia != null) {

				writeAttribute("", "valor-pendencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorPendencia),
						xmlWriter);

			}
			if (localMoedaTracker) {
				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				localMoeda.serialize(
						new javax.xml.namespace.QName("", "moeda"), factory,
						xmlWriter);
			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			if (localSubjudiceTracker) {
				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				localSubjudice.serialize(new javax.xml.namespace.QName("",
						"subjudice"), factory, xmlWriter);
			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localMoedaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "moeda"));

				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				elementList.add(localMoeda);
			}
			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			if (localSubjudiceTracker) {
				elementList.add(new javax.xml.namespace.QName("", "subjudice"));

				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				elementList.add(localSubjudice);
			}
			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			attribList.add(new javax.xml.namespace.QName("", "avalista"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localAvalista));

			attribList.add(new javax.xml.namespace.QName("", "contrato"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localContrato));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "filial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFilial));

			attribList.add(new javax.xml.namespace.QName("",
					"indicador-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localIndicadorSubjudice));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("",
					"titulo-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTituloOcorrencia));

			attribList
					.add(new javax.xml.namespace.QName("", "valor-pendencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorPendencia));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoPendenciaFinanceira parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoPendenciaFinanceira object = new InsumoPendenciaFinanceira();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Pendencia-Financeira".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoPendenciaFinanceira) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "avalista"
					java.lang.String tempAttribAvalista =

					reader.getAttributeValue(null, "avalista");

					if (tempAttribAvalista != null) {
						java.lang.String content = tempAttribAvalista;

						object.setAvalista(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribAvalista));

					} else {

					}
					handledAttributes.add("avalista");

					// handle attribute "contrato"
					java.lang.String tempAttribContrato =

					reader.getAttributeValue(null, "contrato");

					if (tempAttribContrato != null) {
						java.lang.String content = tempAttribContrato;

						object.setContrato(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribContrato));

					} else {

					}
					handledAttributes.add("contrato");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "filial"
					java.lang.String tempAttribFilial =

					reader.getAttributeValue(null, "filial");

					if (tempAttribFilial != null) {
						java.lang.String content = tempAttribFilial;

						object.setFilial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribFilial));

					} else {

					}
					handledAttributes.add("filial");

					// handle attribute "indicador-subjudice"
					java.lang.String tempAttribIndicadorSubjudice =

					reader.getAttributeValue(null, "indicador-subjudice");

					if (tempAttribIndicadorSubjudice != null) {
						java.lang.String content = tempAttribIndicadorSubjudice;

						object.setIndicadorSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribIndicadorSubjudice));

					} else {

					}
					handledAttributes.add("indicador-subjudice");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "titulo-ocorrencia"
					java.lang.String tempAttribTituloOcorrencia =

					reader.getAttributeValue(null, "titulo-ocorrencia");

					if (tempAttribTituloOcorrencia != null) {
						java.lang.String content = tempAttribTituloOcorrencia;

						object.setTituloOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTituloOcorrencia));

					} else {

					}
					handledAttributes.add("titulo-ocorrencia");

					// handle attribute "valor-pendencia"
					java.lang.String tempAttribValorPendencia =

					reader.getAttributeValue(null, "valor-pendencia");

					if (tempAttribValorPendencia != null) {
						java.lang.String content = tempAttribValorPendencia;

						object.setValorPendencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorPendencia));

					} else {

					}
					handledAttributes.add("valor-pendencia");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "moeda")
									.equals(reader.getName())) {

						object.setMoeda(Moeda.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "subjudice")
									.equals(reader.getName())) {

						object.setSubjudice(Subjudice.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Banco implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Banco Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Codigo This was an Attribute!
		 */

		protected int localCodigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(int param) {

			this.localCodigo = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Banco.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Banco", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Banco", xmlWriter);
				}

			}

			if (localCodigo != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "codigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigo), xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "codigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigo));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Banco parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Banco object = new Banco();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Banco".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Banco) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "codigo"
					java.lang.String tempAttribCodigo =

					reader.getAttributeValue(null, "codigo");

					if (tempAttribCodigo != null) {
						java.lang.String content = tempAttribCodigo;

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribCodigo));

					} else {

						object.setCodigo(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("codigo");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Pais implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name = Pais
		 * Namespace URI = http://webservice.consulta.spcjava.spcbrasil.org/
		 * Namespace Prefix = ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Pais.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Pais", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Pais", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Pais parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Pais object = new Pais();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Pais".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Pais) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Alinea implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Alinea Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Codigo This was an Attribute!
		 */

		protected long localCodigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(long param) {

			this.localCodigo = param;

		}

		/**
		 * field for Descricao This was an Attribute!
		 */

		protected java.lang.String localDescricao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricao() {
			return localDescricao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Descricao
		 */
		public void setDescricao(java.lang.String param) {

			this.localDescricao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Alinea.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Alinea", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Alinea", xmlWriter);
				}

			}

			if (localCodigo != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "codigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigo), xmlWriter);

			}

			if (localDescricao != null) {

				writeAttribute("", "descricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricao), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "codigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigo));

			attribList.add(new javax.xml.namespace.QName("", "descricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Alinea parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Alinea object = new Alinea();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Alinea".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Alinea) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "codigo"
					java.lang.String tempAttribCodigo =

					reader.getAttributeValue(null, "codigo");

					if (tempAttribCodigo != null) {
						java.lang.String content = tempAttribCodigo;

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribCodigo));

					} else {

						object.setCodigo(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("codigo");

					// handle attribute "descricao"
					java.lang.String tempAttribDescricao =

					reader.getAttributeValue(null, "descricao");

					if (tempAttribDescricao != null) {
						java.lang.String content = tempAttribDescricao;

						object.setDescricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricao));

					} else {

					}
					handledAttributes.add("descricao");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class EnderecoOcorrenciaConsumidor extends Endereco implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Endereco-Ocorrencia-Consumidor Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					EnderecoOcorrenciaConsumidor.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Endereco-Ocorrencia-Consumidor",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Endereco-Ocorrencia-Consumidor", xmlWriter);
			}

			if (localLogradouro != null) {

				writeAttribute("", "logradouro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localLogradouro), xmlWriter);

			}

			if (localNumero != null) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localComplemento != null) {

				writeAttribute("", "complemento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localComplemento), xmlWriter);

			}

			if (localBairro != null) {

				writeAttribute("", "bairro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localBairro), xmlWriter);

			}

			if (localCep != null) {
				writeAttribute("", "cep", localCep.toString(), xmlWriter);
			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Endereco-Ocorrencia-Consumidor"));
			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			attribList.add(new javax.xml.namespace.QName("", "logradouro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localLogradouro));

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "complemento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localComplemento));

			attribList.add(new javax.xml.namespace.QName("", "bairro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localBairro));

			attribList.add(new javax.xml.namespace.QName("", "cep"));

			attribList.add(localCep.toString());

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static EnderecoOcorrenciaConsumidor parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				EnderecoOcorrenciaConsumidor object = new EnderecoOcorrenciaConsumidor();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Endereco-Ocorrencia-Consumidor".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (EnderecoOcorrenciaConsumidor) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "logradouro"
					java.lang.String tempAttribLogradouro =

					reader.getAttributeValue(null, "logradouro");

					if (tempAttribLogradouro != null) {
						java.lang.String content = tempAttribLogradouro;

						object.setLogradouro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribLogradouro));

					} else {

					}
					handledAttributes.add("logradouro");

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumero));

					} else {

					}
					handledAttributes.add("numero");

					// handle attribute "complemento"
					java.lang.String tempAttribComplemento =

					reader.getAttributeValue(null, "complemento");

					if (tempAttribComplemento != null) {
						java.lang.String content = tempAttribComplemento;

						object.setComplemento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribComplemento));

					} else {

					}
					handledAttributes.add("complemento");

					// handle attribute "bairro"
					java.lang.String tempAttribBairro =

					reader.getAttributeValue(null, "bairro");

					if (tempAttribBairro != null) {
						java.lang.String content = tempAttribBairro;

						object.setBairro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribBairro));

					} else {

					}
					handledAttributes.add("bairro");

					// handle attribute "cep"
					java.lang.String tempAttribCep =

					reader.getAttributeValue(null, "cep");

					if (tempAttribCep != null) {
						java.lang.String content = tempAttribCep;

						object.setCep(Cep.Factory.fromString(reader,
								tempAttribCep));

					} else {

					}
					handledAttributes.add("cep");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class TipoDocumentoAlerta implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Tipo-Documento-Alerta Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					TipoDocumentoAlerta.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Tipo-Documento-Alerta",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Tipo-Documento-Alerta", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static TipoDocumentoAlerta parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				TipoDocumentoAlerta object = new TipoDocumentoAlerta();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Tipo-Documento-Alerta".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (TipoDocumentoAlerta) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContraOrdemAgenciaContaDiferente extends
			InsumoContraOrdemDocumentoDiferente implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contra-Ordem-Agencia-Conta-Diferente Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContraOrdemAgenciaContaDiferente.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute(
						"xsi",
						"http://www.w3.org/2001/XMLSchema-instance",
						"type",
						namespacePrefix
								+ ":Insumo-Contra-Ordem-Agencia-Conta-Diferente",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Contra-Ordem-Agencia-Conta-Diferente",
						xmlWriter);
			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localInformante != null) {

				writeAttribute("", "informante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInformante), xmlWriter);

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}
			if (localMotivoTracker) {
				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				localMotivo.serialize(new javax.xml.namespace.QName("",
						"motivo"), factory, xmlWriter);
			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Contra-Ordem-Agencia-Conta-Diferente"));
			if (localMotivoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "motivo"));

				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				elementList.add(localMotivo);
			}
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("", "informante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInformante));

			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContraOrdemAgenciaContaDiferente parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContraOrdemAgenciaContaDiferente object = new InsumoContraOrdemAgenciaContaDiferente();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contra-Ordem-Agencia-Conta-Diferente"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContraOrdemAgenciaContaDiferente) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "informante"
					java.lang.String tempAttribInformante =

					reader.getAttributeValue(null, "informante");

					if (tempAttribInformante != null) {
						java.lang.String content = tempAttribInformante;

						object.setInformante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInformante));

					} else {

					}
					handledAttributes.add("informante");

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "motivo")
									.equals(reader.getName())) {

						object.setMotivo(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(ChequeContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(ChequeFinal.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoRegistroConsultas implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Registro-Consultas Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataConsulta This was an Attribute!
		 */

		protected java.util.Calendar localDataConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsulta() {
			return localDataConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsulta
		 */
		public void setDataConsulta(java.util.Calendar param) {

			this.localDataConsulta = param;

		}

		/**
		 * field for QuantidadeConsultaBanco This was an Attribute!
		 */

		protected int localQuantidadeConsultaBanco;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeConsultaBanco() {
			return localQuantidadeConsultaBanco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeConsultaBanco
		 */
		public void setQuantidadeConsultaBanco(int param) {

			this.localQuantidadeConsultaBanco = param;

		}

		/**
		 * field for QuantidadeConsultaEmpresa This was an Attribute!
		 */

		protected int localQuantidadeConsultaEmpresa;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeConsultaEmpresa() {
			return localQuantidadeConsultaEmpresa;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeConsultaEmpresa
		 */
		public void setQuantidadeConsultaEmpresa(int param) {

			this.localQuantidadeConsultaEmpresa = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoRegistroConsultas.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Registro-Consultas", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Registro-Consultas", xmlWriter);
				}

			}

			if (localDataConsulta != null) {

				writeAttribute("", "data-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsulta), xmlWriter);

			}

			if (localQuantidadeConsultaBanco != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-consulta-banco",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsultaBanco),
						xmlWriter);

			}

			if (localQuantidadeConsultaEmpresa != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"quantidade-consulta-empresa",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsultaEmpresa),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "data-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consulta-banco"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsultaBanco));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consulta-empresa"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsultaEmpresa));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoRegistroConsultas parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoRegistroConsultas object = new InsumoRegistroConsultas();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Registro-Consultas".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoRegistroConsultas) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-consulta"
					java.lang.String tempAttribDataConsulta =

					reader.getAttributeValue(null, "data-consulta");

					if (tempAttribDataConsulta != null) {
						java.lang.String content = tempAttribDataConsulta;

						object.setDataConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsulta));

					} else {

					}
					handledAttributes.add("data-consulta");

					// handle attribute "quantidade-consulta-banco"
					java.lang.String tempAttribQuantidadeConsultaBanco =

					reader.getAttributeValue(null, "quantidade-consulta-banco");

					if (tempAttribQuantidadeConsultaBanco != null) {
						java.lang.String content = tempAttribQuantidadeConsultaBanco;

						object.setQuantidadeConsultaBanco(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeConsultaBanco));

					} else {

						object.setQuantidadeConsultaBanco(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consulta-banco");

					// handle attribute "quantidade-consulta-empresa"
					java.lang.String tempAttribQuantidadeConsultaEmpresa =

					reader.getAttributeValue(null,
							"quantidade-consulta-empresa");

					if (tempAttribQuantidadeConsultaEmpresa != null) {
						java.lang.String content = tempAttribQuantidadeConsultaEmpresa;

						object.setQuantidadeConsultaEmpresa(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeConsultaEmpresa));

					} else {

						object.setQuantidadeConsultaEmpresa(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consulta-empresa");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoQuadroAdministrativo extends
			InsumoQuadroSocietario implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Quadro-Administrativo Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for EstadoCivil This was an Attribute!
		 */

		protected java.lang.String localEstadoCivil;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getEstadoCivil() {
			return localEstadoCivil;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EstadoCivil
		 */
		public void setEstadoCivil(java.lang.String param) {

			this.localEstadoCivil = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoQuadroAdministrativo.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Insumo-Quadro-Administrativo",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Quadro-Administrativo", xmlWriter);
			}

			if (localCargoAdministracao != null) {

				writeAttribute("", "cargo-administracao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCargoAdministracao),
						xmlWriter);

			}

			if (localCargoDirecao != null) {

				writeAttribute("", "cargo-direcao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCargoDirecao), xmlWriter);

			}

			if (localCondicao != null) {

				writeAttribute("", "condicao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCondicao), xmlWriter);

			}

			if (localDataEntrada != null) {

				writeAttribute("", "data-entrada",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataEntrada), xmlWriter);

			}

			if (localDataSaida != null) {

				writeAttribute("", "data-saida",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataSaida), xmlWriter);

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}

			if (true) {

				writeAttribute("", "indicador-restricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localIndicadorRestricao),
						xmlWriter);

			}

			if (localMunicipioEMBRATEL != null) {

				writeAttribute("", "municipio-EMBRATEL",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMunicipioEMBRATEL),
						xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localPorcentualParticipacao != null) {

				writeAttribute("", "porcentual-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPorcentualParticipacao),
						xmlWriter);

			}

			if (localSituacaoDocumento != null) {

				writeAttribute("", "situacao-documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localSituacaoDocumento),
						xmlWriter);

			}

			if (localTipoRelacionamento != null) {

				writeAttribute("", "tipo-relacionamento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTipoRelacionamento),
						xmlWriter);

			}

			if (localDataUltimaAtualizacao != null) {

				writeAttribute("", "data-ultima-atualizacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimaAtualizacao),
						xmlWriter);

			}

			if (localValorParticipacao != null) {

				writeAttribute("", "valor-participacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorParticipacao),
						xmlWriter);

			}

			if (localEstadoCivil != null) {

				writeAttribute("", "estado-civil",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localEstadoCivil), xmlWriter);

			}
			if (localNacionalidadeTracker) {
				if (localNacionalidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"nacionalidade cannot be null!!");
				}
				localNacionalidade.serialize(new javax.xml.namespace.QName("",
						"nacionalidade"), factory, xmlWriter);
			}
			if (localEstadoEMBRATELTracker) {
				if (localEstadoEMBRATEL == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-EMBRATEL cannot be null!!");
				}
				localEstadoEMBRATEL.serialize(new javax.xml.namespace.QName("",
						"estado-EMBRATEL"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Quadro-Administrativo"));
			if (localNacionalidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"nacionalidade"));

				if (localNacionalidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"nacionalidade cannot be null!!");
				}
				elementList.add(localNacionalidade);
			}
			if (localEstadoEMBRATELTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"estado-EMBRATEL"));

				if (localEstadoEMBRATEL == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado-EMBRATEL cannot be null!!");
				}
				elementList.add(localEstadoEMBRATEL);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"cargo-administracao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCargoAdministracao));

			attribList.add(new javax.xml.namespace.QName("", "cargo-direcao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCargoDirecao));

			attribList.add(new javax.xml.namespace.QName("", "condicao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCondicao));

			attribList.add(new javax.xml.namespace.QName("", "data-entrada"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataEntrada));

			attribList.add(new javax.xml.namespace.QName("", "data-saida"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataSaida));

			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			attribList.add(new javax.xml.namespace.QName("",
					"indicador-restricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localIndicadorRestricao));

			attribList.add(new javax.xml.namespace.QName("",
					"municipio-EMBRATEL"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMunicipioEMBRATEL));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("",
					"porcentual-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPorcentualParticipacao));

			attribList.add(new javax.xml.namespace.QName("",
					"situacao-documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localSituacaoDocumento));

			attribList.add(new javax.xml.namespace.QName("",
					"tipo-relacionamento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTipoRelacionamento));

			attribList.add(new javax.xml.namespace.QName("",
					"data-ultima-atualizacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimaAtualizacao));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-participacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorParticipacao));

			attribList.add(new javax.xml.namespace.QName("", "estado-civil"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localEstadoCivil));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoQuadroAdministrativo parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoQuadroAdministrativo object = new InsumoQuadroAdministrativo();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Quadro-Administrativo".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoQuadroAdministrativo) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "cargo-administracao"
					java.lang.String tempAttribCargoAdministracao =

					reader.getAttributeValue(null, "cargo-administracao");

					if (tempAttribCargoAdministracao != null) {
						java.lang.String content = tempAttribCargoAdministracao;

						object.setCargoAdministracao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCargoAdministracao));

					} else {

					}
					handledAttributes.add("cargo-administracao");

					// handle attribute "cargo-direcao"
					java.lang.String tempAttribCargoDirecao =

					reader.getAttributeValue(null, "cargo-direcao");

					if (tempAttribCargoDirecao != null) {
						java.lang.String content = tempAttribCargoDirecao;

						object.setCargoDirecao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCargoDirecao));

					} else {

					}
					handledAttributes.add("cargo-direcao");

					// handle attribute "condicao"
					java.lang.String tempAttribCondicao =

					reader.getAttributeValue(null, "condicao");

					if (tempAttribCondicao != null) {
						java.lang.String content = tempAttribCondicao;

						object.setCondicao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCondicao));

					} else {

					}
					handledAttributes.add("condicao");

					// handle attribute "data-entrada"
					java.lang.String tempAttribDataEntrada =

					reader.getAttributeValue(null, "data-entrada");

					if (tempAttribDataEntrada != null) {
						java.lang.String content = tempAttribDataEntrada;

						object.setDataEntrada(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataEntrada));

					} else {

					}
					handledAttributes.add("data-entrada");

					// handle attribute "data-saida"
					java.lang.String tempAttribDataSaida =

					reader.getAttributeValue(null, "data-saida");

					if (tempAttribDataSaida != null) {
						java.lang.String content = tempAttribDataSaida;

						object.setDataSaida(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataSaida));

					} else {

					}
					handledAttributes.add("data-saida");

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					// handle attribute "indicador-restricao"
					java.lang.String tempAttribIndicadorRestricao =

					reader.getAttributeValue(null, "indicador-restricao");

					if (tempAttribIndicadorRestricao != null) {
						java.lang.String content = tempAttribIndicadorRestricao;

						object.setIndicadorRestricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribIndicadorRestricao));

					} else {

					}
					handledAttributes.add("indicador-restricao");

					// handle attribute "municipio-EMBRATEL"
					java.lang.String tempAttribMunicipioEMBRATEL =

					reader.getAttributeValue(null, "municipio-EMBRATEL");

					if (tempAttribMunicipioEMBRATEL != null) {
						java.lang.String content = tempAttribMunicipioEMBRATEL;

						object.setMunicipioEMBRATEL(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMunicipioEMBRATEL));

					} else {

					}
					handledAttributes.add("municipio-EMBRATEL");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "porcentual-participacao"
					java.lang.String tempAttribPorcentualParticipacao =

					reader.getAttributeValue(null, "porcentual-participacao");

					if (tempAttribPorcentualParticipacao != null) {
						java.lang.String content = tempAttribPorcentualParticipacao;

						object.setPorcentualParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribPorcentualParticipacao));

					} else {

					}
					handledAttributes.add("porcentual-participacao");

					// handle attribute "situacao-documento"
					java.lang.String tempAttribSituacaoDocumento =

					reader.getAttributeValue(null, "situacao-documento");

					if (tempAttribSituacaoDocumento != null) {
						java.lang.String content = tempAttribSituacaoDocumento;

						object.setSituacaoDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribSituacaoDocumento));

					} else {

					}
					handledAttributes.add("situacao-documento");

					// handle attribute "tipo-relacionamento"
					java.lang.String tempAttribTipoRelacionamento =

					reader.getAttributeValue(null, "tipo-relacionamento");

					if (tempAttribTipoRelacionamento != null) {
						java.lang.String content = tempAttribTipoRelacionamento;

						object.setTipoRelacionamento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTipoRelacionamento));

					} else {

					}
					handledAttributes.add("tipo-relacionamento");

					// handle attribute "data-ultima-atualizacao"
					java.lang.String tempAttribDataUltimaAtualizacao =

					reader.getAttributeValue(null, "data-ultima-atualizacao");

					if (tempAttribDataUltimaAtualizacao != null) {
						java.lang.String content = tempAttribDataUltimaAtualizacao;

						object.setDataUltimaAtualizacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimaAtualizacao));

					} else {

					}
					handledAttributes.add("data-ultima-atualizacao");

					// handle attribute "valor-participacao"
					java.lang.String tempAttribValorParticipacao =

					reader.getAttributeValue(null, "valor-participacao");

					if (tempAttribValorParticipacao != null) {
						java.lang.String content = tempAttribValorParticipacao;

						object.setValorParticipacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorParticipacao));

					} else {

					}
					handledAttributes.add("valor-participacao");

					// handle attribute "estado-civil"
					java.lang.String tempAttribEstadoCivil =

					reader.getAttributeValue(null, "estado-civil");

					if (tempAttribEstadoCivil != null) {
						java.lang.String content = tempAttribEstadoCivil;

						object.setEstadoCivil(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribEstadoCivil));

					} else {

					}
					handledAttributes.add("estado-civil");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"nacionalidade").equals(reader.getName())) {

						object.setNacionalidade(Pais.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"estado-EMBRATEL").equals(reader.getName())) {

						object.setEstadoEMBRATEL(Estado.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoRelacionamentoMaisAntigoComFornecedores implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Relacionamento-Mais-Antigo-Com-Fornecedores Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataRelacionamentoMaisAntigo This was an Attribute!
		 */

		protected java.util.Calendar localDataRelacionamentoMaisAntigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataRelacionamentoMaisAntigo() {
			return localDataRelacionamentoMaisAntigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataRelacionamentoMaisAntigo
		 */
		public void setDataRelacionamentoMaisAntigo(java.util.Calendar param) {

			this.localDataRelacionamentoMaisAntigo = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoRelacionamentoMaisAntigoComFornecedores.this
							.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute(
							"xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type",
							namespacePrefix
									+ ":Insumo-Relacionamento-Mais-Antigo-Com-Fornecedores",
							xmlWriter);
				} else {
					writeAttribute(
							"xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type",
							"Insumo-Relacionamento-Mais-Antigo-Com-Fornecedores",
							xmlWriter);
				}

			}

			if (localDataRelacionamentoMaisAntigo != null) {

				writeAttribute(
						"",
						"data-relacionamento-mais-antigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataRelacionamentoMaisAntigo),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"data-relacionamento-mais-antigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataRelacionamentoMaisAntigo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoRelacionamentoMaisAntigoComFornecedores parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoRelacionamentoMaisAntigoComFornecedores object = new InsumoRelacionamentoMaisAntigoComFornecedores();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Relacionamento-Mais-Antigo-Com-Fornecedores"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoRelacionamentoMaisAntigoComFornecedores) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-relacionamento-mais-antigo"
					java.lang.String tempAttribDataRelacionamentoMaisAntigo =

					reader.getAttributeValue(null,
							"data-relacionamento-mais-antigo");

					if (tempAttribDataRelacionamentoMaisAntigo != null) {
						java.lang.String content = tempAttribDataRelacionamentoMaisAntigo;

						object.setDataRelacionamentoMaisAntigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataRelacionamentoMaisAntigo));

					} else {

					}
					handledAttributes.add("data-relacionamento-mais-antigo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class PessoaJuridica implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Pessoa-Juridica Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cnpj
		 */

		protected Cnpj localCnpj;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCnpjTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cnpj
		 */
		public Cnpj getCnpj() {
			return localCnpj;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cnpj
		 */
		public void setCnpj(Cnpj param) {

			if (param != null) {
				// update the setting tracker
				localCnpjTracker = true;
			} else {
				localCnpjTracker = false;

			}

			this.localCnpj = param;

		}

		/**
		 * field for SituacaoCnpj
		 */

		protected SituacaoDocumentoWS localSituacaoCnpj;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSituacaoCnpjTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return SituacaoDocumentoWS
		 */
		public SituacaoDocumentoWS getSituacaoCnpj() {
			return localSituacaoCnpj;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SituacaoCnpj
		 */
		public void setSituacaoCnpj(SituacaoDocumentoWS param) {

			if (param != null) {
				// update the setting tracker
				localSituacaoCnpjTracker = true;
			} else {
				localSituacaoCnpjTracker = false;

			}

			this.localSituacaoCnpj = param;

		}

		/**
		 * field for SituacaoInscricaoEstadual
		 */

		protected SituacaoDocumentoWS localSituacaoInscricaoEstadual;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSituacaoInscricaoEstadualTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return SituacaoDocumentoWS
		 */
		public SituacaoDocumentoWS getSituacaoInscricaoEstadual() {
			return localSituacaoInscricaoEstadual;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SituacaoInscricaoEstadual
		 */
		public void setSituacaoInscricaoEstadual(SituacaoDocumentoWS param) {

			if (param != null) {
				// update the setting tracker
				localSituacaoInscricaoEstadualTracker = true;
			} else {
				localSituacaoInscricaoEstadualTracker = false;

			}

			this.localSituacaoInscricaoEstadual = param;

		}

		/**
		 * field for Endereco
		 */

		protected Endereco localEndereco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Endereco
		 */
		public Endereco getEndereco() {
			return localEndereco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Endereco
		 */
		public void setEndereco(Endereco param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoTracker = true;
			} else {
				localEnderecoTracker = false;

			}

			this.localEndereco = param;

		}

		/**
		 * field for Telefone
		 */

		protected Telefone localTelefone;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefone() {
			return localTelefone;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Telefone
		 */
		public void setTelefone(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneTracker = true;
			} else {
				localTelefoneTracker = false;

			}

			this.localTelefone = param;

		}

		/**
		 * field for Fax
		 */

		protected Telefone localFax;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localFaxTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getFax() {
			return localFax;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Fax
		 */
		public void setFax(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localFaxTracker = true;
			} else {
				localFaxTracker = false;

			}

			this.localFax = param;

		}

		/**
		 * field for NaturezaJuridica
		 */

		protected NaturezaJuridica localNaturezaJuridica;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaJuridicaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaJuridica
		 */
		public NaturezaJuridica getNaturezaJuridica() {
			return localNaturezaJuridica;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaJuridica
		 */
		public void setNaturezaJuridica(NaturezaJuridica param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaJuridicaTracker = true;
			} else {
				localNaturezaJuridicaTracker = false;

			}

			this.localNaturezaJuridica = param;

		}

		/**
		 * field for AtividadeEconomicaPrincipal
		 */

		protected RamoAtividade localAtividadeEconomicaPrincipal;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAtividadeEconomicaPrincipalTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return RamoAtividade
		 */
		public RamoAtividade getAtividadeEconomicaPrincipal() {
			return localAtividadeEconomicaPrincipal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AtividadeEconomicaPrincipal
		 */
		public void setAtividadeEconomicaPrincipal(RamoAtividade param) {

			if (param != null) {
				// update the setting tracker
				localAtividadeEconomicaPrincipalTracker = true;
			} else {
				localAtividadeEconomicaPrincipalTracker = false;

			}

			this.localAtividadeEconomicaPrincipal = param;

		}

		/**
		 * field for AtividadeEconomicaSecundaria This was an Array!
		 */

		protected RamoAtividade[] localAtividadeEconomicaSecundaria;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAtividadeEconomicaSecundariaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return RamoAtividade[]
		 */
		public RamoAtividade[] getAtividadeEconomicaSecundaria() {
			return localAtividadeEconomicaSecundaria;
		}

		/**
		 * validate the array for AtividadeEconomicaSecundaria
		 */
		protected void validateAtividadeEconomicaSecundaria(
				RamoAtividade[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AtividadeEconomicaSecundaria
		 */
		public void setAtividadeEconomicaSecundaria(RamoAtividade[] param) {

			validateAtividadeEconomicaSecundaria(param);

			if (param != null) {
				// update the setting tracker
				localAtividadeEconomicaSecundariaTracker = true;
			} else {
				localAtividadeEconomicaSecundariaTracker = false;

			}

			this.localAtividadeEconomicaSecundaria = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            RamoAtividade
		 */
		public void addAtividadeEconomicaSecundaria(RamoAtividade param) {
			if (localAtividadeEconomicaSecundaria == null) {
				localAtividadeEconomicaSecundaria = new RamoAtividade[] {};
			}

			// update the setting tracker
			localAtividadeEconomicaSecundariaTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localAtividadeEconomicaSecundaria);
			list.add(param);
			this.localAtividadeEconomicaSecundaria = (RamoAtividade[]) list
					.toArray(new RamoAtividade[list.size()]);

		}

		/**
		 * field for DataFundacao This was an Attribute!
		 */

		protected java.util.Calendar localDataFundacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataFundacao() {
			return localDataFundacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataFundacao
		 */
		public void setDataFundacao(java.util.Calendar param) {

			this.localDataFundacao = param;

		}

		/**
		 * field for InscricaoEstadual This was an Attribute!
		 */

		protected long localInscricaoEstadual;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getInscricaoEstadual() {
			return localInscricaoEstadual;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            InscricaoEstadual
		 */
		public void setInscricaoEstadual(long param) {

			this.localInscricaoEstadual = param;

		}

		/**
		 * field for NomeComercial This was an Attribute!
		 */

		protected java.lang.String localNomeComercial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeComercial() {
			return localNomeComercial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeComercial
		 */
		public void setNomeComercial(java.lang.String param) {

			this.localNomeComercial = param;

		}

		/**
		 * field for NumeroNIRENIRC This was an Attribute!
		 */

		protected long localNumeroNIRENIRC;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getNumeroNIRENIRC() {
			return localNumeroNIRENIRC;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroNIRENIRC
		 */
		public void setNumeroNIRENIRC(long param) {

			this.localNumeroNIRENIRC = param;

		}

		/**
		 * field for RazaoSocial This was an Attribute!
		 */

		protected java.lang.String localRazaoSocial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getRazaoSocial() {
			return localRazaoSocial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RazaoSocial
		 */
		public void setRazaoSocial(java.lang.String param) {

			this.localRazaoSocial = param;

		}

		/**
		 * field for RazaoSocialAnterior This was an Attribute!
		 */

		protected java.lang.String localRazaoSocialAnterior;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getRazaoSocialAnterior() {
			return localRazaoSocialAnterior;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RazaoSocialAnterior
		 */
		public void setRazaoSocialAnterior(java.lang.String param) {

			this.localRazaoSocialAnterior = param;

		}

		/**
		 * field for ValorCapitalSocial This was an Attribute!
		 */

		protected java.math.BigDecimal localValorCapitalSocial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorCapitalSocial() {
			return localValorCapitalSocial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorCapitalSocial
		 */
		public void setValorCapitalSocial(java.math.BigDecimal param) {

			this.localValorCapitalSocial = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					PessoaJuridica.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Pessoa-Juridica",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Pessoa-Juridica", xmlWriter);
				}

			}

			if (localDataFundacao != null) {

				writeAttribute("", "data-fundacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataFundacao), xmlWriter);

			}

			if (localInscricaoEstadual != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "inscricao-estadual",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInscricaoEstadual),
						xmlWriter);

			}

			if (localNomeComercial != null) {

				writeAttribute("", "nome-comercial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeComercial), xmlWriter);

			}

			if (localNumeroNIRENIRC != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "numero-NIRE-NIRC",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroNIRENIRC),
						xmlWriter);

			}

			if (localRazaoSocial != null) {

				writeAttribute("", "razao-social",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRazaoSocial), xmlWriter);

			}

			if (localRazaoSocialAnterior != null) {

				writeAttribute("", "razao-social-anterior",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRazaoSocialAnterior),
						xmlWriter);

			}

			if (localValorCapitalSocial != null) {

				writeAttribute("", "valor-capital-social",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorCapitalSocial),
						xmlWriter);

			}
			if (localCnpjTracker) {
				if (localCnpj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cnpj cannot be null!!");
				}
				localCnpj.serialize(new javax.xml.namespace.QName("", "cnpj"),
						factory, xmlWriter);
			}
			if (localSituacaoCnpjTracker) {
				if (localSituacaoCnpj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"situacao-cnpj cannot be null!!");
				}
				localSituacaoCnpj.serialize(new javax.xml.namespace.QName("",
						"situacao-cnpj"), factory, xmlWriter);
			}
			if (localSituacaoInscricaoEstadualTracker) {
				if (localSituacaoInscricaoEstadual == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"situacao-inscricao-estadual cannot be null!!");
				}
				localSituacaoInscricaoEstadual.serialize(
						new javax.xml.namespace.QName("",
								"situacao-inscricao-estadual"), factory,
						xmlWriter);
			}
			if (localEnderecoTracker) {
				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				localEndereco.serialize(new javax.xml.namespace.QName("",
						"endereco"), factory, xmlWriter);
			}
			if (localTelefoneTracker) {
				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				localTelefone.serialize(new javax.xml.namespace.QName("",
						"telefone"), factory, xmlWriter);
			}
			if (localFaxTracker) {
				if (localFax == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"fax cannot be null!!");
				}
				localFax.serialize(new javax.xml.namespace.QName("", "fax"),
						factory, xmlWriter);
			}
			if (localNaturezaJuridicaTracker) {
				if (localNaturezaJuridica == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-juridica cannot be null!!");
				}
				localNaturezaJuridica.serialize(new javax.xml.namespace.QName(
						"", "natureza-juridica"), factory, xmlWriter);
			}
			if (localAtividadeEconomicaPrincipalTracker) {
				if (localAtividadeEconomicaPrincipal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"atividade-economica-principal cannot be null!!");
				}
				localAtividadeEconomicaPrincipal.serialize(
						new javax.xml.namespace.QName("",
								"atividade-economica-principal"), factory,
						xmlWriter);
			}
			if (localAtividadeEconomicaSecundariaTracker) {
				if (localAtividadeEconomicaSecundaria != null) {
					for (int i = 0; i < localAtividadeEconomicaSecundaria.length; i++) {
						if (localAtividadeEconomicaSecundaria[i] != null) {
							localAtividadeEconomicaSecundaria[i].serialize(
									new javax.xml.namespace.QName("",
											"atividade-economica-secundaria"),
									factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"atividade-economica-secundaria cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCnpjTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cnpj"));

				if (localCnpj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cnpj cannot be null!!");
				}
				elementList.add(localCnpj);
			}
			if (localSituacaoCnpjTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"situacao-cnpj"));

				if (localSituacaoCnpj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"situacao-cnpj cannot be null!!");
				}
				elementList.add(localSituacaoCnpj);
			}
			if (localSituacaoInscricaoEstadualTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"situacao-inscricao-estadual"));

				if (localSituacaoInscricaoEstadual == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"situacao-inscricao-estadual cannot be null!!");
				}
				elementList.add(localSituacaoInscricaoEstadual);
			}
			if (localEnderecoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "endereco"));

				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				elementList.add(localEndereco);
			}
			if (localTelefoneTracker) {
				elementList.add(new javax.xml.namespace.QName("", "telefone"));

				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				elementList.add(localTelefone);
			}
			if (localFaxTracker) {
				elementList.add(new javax.xml.namespace.QName("", "fax"));

				if (localFax == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"fax cannot be null!!");
				}
				elementList.add(localFax);
			}
			if (localNaturezaJuridicaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-juridica"));

				if (localNaturezaJuridica == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-juridica cannot be null!!");
				}
				elementList.add(localNaturezaJuridica);
			}
			if (localAtividadeEconomicaPrincipalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"atividade-economica-principal"));

				if (localAtividadeEconomicaPrincipal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"atividade-economica-principal cannot be null!!");
				}
				elementList.add(localAtividadeEconomicaPrincipal);
			}
			if (localAtividadeEconomicaSecundariaTracker) {
				if (localAtividadeEconomicaSecundaria != null) {
					for (int i = 0; i < localAtividadeEconomicaSecundaria.length; i++) {

						if (localAtividadeEconomicaSecundaria[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"atividade-economica-secundaria"));
							elementList
									.add(localAtividadeEconomicaSecundaria[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"atividade-economica-secundaria cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("", "data-fundacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataFundacao));

			attribList.add(new javax.xml.namespace.QName("",
					"inscricao-estadual"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInscricaoEstadual));

			attribList.add(new javax.xml.namespace.QName("", "nome-comercial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeComercial));

			attribList
					.add(new javax.xml.namespace.QName("", "numero-NIRE-NIRC"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroNIRENIRC));

			attribList.add(new javax.xml.namespace.QName("", "razao-social"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRazaoSocial));

			attribList.add(new javax.xml.namespace.QName("",
					"razao-social-anterior"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRazaoSocialAnterior));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-capital-social"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorCapitalSocial));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static PessoaJuridica parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				PessoaJuridica object = new PessoaJuridica();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Pessoa-Juridica".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (PessoaJuridica) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-fundacao"
					java.lang.String tempAttribDataFundacao =

					reader.getAttributeValue(null, "data-fundacao");

					if (tempAttribDataFundacao != null) {
						java.lang.String content = tempAttribDataFundacao;

						object.setDataFundacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataFundacao));

					} else {

					}
					handledAttributes.add("data-fundacao");

					// handle attribute "inscricao-estadual"
					java.lang.String tempAttribInscricaoEstadual =

					reader.getAttributeValue(null, "inscricao-estadual");

					if (tempAttribInscricaoEstadual != null) {
						java.lang.String content = tempAttribInscricaoEstadual;

						object.setInscricaoEstadual(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribInscricaoEstadual));

					} else {

						object.setInscricaoEstadual(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("inscricao-estadual");

					// handle attribute "nome-comercial"
					java.lang.String tempAttribNomeComercial =

					reader.getAttributeValue(null, "nome-comercial");

					if (tempAttribNomeComercial != null) {
						java.lang.String content = tempAttribNomeComercial;

						object.setNomeComercial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeComercial));

					} else {

					}
					handledAttributes.add("nome-comercial");

					// handle attribute "numero-NIRE-NIRC"
					java.lang.String tempAttribNumeroNIRENIRC =

					reader.getAttributeValue(null, "numero-NIRE-NIRC");

					if (tempAttribNumeroNIRENIRC != null) {
						java.lang.String content = tempAttribNumeroNIRENIRC;

						object.setNumeroNIRENIRC(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribNumeroNIRENIRC));

					} else {

						object.setNumeroNIRENIRC(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("numero-NIRE-NIRC");

					// handle attribute "razao-social"
					java.lang.String tempAttribRazaoSocial =

					reader.getAttributeValue(null, "razao-social");

					if (tempAttribRazaoSocial != null) {
						java.lang.String content = tempAttribRazaoSocial;

						object.setRazaoSocial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribRazaoSocial));

					} else {

					}
					handledAttributes.add("razao-social");

					// handle attribute "razao-social-anterior"
					java.lang.String tempAttribRazaoSocialAnterior =

					reader.getAttributeValue(null, "razao-social-anterior");

					if (tempAttribRazaoSocialAnterior != null) {
						java.lang.String content = tempAttribRazaoSocialAnterior;

						object.setRazaoSocialAnterior(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribRazaoSocialAnterior));

					} else {

					}
					handledAttributes.add("razao-social-anterior");

					// handle attribute "valor-capital-social"
					java.lang.String tempAttribValorCapitalSocial =

					reader.getAttributeValue(null, "valor-capital-social");

					if (tempAttribValorCapitalSocial != null) {
						java.lang.String content = tempAttribValorCapitalSocial;

						object.setValorCapitalSocial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorCapitalSocial));

					} else {

					}
					handledAttributes.add("valor-capital-social");

					reader.next();

					java.util.ArrayList list9 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cnpj")
									.equals(reader.getName())) {

						object.setCnpj(Cnpj.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"situacao-cnpj").equals(reader.getName())) {

						object.setSituacaoCnpj(SituacaoDocumentoWS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"situacao-inscricao-estadual")
									.equals(reader.getName())) {

						object.setSituacaoInscricaoEstadual(SituacaoDocumentoWS.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "endereco")
									.equals(reader.getName())) {

						object.setEndereco(Endereco.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "telefone")
									.equals(reader.getName())) {

						object.setTelefone(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "fax")
									.equals(reader.getName())) {

						object.setFax(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-juridica").equals(reader
									.getName())) {

						object.setNaturezaJuridica(NaturezaJuridica.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"atividade-economica-principal")
									.equals(reader.getName())) {

						object.setAtividadeEconomicaPrincipal(RamoAtividade.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"atividade-economica-secundaria")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list9.add(RamoAtividade.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone9 = false;
						while (!loopDone9) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone9 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"atividade-economica-secundaria")
										.equals(reader.getName())) {
									list9.add(RamoAtividade.Factory
											.parse(reader));

								} else {
									loopDone9 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setAtividadeEconomicaSecundaria((RamoAtividade[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(RamoAtividade.class, list9));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class TipoAssinanteTelefone implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"Tipo-Assinante-Telefone", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for TipoAssinanteTelefone
		 */

		protected java.lang.String localTipoAssinanteTelefone;

		private static java.util.HashMap _table_ = new java.util.HashMap();

		// Constructor

		protected TipoAssinanteTelefone(java.lang.String value,
				boolean isRegisterValue) {
			localTipoAssinanteTelefone = value;
			if (isRegisterValue) {

				_table_.put(localTipoAssinanteTelefone, this);

			}

		}

		public static final java.lang.String _Celular = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("Celular");

		public static final java.lang.String _Fixo = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("Fixo");

		public static final TipoAssinanteTelefone Celular = new TipoAssinanteTelefone(
				_Celular, true);

		public static final TipoAssinanteTelefone Fixo = new TipoAssinanteTelefone(
				_Fixo, true);

		public java.lang.String getValue() {
			return localTipoAssinanteTelefone;
		}

		public boolean equals(java.lang.Object obj) {
			return (obj == this);
		}

		public int hashCode() {
			return toString().hashCode();
		}

		public java.lang.String toString() {

			return localTipoAssinanteTelefone.toString();

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					TipoAssinanteTelefone.this.serialize(MY_QNAME, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Tipo-Assinante-Telefone", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Tipo-Assinante-Telefone", xmlWriter);
				}
			}

			if (localTipoAssinanteTelefone == null) {

				throw new org.apache.axis2.databinding.ADBException(
						"Value cannot be null !!");

			} else {

				xmlWriter.writeCharacters(localTipoAssinanteTelefone);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localTipoAssinanteTelefone) },
					null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static TipoAssinanteTelefone fromValue(java.lang.String value)
					throws java.lang.IllegalArgumentException {
				TipoAssinanteTelefone enumeration = (TipoAssinanteTelefone)

				_table_.get(value);

				if (enumeration == null)
					throw new java.lang.IllegalArgumentException();
				return enumeration;
			}

			public static TipoAssinanteTelefone fromString(
					java.lang.String value, java.lang.String namespaceURI)
					throws java.lang.IllegalArgumentException {
				try {

					return fromValue(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(value));

				} catch (java.lang.Exception e) {
					throw new java.lang.IllegalArgumentException();
				}
			}

			public static TipoAssinanteTelefone fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return TipoAssinanteTelefone.Factory.fromString(content,
							namespaceUri);
				} else {
					return TipoAssinanteTelefone.Factory
							.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static TipoAssinanteTelefone parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				TipoAssinanteTelefone object = null;
				// initialize a hash map to keep values
				java.util.Map attributeMap = new java.util.HashMap();
				java.util.List extraAttributeList = new java.util.ArrayList();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							java.lang.String content = reader.getElementText();

							if (content.indexOf(":") > 0) {
								// this seems to be a Qname so find the
								// namespace and send
								prefix = content.substring(0,
										content.indexOf(":"));
								namespaceuri = reader.getNamespaceURI(prefix);
								object = TipoAssinanteTelefone.Factory
										.fromString(content, namespaceuri);
							} else {
								// this seems to be not a qname send and empty
								// namespace incase of it is
								// check is done in fromString method
								object = TipoAssinanteTelefone.Factory
										.fromString(content, "");
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class TipoPessoa implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"Tipo-Pessoa", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for TipoPessoa
		 */

		protected java.lang.String localTipoPessoa;

		private static java.util.HashMap _table_ = new java.util.HashMap();

		// Constructor

		protected TipoPessoa(java.lang.String value, boolean isRegisterValue) {
			localTipoPessoa = value;
			if (isRegisterValue) {

				_table_.put(localTipoPessoa, this);

			}

		}

		public static final java.lang.String _F = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("F");

		public static final java.lang.String _J = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("J");

		public static final TipoPessoa F = new TipoPessoa(_F, true);

		public static final TipoPessoa J = new TipoPessoa(_J, true);

		public java.lang.String getValue() {
			return localTipoPessoa;
		}

		public boolean equals(java.lang.Object obj) {
			return (obj == this);
		}

		public int hashCode() {
			return toString().hashCode();
		}

		public java.lang.String toString() {

			return localTipoPessoa.toString();

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					TipoPessoa.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Tipo-Pessoa", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Tipo-Pessoa", xmlWriter);
				}
			}

			if (localTipoPessoa == null) {

				throw new org.apache.axis2.databinding.ADBException(
						"Value cannot be null !!");

			} else {

				xmlWriter.writeCharacters(localTipoPessoa);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localTipoPessoa) }, null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static TipoPessoa fromValue(java.lang.String value)
					throws java.lang.IllegalArgumentException {
				TipoPessoa enumeration = (TipoPessoa)

				_table_.get(value);

				if (enumeration == null)
					throw new java.lang.IllegalArgumentException();
				return enumeration;
			}

			public static TipoPessoa fromString(java.lang.String value,
					java.lang.String namespaceURI)
					throws java.lang.IllegalArgumentException {
				try {

					return fromValue(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(value));

				} catch (java.lang.Exception e) {
					throw new java.lang.IllegalArgumentException();
				}
			}

			public static TipoPessoa fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return TipoPessoa.Factory.fromString(content, namespaceUri);
				} else {
					return TipoPessoa.Factory.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static TipoPessoa parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				TipoPessoa object = null;
				// initialize a hash map to keep values
				java.util.Map attributeMap = new java.util.HashMap();
				java.util.List extraAttributeList = new java.util.ArrayList();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							java.lang.String content = reader.getElementText();

							if (content.indexOf(":") > 0) {
								// this seems to be a Qname so find the
								// namespace and send
								prefix = content.substring(0,
										content.indexOf(":"));
								namespaceuri = reader.getNamespaceURI(prefix);
								object = TipoPessoa.Factory.fromString(content,
										namespaceuri);
							} else {
								// this seems to be not a qname send and empty
								// namespace incase of it is
								// check is done in fromString method
								object = TipoPessoa.Factory.fromString(content,
										"");
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoChequeSemFundoAcheiCCF implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Cheque-Sem-Fundo-Achei-CCF Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cheque
		 */

		protected Cheque localCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getCheque() {
			return localCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cheque
		 */
		public void setCheque(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localChequeTracker = true;
			} else {
				localChequeTracker = false;

			}

			this.localCheque = param;

		}

		/**
		 * field for Cidade
		 */

		protected Cidade localCidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidade() {
			return localCidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cidade
		 */
		public void setCidade(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeTracker = true;
			} else {
				localCidadeTracker = false;

			}

			this.localCidade = param;

		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for NumeroCheque This was an Attribute!
		 */

		protected java.lang.String localNumeroCheque;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroCheque() {
			return localNumeroCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroCheque
		 */
		public void setNumeroCheque(java.lang.String param) {

			this.localNumeroCheque = param;

		}

		/**
		 * field for QuantidadeBanco This was an Attribute!
		 */

		protected int localQuantidadeBanco;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeBanco() {
			return localQuantidadeBanco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeBanco
		 */
		public void setQuantidadeBanco(int param) {

			this.localQuantidadeBanco = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoChequeSemFundoAcheiCCF.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Cheque-Sem-Fundo-Achei-CCF",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Cheque-Sem-Fundo-Achei-CCF",
							xmlWriter);
				}

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localNumeroCheque != null) {

				writeAttribute("", "numero-cheque",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroCheque), xmlWriter);

			}

			if (localQuantidadeBanco != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-banco",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeBanco),
						xmlWriter);

			}
			if (localChequeTracker) {
				if (localCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque cannot be null!!");
				}
				localCheque.serialize(new javax.xml.namespace.QName("",
						"cheque"), factory, xmlWriter);
			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cheque"));

				if (localCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque cannot be null!!");
				}
				elementList.add(localCheque);
			}
			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "numero-cheque"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroCheque));

			attribList
					.add(new javax.xml.namespace.QName("", "quantidade-banco"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeBanco));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoChequeSemFundoAcheiCCF parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoChequeSemFundoAcheiCCF object = new InsumoChequeSemFundoAcheiCCF();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Cheque-Sem-Fundo-Achei-CCF"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoChequeSemFundoAcheiCCF) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "numero-cheque"
					java.lang.String tempAttribNumeroCheque =

					reader.getAttributeValue(null, "numero-cheque");

					if (tempAttribNumeroCheque != null) {
						java.lang.String content = tempAttribNumeroCheque;

						object.setNumeroCheque(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroCheque));

					} else {

					}
					handledAttributes.add("numero-cheque");

					// handle attribute "quantidade-banco"
					java.lang.String tempAttribQuantidadeBanco =

					reader.getAttributeValue(null, "quantidade-banco");

					if (tempAttribQuantidadeBanco != null) {
						java.lang.String content = tempAttribQuantidadeBanco;

						object.setQuantidadeBanco(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeBanco));

					} else {

						object.setQuantidadeBanco(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-banco");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque")
									.equals(reader.getName())) {

						object.setCheque(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoChequeConsultaOnlineSRS implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Cheque-Consulta-Online-SRS Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for OcorrenciaRechequeOnline
		 */

		protected OcorrenciaRechequeOnline localOcorrenciaRechequeOnline;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localOcorrenciaRechequeOnlineTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return OcorrenciaRechequeOnline
		 */
		public OcorrenciaRechequeOnline getOcorrenciaRechequeOnline() {
			return localOcorrenciaRechequeOnline;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            OcorrenciaRechequeOnline
		 */
		public void setOcorrenciaRechequeOnline(OcorrenciaRechequeOnline param) {

			if (param != null) {
				// update the setting tracker
				localOcorrenciaRechequeOnlineTracker = true;
			} else {
				localOcorrenciaRechequeOnlineTracker = false;

			}

			this.localOcorrenciaRechequeOnline = param;

		}

		/**
		 * field for DataSituacaoContaCorrente This was an Attribute!
		 */

		protected java.util.Calendar localDataSituacaoContaCorrente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataSituacaoContaCorrente() {
			return localDataSituacaoContaCorrente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataSituacaoContaCorrente
		 */
		public void setDataSituacaoContaCorrente(java.util.Calendar param) {

			this.localDataSituacaoContaCorrente = param;

		}

		/**
		 * field for MensagemSituacaoContaCorrente This was an Attribute!
		 */

		protected java.lang.String localMensagemSituacaoContaCorrente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMensagemSituacaoContaCorrente() {
			return localMensagemSituacaoContaCorrente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemSituacaoContaCorrente
		 */
		public void setMensagemSituacaoContaCorrente(java.lang.String param) {

			this.localMensagemSituacaoContaCorrente = param;

		}

		/**
		 * field for TipoDocumentoIdentificacao This was an Attribute!
		 */

		protected java.lang.String localTipoDocumentoIdentificacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTipoDocumentoIdentificacao() {
			return localTipoDocumentoIdentificacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoDocumentoIdentificacao
		 */
		public void setTipoDocumentoIdentificacao(java.lang.String param) {

			this.localTipoDocumentoIdentificacao = param;

		}

		/**
		 * field for TipoPessoaRechequeOnline This was an Attribute!
		 */

		protected java.lang.String localTipoPessoaRechequeOnline;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTipoPessoaRechequeOnline() {
			return localTipoPessoaRechequeOnline;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoPessoaRechequeOnline
		 */
		public void setTipoPessoaRechequeOnline(java.lang.String param) {

			this.localTipoPessoaRechequeOnline = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoChequeConsultaOnlineSRS.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Cheque-Consulta-Online-SRS",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Cheque-Consulta-Online-SRS",
							xmlWriter);
				}

			}

			if (localDataSituacaoContaCorrente != null) {

				writeAttribute(
						"",
						"data-situacao-conta-corrente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataSituacaoContaCorrente),
						xmlWriter);

			}

			if (localMensagemSituacaoContaCorrente != null) {

				writeAttribute(
						"",
						"mensagem-situacao-conta-corrente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMensagemSituacaoContaCorrente),
						xmlWriter);

			}

			if (localTipoDocumentoIdentificacao != null) {

				writeAttribute(
						"",
						"tipo-documento-identificacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTipoDocumentoIdentificacao),
						xmlWriter);

			}

			if (localTipoPessoaRechequeOnline != null) {

				writeAttribute(
						"",
						"tipo-pessoa-recheque-online",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTipoPessoaRechequeOnline),
						xmlWriter);

			}
			if (localOcorrenciaRechequeOnlineTracker) {
				if (localOcorrenciaRechequeOnline == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ocorrencia-recheque-online cannot be null!!");
				}
				localOcorrenciaRechequeOnline.serialize(
						new javax.xml.namespace.QName("",
								"ocorrencia-recheque-online"), factory,
						xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localOcorrenciaRechequeOnlineTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ocorrencia-recheque-online"));

				if (localOcorrenciaRechequeOnline == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ocorrencia-recheque-online cannot be null!!");
				}
				elementList.add(localOcorrenciaRechequeOnline);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-situacao-conta-corrente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataSituacaoContaCorrente));

			attribList.add(new javax.xml.namespace.QName("",
					"mensagem-situacao-conta-corrente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMensagemSituacaoContaCorrente));

			attribList.add(new javax.xml.namespace.QName("",
					"tipo-documento-identificacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTipoDocumentoIdentificacao));

			attribList.add(new javax.xml.namespace.QName("",
					"tipo-pessoa-recheque-online"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTipoPessoaRechequeOnline));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoChequeConsultaOnlineSRS parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoChequeConsultaOnlineSRS object = new InsumoChequeConsultaOnlineSRS();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Cheque-Consulta-Online-SRS"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoChequeConsultaOnlineSRS) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-situacao-conta-corrente"
					java.lang.String tempAttribDataSituacaoContaCorrente =

					reader.getAttributeValue(null,
							"data-situacao-conta-corrente");

					if (tempAttribDataSituacaoContaCorrente != null) {
						java.lang.String content = tempAttribDataSituacaoContaCorrente;

						object.setDataSituacaoContaCorrente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataSituacaoContaCorrente));

					} else {

					}
					handledAttributes.add("data-situacao-conta-corrente");

					// handle attribute "mensagem-situacao-conta-corrente"
					java.lang.String tempAttribMensagemSituacaoContaCorrente =

					reader.getAttributeValue(null,
							"mensagem-situacao-conta-corrente");

					if (tempAttribMensagemSituacaoContaCorrente != null) {
						java.lang.String content = tempAttribMensagemSituacaoContaCorrente;

						object.setMensagemSituacaoContaCorrente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMensagemSituacaoContaCorrente));

					} else {

					}
					handledAttributes.add("mensagem-situacao-conta-corrente");

					// handle attribute "tipo-documento-identificacao"
					java.lang.String tempAttribTipoDocumentoIdentificacao =

					reader.getAttributeValue(null,
							"tipo-documento-identificacao");

					if (tempAttribTipoDocumentoIdentificacao != null) {
						java.lang.String content = tempAttribTipoDocumentoIdentificacao;

						object.setTipoDocumentoIdentificacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTipoDocumentoIdentificacao));

					} else {

					}
					handledAttributes.add("tipo-documento-identificacao");

					// handle attribute "tipo-pessoa-recheque-online"
					java.lang.String tempAttribTipoPessoaRechequeOnline =

					reader.getAttributeValue(null,
							"tipo-pessoa-recheque-online");

					if (tempAttribTipoPessoaRechequeOnline != null) {
						java.lang.String content = tempAttribTipoPessoaRechequeOnline;

						object.setTipoPessoaRechequeOnline(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTipoPessoaRechequeOnline));

					} else {

					}
					handledAttributes.add("tipo-pessoa-recheque-online");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ocorrencia-recheque-online").equals(reader
									.getName())) {

						object.setOcorrenciaRechequeOnline(OcorrenciaRechequeOnline.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ChequeFiltro implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cheque-Filtro Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Numero
		 */

		protected int localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(int param) {

			this.localNumero = param;

		}

		/**
		 * field for Digito
		 */

		protected int localDigito;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getDigito() {
			return localDigito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Digito
		 */
		public void setDigito(int param) {

			this.localDigito = param;

		}

		/**
		 * field for DataDeposito
		 */

		protected java.util.Calendar localDataDeposito;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataDeposito() {
			return localDataDeposito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataDeposito
		 */
		public void setDataDeposito(java.util.Calendar param) {

			this.localDataDeposito = param;

		}

		/**
		 * field for Valor
		 */

		protected java.math.BigDecimal localValor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValor() {
			return localValor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Valor
		 */
		public void setValor(java.math.BigDecimal param) {

			this.localValor = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ChequeFiltro.this
							.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cheque-Filtro",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cheque-Filtro", xmlWriter);
				}

			}

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "numero", namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "numero");
				}

			} else {
				xmlWriter.writeStartElement("numero");
			}

			if (localNumero == java.lang.Integer.MIN_VALUE) {

				throw new org.apache.axis2.databinding.ADBException(
						"numero cannot be null!!");

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero));
			}

			xmlWriter.writeEndElement();

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "digito", namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "digito");
				}

			} else {
				xmlWriter.writeStartElement("digito");
			}

			if (localDigito == java.lang.Integer.MIN_VALUE) {

				throw new org.apache.axis2.databinding.ADBException(
						"digito cannot be null!!");

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigito));
			}

			xmlWriter.writeEndElement();

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "data-deposito",
							namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "data-deposito");
				}

			} else {
				xmlWriter.writeStartElement("data-deposito");
			}

			if (localDataDeposito == null) {
				// write the nil attribute

				throw new org.apache.axis2.databinding.ADBException(
						"data-deposito cannot be null!!");

			} else {

				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataDeposito));

			}

			xmlWriter.writeEndElement();

			namespace = "";
			if (!namespace.equals("")) {
				prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, "valor", namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, "valor");
				}

			} else {
				xmlWriter.writeStartElement("valor");
			}

			if (localValor == null) {
				// write the nil attribute

				throw new org.apache.axis2.databinding.ADBException(
						"valor cannot be null!!");

			} else {

				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor));

			}

			xmlWriter.writeEndElement();

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			elementList.add(new javax.xml.namespace.QName("", "numero"));

			elementList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			elementList.add(new javax.xml.namespace.QName("", "digito"));

			elementList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigito));

			elementList.add(new javax.xml.namespace.QName("", "data-deposito"));

			if (localDataDeposito != null) {
				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataDeposito));
			} else {
				throw new org.apache.axis2.databinding.ADBException(
						"data-deposito cannot be null!!");
			}

			elementList.add(new javax.xml.namespace.QName("", "valor"));

			if (localValor != null) {
				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor));
			} else {
				throw new org.apache.axis2.databinding.ADBException(
						"valor cannot be null!!");
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ChequeFiltro parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ChequeFiltro object = new ChequeFiltro();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cheque-Filtro".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ChequeFiltro) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "numero")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "digito")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDigito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"data-deposito").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setDataDeposito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "valor")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(content));

						reader.next();

					} // End of if for expected property start element

					else {
						// A start element we are not expecting indicates an
						// invalid parameter was passed
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class AssinanteTelefone implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Assinante-Telefone Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Telefone
		 */

		protected Telefone localTelefone;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Telefone
		 */
		public Telefone getTelefone() {
			return localTelefone;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Telefone
		 */
		public void setTelefone(Telefone param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneTracker = true;
			} else {
				localTelefoneTracker = false;

			}

			this.localTelefone = param;

		}

		/**
		 * field for Endereco
		 */

		protected EnderecoAssinanteTelefone localEndereco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return EnderecoAssinanteTelefone
		 */
		public EnderecoAssinanteTelefone getEndereco() {
			return localEndereco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Endereco
		 */
		public void setEndereco(EnderecoAssinanteTelefone param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoTracker = true;
			} else {
				localEnderecoTracker = false;

			}

			this.localEndereco = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * field for TipoTelefone This was an Attribute!
		 */

		protected TipoAssinanteTelefone localTipoTelefone;

		/**
		 * Auto generated getter method
		 * 
		 * @return TipoAssinanteTelefone
		 */
		public TipoAssinanteTelefone getTipoTelefone() {
			return localTipoTelefone;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoTelefone
		 */
		public void setTipoTelefone(TipoAssinanteTelefone param) {

			this.localTipoTelefone = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					AssinanteTelefone.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Assinante-Telefone",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Assinante-Telefone", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localTipoTelefone != null) {
				writeAttribute("", "tipo-telefone",
						localTipoTelefone.toString(), xmlWriter);
			}
			if (localTelefoneTracker) {
				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				localTelefone.serialize(new javax.xml.namespace.QName("",
						"telefone"), factory, xmlWriter);
			}
			if (localEnderecoTracker) {
				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				localEndereco.serialize(new javax.xml.namespace.QName("",
						"endereco"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localTelefoneTracker) {
				elementList.add(new javax.xml.namespace.QName("", "telefone"));

				if (localTelefone == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone cannot be null!!");
				}
				elementList.add(localTelefone);
			}
			if (localEnderecoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "endereco"));

				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				elementList.add(localEndereco);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("", "tipo-telefone"));

			attribList.add(localTipoTelefone.toString());

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static AssinanteTelefone parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				AssinanteTelefone object = new AssinanteTelefone();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Assinante-Telefone".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (AssinanteTelefone) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "tipo-telefone"
					java.lang.String tempAttribTipoTelefone =

					reader.getAttributeValue(null, "tipo-telefone");

					if (tempAttribTipoTelefone != null) {
						java.lang.String content = tempAttribTipoTelefone;

						object.setTipoTelefone(TipoAssinanteTelefone.Factory
								.fromString(reader, tempAttribTipoTelefone));

					} else {

					}
					handledAttributes.add("tipo-telefone");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "telefone")
									.equals(reader.getName())) {

						object.setTelefone(Telefone.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "endereco")
									.equals(reader.getName())) {

						object.setEndereco(EnderecoAssinanteTelefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Cep implements org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/", "Cep",
				"ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cep
		 */

		protected int localCep;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getCep() {
			return localCep;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cep
		 */
		public void setCep(int param) {

			this.localCep = param;

		}

		public java.lang.String toString() {

			return localCep + "";

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Cep.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cep", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cep", xmlWriter);
				}
			}

			if (localCep == java.lang.Integer.MIN_VALUE) {

				throw new org.apache.axis2.databinding.ADBException(
						"property value cannot be null!!");

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCep));
			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCep) }, null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static Cep fromString(java.lang.String value,
					java.lang.String namespaceURI) {
				Cep returnValue = new Cep();

				returnValue
						.setCep(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(value));

				return returnValue;
			}

			public static Cep fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return Cep.Factory.fromString(content, namespaceUri);
				} else {
					return Cep.Factory.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Cep parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Cep object = new Cep();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							if (reader.isStartElement() || reader.hasText()) {

								java.lang.String content = reader
										.getElementText();

								object.setCep(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToInt(content));

							} // End of if for expected property start element

							else {
								// A start element we are not expecting
								// indicates an invalid parameter was passed
								throw new org.apache.axis2.databinding.ADBException(
										"Unexpected subelement "
												+ reader.getLocalName());
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoConsulta implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-Consulta Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Protocolo
		 */

		protected ProtocoloConsulta localProtocolo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localProtocoloTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ProtocoloConsulta
		 */
		public ProtocoloConsulta getProtocolo() {
			return localProtocolo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Protocolo
		 */
		public void setProtocolo(ProtocoloConsulta param) {

			if (param != null) {
				// update the setting tracker
				localProtocoloTracker = true;
			} else {
				localProtocoloTracker = false;

			}

			this.localProtocolo = param;

		}

		/**
		 * field for Operador
		 */

		protected Operador localOperador;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localOperadorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Operador
		 */
		public Operador getOperador() {
			return localOperador;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Operador
		 */
		public void setOperador(Operador param) {

			if (param != null) {
				// update the setting tracker
				localOperadorTracker = true;
			} else {
				localOperadorTracker = false;

			}

			this.localOperador = param;

		}

		/**
		 * field for BaseInoperante This was an Array!
		 */

		protected java.lang.String[] localBaseInoperante;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localBaseInoperanteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String[]
		 */
		public java.lang.String[] getBaseInoperante() {
			return localBaseInoperante;
		}

		/**
		 * validate the array for BaseInoperante
		 */
		protected void validateBaseInoperante(java.lang.String[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            BaseInoperante
		 */
		public void setBaseInoperante(java.lang.String[] param) {

			validateBaseInoperante(param);

			if (param != null) {
				// update the setting tracker
				localBaseInoperanteTracker = true;
			} else {
				localBaseInoperanteTracker = false;

			}

			this.localBaseInoperante = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            java.lang.String
		 */
		public void addBaseInoperante(java.lang.String param) {
			if (localBaseInoperante == null) {
				localBaseInoperante = new java.lang.String[] {};
			}

			// update the setting tracker
			localBaseInoperanteTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localBaseInoperante);
			list.add(param);
			this.localBaseInoperante = (java.lang.String[]) list
					.toArray(new java.lang.String[list.size()]);

		}

		/**
		 * field for Consumidor
		 */

		protected ResultadoConsumidor localConsumidor;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localConsumidorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoConsumidor
		 */
		public ResultadoConsumidor getConsumidor() {
			return localConsumidor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Consumidor
		 */
		public void setConsumidor(ResultadoConsumidor param) {

			if (param != null) {
				// update the setting tracker
				localConsumidorTracker = true;
			} else {
				localConsumidorTracker = false;

			}

			this.localConsumidor = param;

		}

		/**
		 * field for GrafiaPj
		 */

		protected ResultadoInsumo localGrafiaPj;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localGrafiaPjTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getGrafiaPj() {
			return localGrafiaPj;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            GrafiaPj
		 */
		public void setGrafiaPj(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localGrafiaPjTracker = true;
			} else {
				localGrafiaPjTracker = false;

			}

			this.localGrafiaPj = param;

		}

		/**
		 * field for EnderecoCepConsultado
		 */

		protected ResultadoInsumo localEnderecoCepConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoCepConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getEnderecoCepConsultado() {
			return localEnderecoCepConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            EnderecoCepConsultado
		 */
		public void setEnderecoCepConsultado(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoCepConsultadoTracker = true;
			} else {
				localEnderecoCepConsultadoTracker = false;

			}

			this.localEnderecoCepConsultado = param;

		}

		/**
		 * field for TelefoneConsultado
		 */

		protected ResultadoInsumo localTelefoneConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getTelefoneConsultado() {
			return localTelefoneConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneConsultado
		 */
		public void setTelefoneConsultado(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneConsultadoTracker = true;
			} else {
				localTelefoneConsultadoTracker = false;

			}

			this.localTelefoneConsultado = param;

		}

		/**
		 * field for TelefoneVinculadoConsumidor
		 */

		protected ResultadoInsumo localTelefoneVinculadoConsumidor;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneVinculadoConsumidorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getTelefoneVinculadoConsumidor() {
			return localTelefoneVinculadoConsumidor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneVinculadoConsumidor
		 */
		public void setTelefoneVinculadoConsumidor(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneVinculadoConsumidorTracker = true;
			} else {
				localTelefoneVinculadoConsumidorTracker = false;

			}

			this.localTelefoneVinculadoConsumidor = param;

		}

		/**
		 * field for TelefoneVinculadoAssinanteConsultado
		 */

		protected ResultadoInsumo localTelefoneVinculadoAssinanteConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTelefoneVinculadoAssinanteConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getTelefoneVinculadoAssinanteConsultado() {
			return localTelefoneVinculadoAssinanteConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TelefoneVinculadoAssinanteConsultado
		 */
		public void setTelefoneVinculadoAssinanteConsultado(
				ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localTelefoneVinculadoAssinanteConsultadoTracker = true;
			} else {
				localTelefoneVinculadoAssinanteConsultadoTracker = false;

			}

			this.localTelefoneVinculadoAssinanteConsultado = param;

		}

		/**
		 * field for UltimoTelefoneInformado
		 */

		protected ResultadoInsumo localUltimoTelefoneInformado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUltimoTelefoneInformadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getUltimoTelefoneInformado() {
			return localUltimoTelefoneInformado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UltimoTelefoneInformado
		 */
		public void setUltimoTelefoneInformado(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localUltimoTelefoneInformadoTracker = true;
			} else {
				localUltimoTelefoneInformadoTracker = false;

			}

			this.localUltimoTelefoneInformado = param;

		}

		/**
		 * field for UltimoEnderecoInformado
		 */

		protected ResultadoInsumo localUltimoEnderecoInformado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUltimoEnderecoInformadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getUltimoEnderecoInformado() {
			return localUltimoEnderecoInformado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UltimoEnderecoInformado
		 */
		public void setUltimoEnderecoInformado(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localUltimoEnderecoInformadoTracker = true;
			} else {
				localUltimoEnderecoInformadoTracker = false;

			}

			this.localUltimoEnderecoInformado = param;

		}

		/**
		 * field for ParticipacaoEmpresa
		 */

		protected ResultadoInsumo localParticipacaoEmpresa;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localParticipacaoEmpresaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getParticipacaoEmpresa() {
			return localParticipacaoEmpresa;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ParticipacaoEmpresa
		 */
		public void setParticipacaoEmpresa(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localParticipacaoEmpresaTracker = true;
			} else {
				localParticipacaoEmpresaTracker = false;

			}

			this.localParticipacaoEmpresa = param;

		}

		/**
		 * field for Socio
		 */

		protected ResultadoInsumo localSocio;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSocioTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getSocio() {
			return localSocio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Socio
		 */
		public void setSocio(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localSocioTracker = true;
			} else {
				localSocioTracker = false;

			}

			this.localSocio = param;

		}

		/**
		 * field for Administrador
		 */

		protected ResultadoInsumo localAdministrador;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAdministradorTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getAdministrador() {
			return localAdministrador;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Administrador
		 */
		public void setAdministrador(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localAdministradorTracker = true;
			} else {
				localAdministradorTracker = false;

			}

			this.localAdministrador = param;

		}

		/**
		 * field for AlertaDocumento
		 */

		protected ResultadoInsumo localAlertaDocumento;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAlertaDocumentoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getAlertaDocumento() {
			return localAlertaDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AlertaDocumento
		 */
		public void setAlertaDocumento(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localAlertaDocumentoTracker = true;
			} else {
				localAlertaDocumentoTracker = false;

			}

			this.localAlertaDocumento = param;

		}

		/**
		 * field for Spc
		 */

		protected ResultadoInsumo localSpc;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSpcTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getSpc() {
			return localSpc;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Spc
		 */
		public void setSpc(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localSpcTracker = true;
			} else {
				localSpcTracker = false;

			}

			this.localSpc = param;

		}

		/**
		 * field for ChequeLojista
		 */

		protected ResultadoInsumo localChequeLojista;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeLojistaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getChequeLojista() {
			return localChequeLojista;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeLojista
		 */
		public void setChequeLojista(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localChequeLojistaTracker = true;
			} else {
				localChequeLojistaTracker = false;

			}

			this.localChequeLojista = param;

		}

		/**
		 * field for Ccf
		 */

		protected ResultadoInsumo localCcf;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCcfTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getCcf() {
			return localCcf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Ccf
		 */
		public void setCcf(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localCcfTracker = true;
			} else {
				localCcfTracker = false;

			}

			this.localCcf = param;

		}

		/**
		 * field for ContraOrdemDocumentoDiferente
		 */

		protected ResultadoInsumoContraOrdem localContraOrdemDocumentoDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContraOrdemDocumentoDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoContraOrdem
		 */
		public ResultadoInsumoContraOrdem getContraOrdemDocumentoDiferente() {
			return localContraOrdemDocumentoDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContraOrdemDocumentoDiferente
		 */
		public void setContraOrdemDocumentoDiferente(
				ResultadoInsumoContraOrdem param) {

			if (param != null) {
				// update the setting tracker
				localContraOrdemDocumentoDiferenteTracker = true;
			} else {
				localContraOrdemDocumentoDiferenteTracker = false;

			}

			this.localContraOrdemDocumentoDiferente = param;

		}

		/**
		 * field for ContraOrdemAgenciaDiferente
		 */

		protected ResultadoInsumoContraOrdem localContraOrdemAgenciaDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContraOrdemAgenciaDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoContraOrdem
		 */
		public ResultadoInsumoContraOrdem getContraOrdemAgenciaDiferente() {
			return localContraOrdemAgenciaDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContraOrdemAgenciaDiferente
		 */
		public void setContraOrdemAgenciaDiferente(
				ResultadoInsumoContraOrdem param) {

			if (param != null) {
				// update the setting tracker
				localContraOrdemAgenciaDiferenteTracker = true;
			} else {
				localContraOrdemAgenciaDiferenteTracker = false;

			}

			this.localContraOrdemAgenciaDiferente = param;

		}

		/**
		 * field for ContraOrdemAgenciaContaDiferente
		 */

		protected ResultadoInsumoContraOrdem localContraOrdemAgenciaContaDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContraOrdemAgenciaContaDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoContraOrdem
		 */
		public ResultadoInsumoContraOrdem getContraOrdemAgenciaContaDiferente() {
			return localContraOrdemAgenciaContaDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContraOrdemAgenciaContaDiferente
		 */
		public void setContraOrdemAgenciaContaDiferente(
				ResultadoInsumoContraOrdem param) {

			if (param != null) {
				// update the setting tracker
				localContraOrdemAgenciaContaDiferenteTracker = true;
			} else {
				localContraOrdemAgenciaContaDiferenteTracker = false;

			}

			this.localContraOrdemAgenciaContaDiferente = param;

		}

		/**
		 * field for Acao
		 */

		protected ResultadoInsumo localAcao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAcaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getAcao() {
			return localAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Acao
		 */
		public void setAcao(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localAcaoTracker = true;
			} else {
				localAcaoTracker = false;

			}

			this.localAcao = param;

		}

		/**
		 * field for Protesto
		 */

		protected ResultadoInsumo localProtesto;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localProtestoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getProtesto() {
			return localProtesto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Protesto
		 */
		public void setProtesto(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localProtestoTracker = true;
			} else {
				localProtestoTracker = false;

			}

			this.localProtesto = param;

		}

		/**
		 * field for ContraOrdem
		 */

		protected ResultadoInsumoContraOrdem localContraOrdem;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContraOrdemTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoContraOrdem
		 */
		public ResultadoInsumoContraOrdem getContraOrdem() {
			return localContraOrdem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContraOrdem
		 */
		public void setContraOrdem(ResultadoInsumoContraOrdem param) {

			if (param != null) {
				// update the setting tracker
				localContraOrdemTracker = true;
			} else {
				localContraOrdemTracker = false;

			}

			this.localContraOrdem = param;

		}

		/**
		 * field for Contumacia
		 */

		protected ResultadoInsumoContumacia localContumacia;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContumaciaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoContumacia
		 */
		public ResultadoInsumoContumacia getContumacia() {
			return localContumacia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Contumacia
		 */
		public void setContumacia(ResultadoInsumoContumacia param) {

			if (param != null) {
				// update the setting tracker
				localContumaciaTracker = true;
			} else {
				localContumaciaTracker = false;

			}

			this.localContumacia = param;

		}

		/**
		 * field for CreditoConcedido
		 */

		protected ResultadoInsumo localCreditoConcedido;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCreditoConcedidoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getCreditoConcedido() {
			return localCreditoConcedido;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CreditoConcedido
		 */
		public void setCreditoConcedido(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localCreditoConcedidoTracker = true;
			} else {
				localCreditoConcedidoTracker = false;

			}

			this.localCreditoConcedido = param;

		}

		/**
		 * field for BancoAgenciaContaDocumentoDiferente
		 */

		protected ResultadoInsumo localBancoAgenciaContaDocumentoDiferente;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localBancoAgenciaContaDocumentoDiferenteTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getBancoAgenciaContaDocumentoDiferente() {
			return localBancoAgenciaContaDocumentoDiferente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            BancoAgenciaContaDocumentoDiferente
		 */
		public void setBancoAgenciaContaDocumentoDiferente(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localBancoAgenciaContaDocumentoDiferenteTracker = true;
			} else {
				localBancoAgenciaContaDocumentoDiferenteTracker = false;

			}

			this.localBancoAgenciaContaDocumentoDiferente = param;

		}

		/**
		 * field for DadosAgenciaBancaria
		 */

		protected ResultadoInsumo localDadosAgenciaBancaria;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDadosAgenciaBancariaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getDadosAgenciaBancaria() {
			return localDadosAgenciaBancaria;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DadosAgenciaBancaria
		 */
		public void setDadosAgenciaBancaria(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localDadosAgenciaBancariaTracker = true;
			} else {
				localDadosAgenciaBancariaTracker = false;

			}

			this.localDadosAgenciaBancaria = param;

		}

		/**
		 * field for ConsultaRealizada
		 */

		protected ResultadoInsumoConsultaRealizada localConsultaRealizada;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localConsultaRealizadaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumoConsultaRealizada
		 */
		public ResultadoInsumoConsultaRealizada getConsultaRealizada() {
			return localConsultaRealizada;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ConsultaRealizada
		 */
		public void setConsultaRealizada(ResultadoInsumoConsultaRealizada param) {

			if (param != null) {
				// update the setting tracker
				localConsultaRealizadaTracker = true;
			} else {
				localConsultaRealizadaTracker = false;

			}

			this.localConsultaRealizada = param;

		}

		/**
		 * field for InformacaoPoderJudiciario
		 */

		protected ResultadoInsumo localInformacaoPoderJudiciario;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localInformacaoPoderJudiciarioTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getInformacaoPoderJudiciario() {
			return localInformacaoPoderJudiciario;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            InformacaoPoderJudiciario
		 */
		public void setInformacaoPoderJudiciario(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localInformacaoPoderJudiciarioTracker = true;
			} else {
				localInformacaoPoderJudiciarioTracker = false;

			}

			this.localInformacaoPoderJudiciario = param;

		}

		/**
		 * field for Riskscoring6Meses
		 */

		protected ResultadoInsumo localRiskscoring6Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localRiskscoring6MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getRiskscoring6Meses() {
			return localRiskscoring6Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Riskscoring6Meses
		 */
		public void setRiskscoring6Meses(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localRiskscoring6MesesTracker = true;
			} else {
				localRiskscoring6MesesTracker = false;

			}

			this.localRiskscoring6Meses = param;

		}

		/**
		 * field for Riskscoring12Meses
		 */

		protected ResultadoInsumo localRiskscoring12Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localRiskscoring12MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getRiskscoring12Meses() {
			return localRiskscoring12Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Riskscoring12Meses
		 */
		public void setRiskscoring12Meses(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localRiskscoring12MesesTracker = true;
			} else {
				localRiskscoring12MesesTracker = false;

			}

			this.localRiskscoring12Meses = param;

		}

		/**
		 * field for ChequeSemFundoAchei
		 */

		protected ResultadoInsumo localChequeSemFundoAchei;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeSemFundoAcheiTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getChequeSemFundoAchei() {
			return localChequeSemFundoAchei;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeSemFundoAchei
		 */
		public void setChequeSemFundoAchei(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localChequeSemFundoAcheiTracker = true;
			} else {
				localChequeSemFundoAcheiTracker = false;

			}

			this.localChequeSemFundoAchei = param;

		}

		/**
		 * field for ChequeSemFundoAcheiCcf
		 */

		protected ResultadoInsumo localChequeSemFundoAcheiCcf;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeSemFundoAcheiCcfTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getChequeSemFundoAcheiCcf() {
			return localChequeSemFundoAcheiCcf;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeSemFundoAcheiCcf
		 */
		public void setChequeSemFundoAcheiCcf(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localChequeSemFundoAcheiCcfTracker = true;
			} else {
				localChequeSemFundoAcheiCcfTracker = false;

			}

			this.localChequeSemFundoAcheiCcf = param;

		}

		/**
		 * field for ContumaciaSrs
		 */

		protected ResultadoInsumo localContumaciaSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContumaciaSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getContumaciaSrs() {
			return localContumaciaSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContumaciaSrs
		 */
		public void setContumaciaSrs(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localContumaciaSrsTracker = true;
			} else {
				localContumaciaSrsTracker = false;

			}

			this.localContumaciaSrs = param;

		}

		/**
		 * field for ParticipacaoFalencia
		 */

		protected ResultadoInsumo localParticipacaoFalencia;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localParticipacaoFalenciaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getParticipacaoFalencia() {
			return localParticipacaoFalencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ParticipacaoFalencia
		 */
		public void setParticipacaoFalencia(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localParticipacaoFalenciaTracker = true;
			} else {
				localParticipacaoFalenciaTracker = false;

			}

			this.localParticipacaoFalencia = param;

		}

		/**
		 * field for RestricaoFinanceira
		 */

		protected ResultadoInsumo localRestricaoFinanceira;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localRestricaoFinanceiraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getRestricaoFinanceira() {
			return localRestricaoFinanceira;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RestricaoFinanceira
		 */
		public void setRestricaoFinanceira(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localRestricaoFinanceiraTracker = true;
			} else {
				localRestricaoFinanceiraTracker = false;

			}

			this.localRestricaoFinanceira = param;

		}

		/**
		 * field for PendenciaFinanceira
		 */

		protected ResultadoInsumo localPendenciaFinanceira;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localPendenciaFinanceiraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getPendenciaFinanceira() {
			return localPendenciaFinanceira;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PendenciaFinanceira
		 */
		public void setPendenciaFinanceira(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localPendenciaFinanceiraTracker = true;
			} else {
				localPendenciaFinanceiraTracker = false;

			}

			this.localPendenciaFinanceira = param;

		}

		/**
		 * field for ChequeSemFundoVarejo
		 */

		protected ResultadoInsumo localChequeSemFundoVarejo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeSemFundoVarejoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getChequeSemFundoVarejo() {
			return localChequeSemFundoVarejo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeSemFundoVarejo
		 */
		public void setChequeSemFundoVarejo(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localChequeSemFundoVarejoTracker = true;
			} else {
				localChequeSemFundoVarejoTracker = false;

			}

			this.localChequeSemFundoVarejo = param;

		}

		/**
		 * field for ContraOrdemSrs
		 */

		protected ResultadoInsumo localContraOrdemSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContraOrdemSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getContraOrdemSrs() {
			return localContraOrdemSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContraOrdemSrs
		 */
		public void setContraOrdemSrs(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localContraOrdemSrsTracker = true;
			} else {
				localContraOrdemSrsTracker = false;

			}

			this.localContraOrdemSrs = param;

		}

		/**
		 * field for ContraOrdemDocumentoDiferenteSrs
		 */

		protected ResultadoInsumo localContraOrdemDocumentoDiferenteSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localContraOrdemDocumentoDiferenteSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getContraOrdemDocumentoDiferenteSrs() {
			return localContraOrdemDocumentoDiferenteSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ContraOrdemDocumentoDiferenteSrs
		 */
		public void setContraOrdemDocumentoDiferenteSrs(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localContraOrdemDocumentoDiferenteSrsTracker = true;
			} else {
				localContraOrdemDocumentoDiferenteSrsTracker = false;

			}

			this.localContraOrdemDocumentoDiferenteSrs = param;

		}

		/**
		 * field for ChequeOutrasOcorrenciasSrs
		 */

		protected ResultadoInsumo localChequeOutrasOcorrenciasSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeOutrasOcorrenciasSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getChequeOutrasOcorrenciasSrs() {
			return localChequeOutrasOcorrenciasSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeOutrasOcorrenciasSrs
		 */
		public void setChequeOutrasOcorrenciasSrs(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localChequeOutrasOcorrenciasSrsTracker = true;
			} else {
				localChequeOutrasOcorrenciasSrsTracker = false;

			}

			this.localChequeOutrasOcorrenciasSrs = param;

		}

		/**
		 * field for ChequeConsultaOnlineSrs
		 */

		protected ResultadoInsumo localChequeConsultaOnlineSrs;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeConsultaOnlineSrsTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getChequeConsultaOnlineSrs() {
			return localChequeConsultaOnlineSrs;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeConsultaOnlineSrs
		 */
		public void setChequeConsultaOnlineSrs(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localChequeConsultaOnlineSrsTracker = true;
			} else {
				localChequeConsultaOnlineSrsTracker = false;

			}

			this.localChequeConsultaOnlineSrs = param;

		}

		/**
		 * field for ConsultaRealizadaCheque
		 */

		protected ResultadoInsumo localConsultaRealizadaCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localConsultaRealizadaChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getConsultaRealizadaCheque() {
			return localConsultaRealizadaCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ConsultaRealizadaCheque
		 */
		public void setConsultaRealizadaCheque(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localConsultaRealizadaChequeTracker = true;
			} else {
				localConsultaRealizadaChequeTracker = false;

			}

			this.localConsultaRealizadaCheque = param;

		}

		/**
		 * field for ReferenciaisNegocios
		 */

		protected ResultadoInsumo localReferenciaisNegocios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localReferenciaisNegociosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getReferenciaisNegocios() {
			return localReferenciaisNegocios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ReferenciaisNegocios
		 */
		public void setReferenciaisNegocios(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localReferenciaisNegociosTracker = true;
			} else {
				localReferenciaisNegociosTracker = false;

			}

			this.localReferenciaisNegocios = param;

		}

		/**
		 * field for HistoricoPagamento
		 */

		protected ResultadoInsumo localHistoricoPagamento;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localHistoricoPagamentoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getHistoricoPagamento() {
			return localHistoricoPagamento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            HistoricoPagamento
		 */
		public void setHistoricoPagamento(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localHistoricoPagamentoTracker = true;
			} else {
				localHistoricoPagamentoTracker = false;

			}

			this.localHistoricoPagamento = param;

		}

		/**
		 * field for RelacionamentoMaisAntigoComFornecedores
		 */

		protected ResultadoInsumo localRelacionamentoMaisAntigoComFornecedores;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localRelacionamentoMaisAntigoComFornecedoresTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getRelacionamentoMaisAntigoComFornecedores() {
			return localRelacionamentoMaisAntigoComFornecedores;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RelacionamentoMaisAntigoComFornecedores
		 */
		public void setRelacionamentoMaisAntigoComFornecedores(
				ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localRelacionamentoMaisAntigoComFornecedoresTracker = true;
			} else {
				localRelacionamentoMaisAntigoComFornecedoresTracker = false;

			}

			this.localRelacionamentoMaisAntigoComFornecedores = param;

		}

		/**
		 * field for RegistroConsulta
		 */

		protected ResultadoInsumo localRegistroConsulta;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localRegistroConsultaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getRegistroConsulta() {
			return localRegistroConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RegistroConsulta
		 */
		public void setRegistroConsulta(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localRegistroConsultaTracker = true;
			} else {
				localRegistroConsultaTracker = false;

			}

			this.localRegistroConsulta = param;

		}

		/**
		 * field for UltimasConsultas
		 */

		protected ResultadoInsumo localUltimasConsultas;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUltimasConsultasTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getUltimasConsultas() {
			return localUltimasConsultas;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UltimasConsultas
		 */
		public void setUltimasConsultas(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localUltimasConsultasTracker = true;
			} else {
				localUltimasConsultasTracker = false;

			}

			this.localUltimasConsultas = param;

		}

		/**
		 * field for CapitalSocial
		 */

		protected ResultadoInsumo localCapitalSocial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCapitalSocialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getCapitalSocial() {
			return localCapitalSocial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CapitalSocial
		 */
		public void setCapitalSocial(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localCapitalSocialTracker = true;
			} else {
				localCapitalSocialTracker = false;

			}

			this.localCapitalSocial = param;

		}

		/**
		 * field for Antecessora
		 */

		protected ResultadoInsumo localAntecessora;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAntecessoraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getAntecessora() {
			return localAntecessora;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Antecessora
		 */
		public void setAntecessora(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localAntecessoraTracker = true;
			} else {
				localAntecessoraTracker = false;

			}

			this.localAntecessora = param;

		}

		/**
		 * field for AtividadeEmpresa
		 */

		protected ResultadoInsumo localAtividadeEmpresa;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAtividadeEmpresaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getAtividadeEmpresa() {
			return localAtividadeEmpresa;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AtividadeEmpresa
		 */
		public void setAtividadeEmpresa(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localAtividadeEmpresaTracker = true;
			} else {
				localAtividadeEmpresaTracker = false;

			}

			this.localAtividadeEmpresa = param;

		}

		/**
		 * field for Filial
		 */

		protected ResultadoInsumo localFilial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localFilialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getFilial() {
			return localFilial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Filial
		 */
		public void setFilial(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localFilialTracker = true;
			} else {
				localFilialTracker = false;

			}

			this.localFilial = param;

		}

		/**
		 * field for InformacoesAdicionais
		 */

		protected ResultadoInsumo localInformacoesAdicionais;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localInformacoesAdicionaisTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getInformacoesAdicionais() {
			return localInformacoesAdicionais;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            InformacoesAdicionais
		 */
		public void setInformacoesAdicionais(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localInformacoesAdicionaisTracker = true;
			} else {
				localInformacoesAdicionaisTracker = false;

			}

			this.localInformacoesAdicionais = param;

		}

		/**
		 * field for IncorporacaoFusaoCisao
		 */

		protected ResultadoInsumo localIncorporacaoFusaoCisao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localIncorporacaoFusaoCisaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getIncorporacaoFusaoCisao() {
			return localIncorporacaoFusaoCisao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            IncorporacaoFusaoCisao
		 */
		public void setIncorporacaoFusaoCisao(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localIncorporacaoFusaoCisaoTracker = true;
			} else {
				localIncorporacaoFusaoCisaoTracker = false;

			}

			this.localIncorporacaoFusaoCisao = param;

		}

		/**
		 * field for PrincipaisProdutos
		 */

		protected ResultadoInsumo localPrincipaisProdutos;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localPrincipaisProdutosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getPrincipaisProdutos() {
			return localPrincipaisProdutos;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PrincipaisProdutos
		 */
		public void setPrincipaisProdutos(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localPrincipaisProdutosTracker = true;
			} else {
				localPrincipaisProdutosTracker = false;

			}

			this.localPrincipaisProdutos = param;

		}

		/**
		 * field for MensagemComplementar This was an Array!
		 */

		protected MensagemComplementar[] localMensagemComplementar;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMensagemComplementarTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return MensagemComplementar[]
		 */
		public MensagemComplementar[] getMensagemComplementar() {
			return localMensagemComplementar;
		}

		/**
		 * validate the array for MensagemComplementar
		 */
		protected void validateMensagemComplementar(MensagemComplementar[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemComplementar
		 */
		public void setMensagemComplementar(MensagemComplementar[] param) {

			validateMensagemComplementar(param);

			if (param != null) {
				// update the setting tracker
				localMensagemComplementarTracker = true;
			} else {
				localMensagemComplementarTracker = false;

			}

			this.localMensagemComplementar = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            MensagemComplementar
		 */
		public void addMensagemComplementar(MensagemComplementar param) {
			if (localMensagemComplementar == null) {
				localMensagemComplementar = new MensagemComplementar[] {};
			}

			// update the setting tracker
			localMensagemComplementarTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localMensagemComplementar);
			list.add(param);
			this.localMensagemComplementar = (MensagemComplementar[]) list
					.toArray(new MensagemComplementar[list.size()]);

		}

		/**
		 * field for SpcScore3Meses
		 */

		protected ResultadoInsumo localSpcScore3Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSpcScore3MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getSpcScore3Meses() {
			return localSpcScore3Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SpcScore3Meses
		 */
		public void setSpcScore3Meses(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localSpcScore3MesesTracker = true;
			} else {
				localSpcScore3MesesTracker = false;

			}

			this.localSpcScore3Meses = param;

		}

		/**
		 * field for SpcScore12Meses
		 */

		protected ResultadoInsumo localSpcScore12Meses;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSpcScore12MesesTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getSpcScore12Meses() {
			return localSpcScore12Meses;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SpcScore12Meses
		 */
		public void setSpcScore12Meses(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localSpcScore12MesesTracker = true;
			} else {
				localSpcScore12MesesTracker = false;

			}

			this.localSpcScore12Meses = param;

		}

		/**
		 * field for SpcObito
		 */

		protected ResultadoInsumo localSpcObito;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSpcObitoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getSpcObito() {
			return localSpcObito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            SpcObito
		 */
		public void setSpcObito(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localSpcObitoTracker = true;
			} else {
				localSpcObitoTracker = false;

			}

			this.localSpcObito = param;

		}

		/**
		 * field for ConfirmacaoRg
		 */

		protected ResultadoInsumo localConfirmacaoRg;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localConfirmacaoRgTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoInsumo
		 */
		public ResultadoInsumo getConfirmacaoRg() {
			return localConfirmacaoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ConfirmacaoRg
		 */
		public void setConfirmacaoRg(ResultadoInsumo param) {

			if (param != null) {
				// update the setting tracker
				localConfirmacaoRgTracker = true;
			} else {
				localConfirmacaoRgTracker = false;

			}

			this.localConfirmacaoRg = param;

		}

		/**
		 * field for Restricao This was an Attribute!
		 */

		protected boolean localRestricao;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getRestricao() {
			return localRestricao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Restricao
		 */
		public void setRestricao(boolean param) {

			this.localRestricao = param;

		}

		/**
		 * field for Data This was an Attribute!
		 */

		protected java.util.Calendar localData;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getData() {
			return localData;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Data
		 */
		public void setData(java.util.Calendar param) {

			this.localData = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoConsulta.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Resultado-Consulta",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Resultado-Consulta", xmlWriter);
				}

			}

			if (true) {

				writeAttribute("", "restricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRestricao), xmlWriter);

			}

			if (localData != null) {

				writeAttribute("", "data",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localData), xmlWriter);

			}
			if (localProtocoloTracker) {
				if (localProtocolo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"protocolo cannot be null!!");
				}
				localProtocolo.serialize(new javax.xml.namespace.QName("",
						"protocolo"), factory, xmlWriter);
			}
			if (localOperadorTracker) {
				if (localOperador == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"operador cannot be null!!");
				}
				localOperador.serialize(new javax.xml.namespace.QName("",
						"operador"), factory, xmlWriter);
			}
			if (localBaseInoperanteTracker) {
				if (localBaseInoperante != null) {
					namespace = "";
					boolean emptyNamespace = namespace == null
							|| namespace.length() == 0;
					prefix = emptyNamespace ? null : xmlWriter
							.getPrefix(namespace);
					for (int i = 0; i < localBaseInoperante.length; i++) {

						if (localBaseInoperante[i] != null) {

							if (!emptyNamespace) {
								if (prefix == null) {
									java.lang.String prefix2 = generatePrefix(namespace);

									xmlWriter.writeStartElement(prefix2,
											"base-inoperante", namespace);
									xmlWriter
											.writeNamespace(prefix2, namespace);
									xmlWriter.setPrefix(prefix2, namespace);

								} else {
									xmlWriter.writeStartElement(namespace,
											"base-inoperante");
								}

							} else {
								xmlWriter.writeStartElement("base-inoperante");
							}

							xmlWriter
									.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(localBaseInoperante[i]));

							xmlWriter.writeEndElement();

						} else {

							// we have to do nothing since minOccurs is zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"base-inoperante cannot be null!!");

				}

			}
			if (localConsumidorTracker) {
				if (localConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consumidor cannot be null!!");
				}
				localConsumidor.serialize(new javax.xml.namespace.QName("",
						"consumidor"), factory, xmlWriter);
			}
			if (localGrafiaPjTracker) {
				if (localGrafiaPj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"grafia-pj cannot be null!!");
				}
				localGrafiaPj.serialize(new javax.xml.namespace.QName("",
						"grafia-pj"), factory, xmlWriter);
			}
			if (localEnderecoCepConsultadoTracker) {
				if (localEnderecoCepConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco-cep-consultado cannot be null!!");
				}
				localEnderecoCepConsultado.serialize(
						new javax.xml.namespace.QName("",
								"endereco-cep-consultado"), factory, xmlWriter);
			}
			if (localTelefoneConsultadoTracker) {
				if (localTelefoneConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-consultado cannot be null!!");
				}
				localTelefoneConsultado
						.serialize(new javax.xml.namespace.QName("",
								"telefone-consultado"), factory, xmlWriter);
			}
			if (localTelefoneVinculadoConsumidorTracker) {
				if (localTelefoneVinculadoConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-vinculado-consumidor cannot be null!!");
				}
				localTelefoneVinculadoConsumidor.serialize(
						new javax.xml.namespace.QName("",
								"telefone-vinculado-consumidor"), factory,
						xmlWriter);
			}
			if (localTelefoneVinculadoAssinanteConsultadoTracker) {
				if (localTelefoneVinculadoAssinanteConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-vinculado-assinante-consultado cannot be null!!");
				}
				localTelefoneVinculadoAssinanteConsultado.serialize(
						new javax.xml.namespace.QName("",
								"telefone-vinculado-assinante-consultado"),
						factory, xmlWriter);
			}
			if (localUltimoTelefoneInformadoTracker) {
				if (localUltimoTelefoneInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-telefone-informado cannot be null!!");
				}
				localUltimoTelefoneInformado.serialize(
						new javax.xml.namespace.QName("",
								"ultimo-telefone-informado"), factory,
						xmlWriter);
			}
			if (localUltimoEnderecoInformadoTracker) {
				if (localUltimoEnderecoInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-endereco-informado cannot be null!!");
				}
				localUltimoEnderecoInformado.serialize(
						new javax.xml.namespace.QName("",
								"ultimo-endereco-informado"), factory,
						xmlWriter);
			}
			if (localParticipacaoEmpresaTracker) {
				if (localParticipacaoEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"participacao-empresa cannot be null!!");
				}
				localParticipacaoEmpresa.serialize(
						new javax.xml.namespace.QName("",
								"participacao-empresa"), factory, xmlWriter);
			}
			if (localSocioTracker) {
				if (localSocio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"socio cannot be null!!");
				}
				localSocio.serialize(
						new javax.xml.namespace.QName("", "socio"), factory,
						xmlWriter);
			}
			if (localAdministradorTracker) {
				if (localAdministrador == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"administrador cannot be null!!");
				}
				localAdministrador.serialize(new javax.xml.namespace.QName("",
						"administrador"), factory, xmlWriter);
			}
			if (localAlertaDocumentoTracker) {
				if (localAlertaDocumento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"alerta-documento cannot be null!!");
				}
				localAlertaDocumento.serialize(new javax.xml.namespace.QName(
						"", "alerta-documento"), factory, xmlWriter);
			}
			if (localSpcTracker) {
				if (localSpc == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc cannot be null!!");
				}
				localSpc.serialize(new javax.xml.namespace.QName("", "spc"),
						factory, xmlWriter);
			}
			if (localChequeLojistaTracker) {
				if (localChequeLojista == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-lojista cannot be null!!");
				}
				localChequeLojista.serialize(new javax.xml.namespace.QName("",
						"cheque-lojista"), factory, xmlWriter);
			}
			if (localCcfTracker) {
				if (localCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ccf cannot be null!!");
				}
				localCcf.serialize(new javax.xml.namespace.QName("", "ccf"),
						factory, xmlWriter);
			}
			if (localContraOrdemDocumentoDiferenteTracker) {
				if (localContraOrdemDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-documento-diferente cannot be null!!");
				}
				localContraOrdemDocumentoDiferente.serialize(
						new javax.xml.namespace.QName("",
								"contra-ordem-documento-diferente"), factory,
						xmlWriter);
			}
			if (localContraOrdemAgenciaDiferenteTracker) {
				if (localContraOrdemAgenciaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-agencia-diferente cannot be null!!");
				}
				localContraOrdemAgenciaDiferente.serialize(
						new javax.xml.namespace.QName("",
								"contra-ordem-agencia-diferente"), factory,
						xmlWriter);
			}
			if (localContraOrdemAgenciaContaDiferenteTracker) {
				if (localContraOrdemAgenciaContaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-agencia-conta-diferente cannot be null!!");
				}
				localContraOrdemAgenciaContaDiferente.serialize(
						new javax.xml.namespace.QName("",
								"contra-ordem-agencia-conta-diferente"),
						factory, xmlWriter);
			}
			if (localAcaoTracker) {
				if (localAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"acao cannot be null!!");
				}
				localAcao.serialize(new javax.xml.namespace.QName("", "acao"),
						factory, xmlWriter);
			}
			if (localProtestoTracker) {
				if (localProtesto == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"protesto cannot be null!!");
				}
				localProtesto.serialize(new javax.xml.namespace.QName("",
						"protesto"), factory, xmlWriter);
			}
			if (localContraOrdemTracker) {
				if (localContraOrdem == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem cannot be null!!");
				}
				localContraOrdem.serialize(new javax.xml.namespace.QName("",
						"contra-ordem"), factory, xmlWriter);
			}
			if (localContumaciaTracker) {
				if (localContumacia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contumacia cannot be null!!");
				}
				localContumacia.serialize(new javax.xml.namespace.QName("",
						"contumacia"), factory, xmlWriter);
			}
			if (localCreditoConcedidoTracker) {
				if (localCreditoConcedido == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"credito-concedido cannot be null!!");
				}
				localCreditoConcedido.serialize(new javax.xml.namespace.QName(
						"", "credito-concedido"), factory, xmlWriter);
			}
			if (localBancoAgenciaContaDocumentoDiferenteTracker) {
				if (localBancoAgenciaContaDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"banco-agencia-conta-documento-diferente cannot be null!!");
				}
				localBancoAgenciaContaDocumentoDiferente.serialize(
						new javax.xml.namespace.QName("",
								"banco-agencia-conta-documento-diferente"),
						factory, xmlWriter);
			}
			if (localDadosAgenciaBancariaTracker) {
				if (localDadosAgenciaBancaria == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-agencia-bancaria cannot be null!!");
				}
				localDadosAgenciaBancaria.serialize(
						new javax.xml.namespace.QName("",
								"dados-agencia-bancaria"), factory, xmlWriter);
			}
			if (localConsultaRealizadaTracker) {
				if (localConsultaRealizada == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consulta-realizada cannot be null!!");
				}
				localConsultaRealizada.serialize(new javax.xml.namespace.QName(
						"", "consulta-realizada"), factory, xmlWriter);
			}
			if (localInformacaoPoderJudiciarioTracker) {
				if (localInformacaoPoderJudiciario == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"informacao-poder-judiciario cannot be null!!");
				}
				localInformacaoPoderJudiciario.serialize(
						new javax.xml.namespace.QName("",
								"informacao-poder-judiciario"), factory,
						xmlWriter);
			}
			if (localRiskscoring6MesesTracker) {
				if (localRiskscoring6Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"riskscoring-6-meses cannot be null!!");
				}
				localRiskscoring6Meses.serialize(new javax.xml.namespace.QName(
						"", "riskscoring-6-meses"), factory, xmlWriter);
			}
			if (localRiskscoring12MesesTracker) {
				if (localRiskscoring12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"riskscoring-12-meses cannot be null!!");
				}
				localRiskscoring12Meses.serialize(
						new javax.xml.namespace.QName("",
								"riskscoring-12-meses"), factory, xmlWriter);
			}
			if (localChequeSemFundoAcheiTracker) {
				if (localChequeSemFundoAchei == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-sem-fundo-achei cannot be null!!");
				}
				localChequeSemFundoAchei.serialize(
						new javax.xml.namespace.QName("",
								"cheque-sem-fundo-achei"), factory, xmlWriter);
			}
			if (localChequeSemFundoAcheiCcfTracker) {
				if (localChequeSemFundoAcheiCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-sem-fundo-achei-ccf cannot be null!!");
				}
				localChequeSemFundoAcheiCcf.serialize(
						new javax.xml.namespace.QName("",
								"cheque-sem-fundo-achei-ccf"), factory,
						xmlWriter);
			}
			if (localContumaciaSrsTracker) {
				if (localContumaciaSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contumacia-srs cannot be null!!");
				}
				localContumaciaSrs.serialize(new javax.xml.namespace.QName("",
						"contumacia-srs"), factory, xmlWriter);
			}
			if (localParticipacaoFalenciaTracker) {
				if (localParticipacaoFalencia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"participacao-falencia cannot be null!!");
				}
				localParticipacaoFalencia.serialize(
						new javax.xml.namespace.QName("",
								"participacao-falencia"), factory, xmlWriter);
			}
			if (localRestricaoFinanceiraTracker) {
				if (localRestricaoFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"restricao-financeira cannot be null!!");
				}
				localRestricaoFinanceira.serialize(
						new javax.xml.namespace.QName("",
								"restricao-financeira"), factory, xmlWriter);
			}
			if (localPendenciaFinanceiraTracker) {
				if (localPendenciaFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"pendencia-financeira cannot be null!!");
				}
				localPendenciaFinanceira.serialize(
						new javax.xml.namespace.QName("",
								"pendencia-financeira"), factory, xmlWriter);
			}
			if (localChequeSemFundoVarejoTracker) {
				if (localChequeSemFundoVarejo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-sem-fundo-varejo cannot be null!!");
				}
				localChequeSemFundoVarejo.serialize(
						new javax.xml.namespace.QName("",
								"cheque-sem-fundo-varejo"), factory, xmlWriter);
			}
			if (localContraOrdemSrsTracker) {
				if (localContraOrdemSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-srs cannot be null!!");
				}
				localContraOrdemSrs.serialize(new javax.xml.namespace.QName("",
						"contra-ordem-srs"), factory, xmlWriter);
			}
			if (localContraOrdemDocumentoDiferenteSrsTracker) {
				if (localContraOrdemDocumentoDiferenteSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-documento-diferente-srs cannot be null!!");
				}
				localContraOrdemDocumentoDiferenteSrs.serialize(
						new javax.xml.namespace.QName("",
								"contra-ordem-documento-diferente-srs"),
						factory, xmlWriter);
			}
			if (localChequeOutrasOcorrenciasSrsTracker) {
				if (localChequeOutrasOcorrenciasSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-outras-ocorrencias-srs cannot be null!!");
				}
				localChequeOutrasOcorrenciasSrs.serialize(
						new javax.xml.namespace.QName("",
								"cheque-outras-ocorrencias-srs"), factory,
						xmlWriter);
			}
			if (localChequeConsultaOnlineSrsTracker) {
				if (localChequeConsultaOnlineSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-consulta-online-srs cannot be null!!");
				}
				localChequeConsultaOnlineSrs.serialize(
						new javax.xml.namespace.QName("",
								"cheque-consulta-online-srs"), factory,
						xmlWriter);
			}
			if (localConsultaRealizadaChequeTracker) {
				if (localConsultaRealizadaCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consulta-realizada-cheque cannot be null!!");
				}
				localConsultaRealizadaCheque.serialize(
						new javax.xml.namespace.QName("",
								"consulta-realizada-cheque"), factory,
						xmlWriter);
			}
			if (localReferenciaisNegociosTracker) {
				if (localReferenciaisNegocios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"referenciais-negocios cannot be null!!");
				}
				localReferenciaisNegocios.serialize(
						new javax.xml.namespace.QName("",
								"referenciais-negocios"), factory, xmlWriter);
			}
			if (localHistoricoPagamentoTracker) {
				if (localHistoricoPagamento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"historico-pagamento cannot be null!!");
				}
				localHistoricoPagamento
						.serialize(new javax.xml.namespace.QName("",
								"historico-pagamento"), factory, xmlWriter);
			}
			if (localRelacionamentoMaisAntigoComFornecedoresTracker) {
				if (localRelacionamentoMaisAntigoComFornecedores == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"relacionamento-mais-antigo-com-fornecedores cannot be null!!");
				}
				localRelacionamentoMaisAntigoComFornecedores.serialize(
						new javax.xml.namespace.QName("",
								"relacionamento-mais-antigo-com-fornecedores"),
						factory, xmlWriter);
			}
			if (localRegistroConsultaTracker) {
				if (localRegistroConsulta == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"registro-consulta cannot be null!!");
				}
				localRegistroConsulta.serialize(new javax.xml.namespace.QName(
						"", "registro-consulta"), factory, xmlWriter);
			}
			if (localUltimasConsultasTracker) {
				if (localUltimasConsultas == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimas-consultas cannot be null!!");
				}
				localUltimasConsultas.serialize(new javax.xml.namespace.QName(
						"", "ultimas-consultas"), factory, xmlWriter);
			}
			if (localCapitalSocialTracker) {
				if (localCapitalSocial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"capital-social cannot be null!!");
				}
				localCapitalSocial.serialize(new javax.xml.namespace.QName("",
						"capital-social"), factory, xmlWriter);
			}
			if (localAntecessoraTracker) {
				if (localAntecessora == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"antecessora cannot be null!!");
				}
				localAntecessora.serialize(new javax.xml.namespace.QName("",
						"antecessora"), factory, xmlWriter);
			}
			if (localAtividadeEmpresaTracker) {
				if (localAtividadeEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"atividade-empresa cannot be null!!");
				}
				localAtividadeEmpresa.serialize(new javax.xml.namespace.QName(
						"", "atividade-empresa"), factory, xmlWriter);
			}
			if (localFilialTracker) {
				if (localFilial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"filial cannot be null!!");
				}
				localFilial.serialize(new javax.xml.namespace.QName("",
						"filial"), factory, xmlWriter);
			}
			if (localInformacoesAdicionaisTracker) {
				if (localInformacoesAdicionais == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"informacoes-adicionais cannot be null!!");
				}
				localInformacoesAdicionais.serialize(
						new javax.xml.namespace.QName("",
								"informacoes-adicionais"), factory, xmlWriter);
			}
			if (localIncorporacaoFusaoCisaoTracker) {
				if (localIncorporacaoFusaoCisao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"incorporacao-fusao-cisao cannot be null!!");
				}
				localIncorporacaoFusaoCisao
						.serialize(new javax.xml.namespace.QName("",
								"incorporacao-fusao-cisao"), factory, xmlWriter);
			}
			if (localPrincipaisProdutosTracker) {
				if (localPrincipaisProdutos == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"principais-produtos cannot be null!!");
				}
				localPrincipaisProdutos
						.serialize(new javax.xml.namespace.QName("",
								"principais-produtos"), factory, xmlWriter);
			}
			if (localMensagemComplementarTracker) {
				if (localMensagemComplementar != null) {
					for (int i = 0; i < localMensagemComplementar.length; i++) {
						if (localMensagemComplementar[i] != null) {
							localMensagemComplementar[i].serialize(
									new javax.xml.namespace.QName("",
											"mensagem-complementar"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-complementar cannot be null!!");

				}
			}
			if (localSpcScore3MesesTracker) {
				if (localSpcScore3Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc-score-3-meses cannot be null!!");
				}
				localSpcScore3Meses.serialize(new javax.xml.namespace.QName("",
						"spc-score-3-meses"), factory, xmlWriter);
			}
			if (localSpcScore12MesesTracker) {
				if (localSpcScore12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc-score-12-meses cannot be null!!");
				}
				localSpcScore12Meses.serialize(new javax.xml.namespace.QName(
						"", "spc-score-12-meses"), factory, xmlWriter);
			}
			if (localSpcObitoTracker) {
				if (localSpcObito == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc-obito cannot be null!!");
				}
				localSpcObito.serialize(new javax.xml.namespace.QName("",
						"spc-obito"), factory, xmlWriter);
			}
			if (localConfirmacaoRgTracker) {
				if (localConfirmacaoRg == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"confirmacao-rg cannot be null!!");
				}
				localConfirmacaoRg.serialize(new javax.xml.namespace.QName("",
						"confirmacao-rg"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localProtocoloTracker) {
				elementList.add(new javax.xml.namespace.QName("", "protocolo"));

				if (localProtocolo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"protocolo cannot be null!!");
				}
				elementList.add(localProtocolo);
			}
			if (localOperadorTracker) {
				elementList.add(new javax.xml.namespace.QName("", "operador"));

				if (localOperador == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"operador cannot be null!!");
				}
				elementList.add(localOperador);
			}
			if (localBaseInoperanteTracker) {
				if (localBaseInoperante != null) {
					for (int i = 0; i < localBaseInoperante.length; i++) {

						if (localBaseInoperante[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"base-inoperante"));
							elementList
									.add(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(localBaseInoperante[i]));
						} else {

							// have to do nothing

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"base-inoperante cannot be null!!");

				}

			}
			if (localConsumidorTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "consumidor"));

				if (localConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consumidor cannot be null!!");
				}
				elementList.add(localConsumidor);
			}
			if (localGrafiaPjTracker) {
				elementList.add(new javax.xml.namespace.QName("", "grafia-pj"));

				if (localGrafiaPj == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"grafia-pj cannot be null!!");
				}
				elementList.add(localGrafiaPj);
			}
			if (localEnderecoCepConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"endereco-cep-consultado"));

				if (localEnderecoCepConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco-cep-consultado cannot be null!!");
				}
				elementList.add(localEnderecoCepConsultado);
			}
			if (localTelefoneConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-consultado"));

				if (localTelefoneConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-consultado cannot be null!!");
				}
				elementList.add(localTelefoneConsultado);
			}
			if (localTelefoneVinculadoConsumidorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-vinculado-consumidor"));

				if (localTelefoneVinculadoConsumidor == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-vinculado-consumidor cannot be null!!");
				}
				elementList.add(localTelefoneVinculadoConsumidor);
			}
			if (localTelefoneVinculadoAssinanteConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"telefone-vinculado-assinante-consultado"));

				if (localTelefoneVinculadoAssinanteConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"telefone-vinculado-assinante-consultado cannot be null!!");
				}
				elementList.add(localTelefoneVinculadoAssinanteConsultado);
			}
			if (localUltimoTelefoneInformadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ultimo-telefone-informado"));

				if (localUltimoTelefoneInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-telefone-informado cannot be null!!");
				}
				elementList.add(localUltimoTelefoneInformado);
			}
			if (localUltimoEnderecoInformadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ultimo-endereco-informado"));

				if (localUltimoEnderecoInformado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-endereco-informado cannot be null!!");
				}
				elementList.add(localUltimoEnderecoInformado);
			}
			if (localParticipacaoEmpresaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"participacao-empresa"));

				if (localParticipacaoEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"participacao-empresa cannot be null!!");
				}
				elementList.add(localParticipacaoEmpresa);
			}
			if (localSocioTracker) {
				elementList.add(new javax.xml.namespace.QName("", "socio"));

				if (localSocio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"socio cannot be null!!");
				}
				elementList.add(localSocio);
			}
			if (localAdministradorTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"administrador"));

				if (localAdministrador == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"administrador cannot be null!!");
				}
				elementList.add(localAdministrador);
			}
			if (localAlertaDocumentoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"alerta-documento"));

				if (localAlertaDocumento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"alerta-documento cannot be null!!");
				}
				elementList.add(localAlertaDocumento);
			}
			if (localSpcTracker) {
				elementList.add(new javax.xml.namespace.QName("", "spc"));

				if (localSpc == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc cannot be null!!");
				}
				elementList.add(localSpc);
			}
			if (localChequeLojistaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-lojista"));

				if (localChequeLojista == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-lojista cannot be null!!");
				}
				elementList.add(localChequeLojista);
			}
			if (localCcfTracker) {
				elementList.add(new javax.xml.namespace.QName("", "ccf"));

				if (localCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ccf cannot be null!!");
				}
				elementList.add(localCcf);
			}
			if (localContraOrdemDocumentoDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contra-ordem-documento-diferente"));

				if (localContraOrdemDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-documento-diferente cannot be null!!");
				}
				elementList.add(localContraOrdemDocumentoDiferente);
			}
			if (localContraOrdemAgenciaDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contra-ordem-agencia-diferente"));

				if (localContraOrdemAgenciaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-agencia-diferente cannot be null!!");
				}
				elementList.add(localContraOrdemAgenciaDiferente);
			}
			if (localContraOrdemAgenciaContaDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contra-ordem-agencia-conta-diferente"));

				if (localContraOrdemAgenciaContaDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-agencia-conta-diferente cannot be null!!");
				}
				elementList.add(localContraOrdemAgenciaContaDiferente);
			}
			if (localAcaoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "acao"));

				if (localAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"acao cannot be null!!");
				}
				elementList.add(localAcao);
			}
			if (localProtestoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "protesto"));

				if (localProtesto == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"protesto cannot be null!!");
				}
				elementList.add(localProtesto);
			}
			if (localContraOrdemTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contra-ordem"));

				if (localContraOrdem == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem cannot be null!!");
				}
				elementList.add(localContraOrdem);
			}
			if (localContumaciaTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "contumacia"));

				if (localContumacia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contumacia cannot be null!!");
				}
				elementList.add(localContumacia);
			}
			if (localCreditoConcedidoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"credito-concedido"));

				if (localCreditoConcedido == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"credito-concedido cannot be null!!");
				}
				elementList.add(localCreditoConcedido);
			}
			if (localBancoAgenciaContaDocumentoDiferenteTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"banco-agencia-conta-documento-diferente"));

				if (localBancoAgenciaContaDocumentoDiferente == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"banco-agencia-conta-documento-diferente cannot be null!!");
				}
				elementList.add(localBancoAgenciaContaDocumentoDiferente);
			}
			if (localDadosAgenciaBancariaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-agencia-bancaria"));

				if (localDadosAgenciaBancaria == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-agencia-bancaria cannot be null!!");
				}
				elementList.add(localDadosAgenciaBancaria);
			}
			if (localConsultaRealizadaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"consulta-realizada"));

				if (localConsultaRealizada == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consulta-realizada cannot be null!!");
				}
				elementList.add(localConsultaRealizada);
			}
			if (localInformacaoPoderJudiciarioTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"informacao-poder-judiciario"));

				if (localInformacaoPoderJudiciario == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"informacao-poder-judiciario cannot be null!!");
				}
				elementList.add(localInformacaoPoderJudiciario);
			}
			if (localRiskscoring6MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"riskscoring-6-meses"));

				if (localRiskscoring6Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"riskscoring-6-meses cannot be null!!");
				}
				elementList.add(localRiskscoring6Meses);
			}
			if (localRiskscoring12MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"riskscoring-12-meses"));

				if (localRiskscoring12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"riskscoring-12-meses cannot be null!!");
				}
				elementList.add(localRiskscoring12Meses);
			}
			if (localChequeSemFundoAcheiTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-sem-fundo-achei"));

				if (localChequeSemFundoAchei == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-sem-fundo-achei cannot be null!!");
				}
				elementList.add(localChequeSemFundoAchei);
			}
			if (localChequeSemFundoAcheiCcfTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-sem-fundo-achei-ccf"));

				if (localChequeSemFundoAcheiCcf == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-sem-fundo-achei-ccf cannot be null!!");
				}
				elementList.add(localChequeSemFundoAcheiCcf);
			}
			if (localContumaciaSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contumacia-srs"));

				if (localContumaciaSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contumacia-srs cannot be null!!");
				}
				elementList.add(localContumaciaSrs);
			}
			if (localParticipacaoFalenciaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"participacao-falencia"));

				if (localParticipacaoFalencia == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"participacao-falencia cannot be null!!");
				}
				elementList.add(localParticipacaoFalencia);
			}
			if (localRestricaoFinanceiraTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"restricao-financeira"));

				if (localRestricaoFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"restricao-financeira cannot be null!!");
				}
				elementList.add(localRestricaoFinanceira);
			}
			if (localPendenciaFinanceiraTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"pendencia-financeira"));

				if (localPendenciaFinanceira == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"pendencia-financeira cannot be null!!");
				}
				elementList.add(localPendenciaFinanceira);
			}
			if (localChequeSemFundoVarejoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-sem-fundo-varejo"));

				if (localChequeSemFundoVarejo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-sem-fundo-varejo cannot be null!!");
				}
				elementList.add(localChequeSemFundoVarejo);
			}
			if (localContraOrdemSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contra-ordem-srs"));

				if (localContraOrdemSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-srs cannot be null!!");
				}
				elementList.add(localContraOrdemSrs);
			}
			if (localContraOrdemDocumentoDiferenteSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"contra-ordem-documento-diferente-srs"));

				if (localContraOrdemDocumentoDiferenteSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"contra-ordem-documento-diferente-srs cannot be null!!");
				}
				elementList.add(localContraOrdemDocumentoDiferenteSrs);
			}
			if (localChequeOutrasOcorrenciasSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-outras-ocorrencias-srs"));

				if (localChequeOutrasOcorrenciasSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-outras-ocorrencias-srs cannot be null!!");
				}
				elementList.add(localChequeOutrasOcorrenciasSrs);
			}
			if (localChequeConsultaOnlineSrsTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-consulta-online-srs"));

				if (localChequeConsultaOnlineSrs == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-consulta-online-srs cannot be null!!");
				}
				elementList.add(localChequeConsultaOnlineSrs);
			}
			if (localConsultaRealizadaChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"consulta-realizada-cheque"));

				if (localConsultaRealizadaCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"consulta-realizada-cheque cannot be null!!");
				}
				elementList.add(localConsultaRealizadaCheque);
			}
			if (localReferenciaisNegociosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"referenciais-negocios"));

				if (localReferenciaisNegocios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"referenciais-negocios cannot be null!!");
				}
				elementList.add(localReferenciaisNegocios);
			}
			if (localHistoricoPagamentoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"historico-pagamento"));

				if (localHistoricoPagamento == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"historico-pagamento cannot be null!!");
				}
				elementList.add(localHistoricoPagamento);
			}
			if (localRelacionamentoMaisAntigoComFornecedoresTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"relacionamento-mais-antigo-com-fornecedores"));

				if (localRelacionamentoMaisAntigoComFornecedores == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"relacionamento-mais-antigo-com-fornecedores cannot be null!!");
				}
				elementList.add(localRelacionamentoMaisAntigoComFornecedores);
			}
			if (localRegistroConsultaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"registro-consulta"));

				if (localRegistroConsulta == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"registro-consulta cannot be null!!");
				}
				elementList.add(localRegistroConsulta);
			}
			if (localUltimasConsultasTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ultimas-consultas"));

				if (localUltimasConsultas == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimas-consultas cannot be null!!");
				}
				elementList.add(localUltimasConsultas);
			}
			if (localCapitalSocialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"capital-social"));

				if (localCapitalSocial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"capital-social cannot be null!!");
				}
				elementList.add(localCapitalSocial);
			}
			if (localAntecessoraTracker) {
				elementList
						.add(new javax.xml.namespace.QName("", "antecessora"));

				if (localAntecessora == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"antecessora cannot be null!!");
				}
				elementList.add(localAntecessora);
			}
			if (localAtividadeEmpresaTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"atividade-empresa"));

				if (localAtividadeEmpresa == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"atividade-empresa cannot be null!!");
				}
				elementList.add(localAtividadeEmpresa);
			}
			if (localFilialTracker) {
				elementList.add(new javax.xml.namespace.QName("", "filial"));

				if (localFilial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"filial cannot be null!!");
				}
				elementList.add(localFilial);
			}
			if (localInformacoesAdicionaisTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"informacoes-adicionais"));

				if (localInformacoesAdicionais == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"informacoes-adicionais cannot be null!!");
				}
				elementList.add(localInformacoesAdicionais);
			}
			if (localIncorporacaoFusaoCisaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"incorporacao-fusao-cisao"));

				if (localIncorporacaoFusaoCisao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"incorporacao-fusao-cisao cannot be null!!");
				}
				elementList.add(localIncorporacaoFusaoCisao);
			}
			if (localPrincipaisProdutosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"principais-produtos"));

				if (localPrincipaisProdutos == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"principais-produtos cannot be null!!");
				}
				elementList.add(localPrincipaisProdutos);
			}
			if (localMensagemComplementarTracker) {
				if (localMensagemComplementar != null) {
					for (int i = 0; i < localMensagemComplementar.length; i++) {

						if (localMensagemComplementar[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"mensagem-complementar"));
							elementList.add(localMensagemComplementar[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-complementar cannot be null!!");

				}

			}
			if (localSpcScore3MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"spc-score-3-meses"));

				if (localSpcScore3Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc-score-3-meses cannot be null!!");
				}
				elementList.add(localSpcScore3Meses);
			}
			if (localSpcScore12MesesTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"spc-score-12-meses"));

				if (localSpcScore12Meses == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc-score-12-meses cannot be null!!");
				}
				elementList.add(localSpcScore12Meses);
			}
			if (localSpcObitoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "spc-obito"));

				if (localSpcObito == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"spc-obito cannot be null!!");
				}
				elementList.add(localSpcObito);
			}
			if (localConfirmacaoRgTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"confirmacao-rg"));

				if (localConfirmacaoRg == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"confirmacao-rg cannot be null!!");
				}
				elementList.add(localConfirmacaoRg);
			}
			attribList.add(new javax.xml.namespace.QName("", "restricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRestricao));

			attribList.add(new javax.xml.namespace.QName("", "data"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localData));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoConsulta parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoConsulta object = new ResultadoConsulta();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resultado-Consulta".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResultadoConsulta) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "restricao"
					java.lang.String tempAttribRestricao =

					reader.getAttributeValue(null, "restricao");

					if (tempAttribRestricao != null) {
						java.lang.String content = tempAttribRestricao;

						object.setRestricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribRestricao));

					} else {

					}
					handledAttributes.add("restricao");

					// handle attribute "data"
					java.lang.String tempAttribData =

					reader.getAttributeValue(null, "data");

					if (tempAttribData != null) {
						java.lang.String content = tempAttribData;

						object.setData(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribData));

					} else {

					}
					handledAttributes.add("data");

					reader.next();

					java.util.ArrayList list3 = new java.util.ArrayList();

					java.util.ArrayList list57 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "protocolo")
									.equals(reader.getName())) {

						object.setProtocolo(ProtocoloConsulta.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "operador")
									.equals(reader.getName())) {

						object.setOperador(Operador.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"base-inoperante").equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list3.add(reader.getElementText());

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone3 = false;
						while (!loopDone3) {
							// Ensure we are at the EndElement
							while (!reader.isEndElement()) {
								reader.next();
							}
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone3 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"base-inoperante").equals(reader
										.getName())) {
									list3.add(reader.getElementText());

								} else {
									loopDone3 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setBaseInoperante((java.lang.String[]) list3
								.toArray(new java.lang.String[list3.size()]));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "consumidor")
									.equals(reader.getName())) {

						object.setConsumidor(ResultadoConsumidor.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "grafia-pj")
									.equals(reader.getName())) {

						object.setGrafiaPj(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"endereco-cep-consultado").equals(reader
									.getName())) {

						object.setEnderecoCepConsultado(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-consultado").equals(reader
									.getName())) {

						object.setTelefoneConsultado(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-vinculado-consumidor")
									.equals(reader.getName())) {

						object.setTelefoneVinculadoConsumidor(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"telefone-vinculado-assinante-consultado")
									.equals(reader.getName())) {

						object.setTelefoneVinculadoAssinanteConsultado(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ultimo-telefone-informado").equals(reader
									.getName())) {

						object.setUltimoTelefoneInformado(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ultimo-endereco-informado").equals(reader
									.getName())) {

						object.setUltimoEnderecoInformado(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"participacao-empresa").equals(reader
									.getName())) {

						object.setParticipacaoEmpresa(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "socio")
									.equals(reader.getName())) {

						object.setSocio(ResultadoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"administrador").equals(reader.getName())) {

						object.setAdministrador(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"alerta-documento")
									.equals(reader.getName())) {

						object.setAlertaDocumento(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "spc")
									.equals(reader.getName())) {

						object.setSpc(ResultadoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-lojista").equals(reader.getName())) {

						object.setChequeLojista(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "ccf")
									.equals(reader.getName())) {

						object.setCcf(ResultadoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"contra-ordem-documento-diferente")
									.equals(reader.getName())) {

						object.setContraOrdemDocumentoDiferente(ResultadoInsumoContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"contra-ordem-agencia-diferente")
									.equals(reader.getName())) {

						object.setContraOrdemAgenciaDiferente(ResultadoInsumoContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"contra-ordem-agencia-conta-diferente")
									.equals(reader.getName())) {

						object.setContraOrdemAgenciaContaDiferente(ResultadoInsumoContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "acao")
									.equals(reader.getName())) {

						object.setAcao(ResultadoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "protesto")
									.equals(reader.getName())) {

						object.setProtesto(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "contra-ordem")
									.equals(reader.getName())) {

						object.setContraOrdem(ResultadoInsumoContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "contumacia")
									.equals(reader.getName())) {

						object.setContumacia(ResultadoInsumoContumacia.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"credito-concedido").equals(reader
									.getName())) {

						object.setCreditoConcedido(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"banco-agencia-conta-documento-diferente")
									.equals(reader.getName())) {

						object.setBancoAgenciaContaDocumentoDiferente(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-agencia-bancaria").equals(reader
									.getName())) {

						object.setDadosAgenciaBancaria(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"consulta-realizada").equals(reader
									.getName())) {

						object.setConsultaRealizada(ResultadoInsumoConsultaRealizada.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"informacao-poder-judiciario")
									.equals(reader.getName())) {

						object.setInformacaoPoderJudiciario(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"riskscoring-6-meses").equals(reader
									.getName())) {

						object.setRiskscoring6Meses(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"riskscoring-12-meses").equals(reader
									.getName())) {

						object.setRiskscoring12Meses(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-sem-fundo-achei").equals(reader
									.getName())) {

						object.setChequeSemFundoAchei(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-sem-fundo-achei-ccf").equals(reader
									.getName())) {

						object.setChequeSemFundoAcheiCcf(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"contumacia-srs").equals(reader.getName())) {

						object.setContumaciaSrs(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"participacao-falencia").equals(reader
									.getName())) {

						object.setParticipacaoFalencia(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"restricao-financeira").equals(reader
									.getName())) {

						object.setRestricaoFinanceira(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"pendencia-financeira").equals(reader
									.getName())) {

						object.setPendenciaFinanceira(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-sem-fundo-varejo").equals(reader
									.getName())) {

						object.setChequeSemFundoVarejo(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"contra-ordem-srs")
									.equals(reader.getName())) {

						object.setContraOrdemSrs(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"contra-ordem-documento-diferente-srs")
									.equals(reader.getName())) {

						object.setContraOrdemDocumentoDiferenteSrs(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-outras-ocorrencias-srs")
									.equals(reader.getName())) {

						object.setChequeOutrasOcorrenciasSrs(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-consulta-online-srs").equals(reader
									.getName())) {

						object.setChequeConsultaOnlineSrs(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"consulta-realizada-cheque").equals(reader
									.getName())) {

						object.setConsultaRealizadaCheque(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"referenciais-negocios").equals(reader
									.getName())) {

						object.setReferenciaisNegocios(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"historico-pagamento").equals(reader
									.getName())) {

						object.setHistoricoPagamento(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"relacionamento-mais-antigo-com-fornecedores")
									.equals(reader.getName())) {

						object.setRelacionamentoMaisAntigoComFornecedores(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"registro-consulta").equals(reader
									.getName())) {

						object.setRegistroConsulta(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ultimas-consultas").equals(reader
									.getName())) {

						object.setUltimasConsultas(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"capital-social").equals(reader.getName())) {

						object.setCapitalSocial(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "antecessora")
									.equals(reader.getName())) {

						object.setAntecessora(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"atividade-empresa").equals(reader
									.getName())) {

						object.setAtividadeEmpresa(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "filial")
									.equals(reader.getName())) {

						object.setFilial(ResultadoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"informacoes-adicionais").equals(reader
									.getName())) {

						object.setInformacoesAdicionais(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"incorporacao-fusao-cisao").equals(reader
									.getName())) {

						object.setIncorporacaoFusaoCisao(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"principais-produtos").equals(reader
									.getName())) {

						object.setPrincipaisProdutos(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-complementar").equals(reader
									.getName())) {

						// Process the array and step past its final element's
						// end.
						list57.add(MensagemComplementar.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone57 = false;
						while (!loopDone57) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone57 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"mensagem-complementar").equals(reader
										.getName())) {
									list57.add(MensagemComplementar.Factory
											.parse(reader));

								} else {
									loopDone57 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setMensagemComplementar((MensagemComplementar[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(MensagemComplementar.class,
										list57));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"spc-score-3-meses").equals(reader
									.getName())) {

						object.setSpcScore3Meses(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"spc-score-12-meses").equals(reader
									.getName())) {

						object.setSpcScore12Meses(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "spc-obito")
									.equals(reader.getName())) {

						object.setSpcObito(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"confirmacao-rg").equals(reader.getName())) {

						object.setConfirmacaoRg(ResultadoInsumo.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoRg implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Rg Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Foto This was an Attribute!
		 */

		protected java.lang.String localFoto;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getFoto() {
			return localFoto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Foto
		 */
		public void setFoto(java.lang.String param) {

			this.localFoto = param;

		}

		/**
		 * field for Municipio This was an Attribute!
		 */

		protected java.lang.String localMunicipio;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMunicipio() {
			return localMunicipio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Municipio
		 */
		public void setMunicipio(java.lang.String param) {

			this.localMunicipio = param;

		}

		/**
		 * field for NomePai This was an Attribute!
		 */

		protected java.lang.String localNomePai;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomePai() {
			return localNomePai;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomePai
		 */
		public void setNomePai(java.lang.String param) {

			this.localNomePai = param;

		}

		/**
		 * field for NomeMae This was an Attribute!
		 */

		protected java.lang.String localNomeMae;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeMae() {
			return localNomeMae;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeMae
		 */
		public void setNomeMae(java.lang.String param) {

			this.localNomeMae = param;

		}

		/**
		 * field for DataNascimentoRg This was an Attribute!
		 */

		protected java.util.Calendar localDataNascimentoRg;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataNascimentoRg() {
			return localDataNascimentoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataNascimentoRg
		 */
		public void setDataNascimentoRg(java.util.Calendar param) {

			this.localDataNascimentoRg = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * field for UfEmissaoRg This was an Attribute!
		 */

		protected java.lang.String localUfEmissaoRg;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getUfEmissaoRg() {
			return localUfEmissaoRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UfEmissaoRg
		 */
		public void setUfEmissaoRg(java.lang.String param) {

			this.localUfEmissaoRg = param;

		}

		/**
		 * field for NumeroRg This was an Attribute!
		 */

		protected java.lang.String localNumeroRg;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroRg() {
			return localNumeroRg;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroRg
		 */
		public void setNumeroRg(java.lang.String param) {

			this.localNumeroRg = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoRg.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Rg", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Rg", xmlWriter);
				}

			}

			if (localFoto != null) {

				writeAttribute("", "foto",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFoto), xmlWriter);

			}

			if (localMunicipio != null) {

				writeAttribute("", "municipio",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMunicipio), xmlWriter);

			}

			if (localNomePai != null) {

				writeAttribute("", "nome-pai",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomePai), xmlWriter);

			}

			if (localNomeMae != null) {

				writeAttribute("", "nome-mae",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeMae), xmlWriter);

			}

			if (localDataNascimentoRg != null) {

				writeAttribute("", "data-nascimento-rg",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataNascimentoRg),
						xmlWriter);

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (localUfEmissaoRg != null) {

				writeAttribute("", "uf-emissao-rg",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localUfEmissaoRg), xmlWriter);

			}

			if (localNumeroRg != null) {

				writeAttribute("", "numero-rg",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroRg), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "foto"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFoto));

			attribList.add(new javax.xml.namespace.QName("", "municipio"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMunicipio));

			attribList.add(new javax.xml.namespace.QName("", "nome-pai"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomePai));

			attribList.add(new javax.xml.namespace.QName("", "nome-mae"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeMae));

			attribList.add(new javax.xml.namespace.QName("",
					"data-nascimento-rg"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataNascimentoRg));

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("", "uf-emissao-rg"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localUfEmissaoRg));

			attribList.add(new javax.xml.namespace.QName("", "numero-rg"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroRg));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoRg parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoRg object = new InsumoRg();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Rg".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoRg) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "foto"
					java.lang.String tempAttribFoto =

					reader.getAttributeValue(null, "foto");

					if (tempAttribFoto != null) {
						java.lang.String content = tempAttribFoto;

						object.setFoto(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribFoto));

					} else {

					}
					handledAttributes.add("foto");

					// handle attribute "municipio"
					java.lang.String tempAttribMunicipio =

					reader.getAttributeValue(null, "municipio");

					if (tempAttribMunicipio != null) {
						java.lang.String content = tempAttribMunicipio;

						object.setMunicipio(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMunicipio));

					} else {

					}
					handledAttributes.add("municipio");

					// handle attribute "nome-pai"
					java.lang.String tempAttribNomePai =

					reader.getAttributeValue(null, "nome-pai");

					if (tempAttribNomePai != null) {
						java.lang.String content = tempAttribNomePai;

						object.setNomePai(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomePai));

					} else {

					}
					handledAttributes.add("nome-pai");

					// handle attribute "nome-mae"
					java.lang.String tempAttribNomeMae =

					reader.getAttributeValue(null, "nome-mae");

					if (tempAttribNomeMae != null) {
						java.lang.String content = tempAttribNomeMae;

						object.setNomeMae(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeMae));

					} else {

					}
					handledAttributes.add("nome-mae");

					// handle attribute "data-nascimento-rg"
					java.lang.String tempAttribDataNascimentoRg =

					reader.getAttributeValue(null, "data-nascimento-rg");

					if (tempAttribDataNascimentoRg != null) {
						java.lang.String content = tempAttribDataNascimentoRg;

						object.setDataNascimentoRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataNascimentoRg));

					} else {

					}
					handledAttributes.add("data-nascimento-rg");

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "uf-emissao-rg"
					java.lang.String tempAttribUfEmissaoRg =

					reader.getAttributeValue(null, "uf-emissao-rg");

					if (tempAttribUfEmissaoRg != null) {
						java.lang.String content = tempAttribUfEmissaoRg;

						object.setUfEmissaoRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribUfEmissaoRg));

					} else {

					}
					handledAttributes.add("uf-emissao-rg");

					// handle attribute "numero-rg"
					java.lang.String tempAttribNumeroRg =

					reader.getAttributeValue(null, "numero-rg");

					if (tempAttribNumeroRg != null) {
						java.lang.String content = tempAttribNumeroRg;

						object.setNumeroRg(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroRg));

					} else {

					}
					handledAttributes.add("numero-rg");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ExtensionMapper {

		public static java.lang.Object getTypeObject(
				java.lang.String namespaceURI, java.lang.String typeName,
				javax.xml.stream.XMLStreamReader reader)
				throws java.lang.Exception {

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Cheque-Contra-Ordem".equals(typeName)) {

				return ChequeContraOrdem.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Historico-Conta-Corrente".equals(typeName)) {

				return InsumoHistoricoContaCorrente.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-Produto".equals(typeName)) {

				return InsumoProduto.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Resultado-Insumo-Consulta-Realizada".equals(typeName)) {

				return ResultadoInsumoConsultaRealizada.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-SPC-Score-3-Meses".equals(typeName)) {

				return InsumoSPCScore3Meses.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Endereco-CEP-Consultado".equals(typeName)) {

				return InsumoEnderecoCEPConsultado.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Filtro-Consulta".equals(typeName)) {

				return FiltroConsulta.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Principais-Produtos".equals(typeName)) {

				return InsumoPrincipaisProdutos.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Estado-Civil".equals(typeName)) {

				return EstadoCivil.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Subjudice".equals(typeName)) {

				return Subjudice.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Cheque-Outras-Ocorrencias-SRS".equals(typeName)) {

				return InsumoChequeOutrasOcorrenciasSRS.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-Rg".equals(typeName)) {

				return InsumoRg.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cnpj".equals(typeName)) {

				return Cnpj.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Informacao-Poder-Judiciario".equals(typeName)) {

				return InsumoInformacaoPoderJudiciario.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Telefone-Filtro".equals(typeName)) {

				return TelefoneFiltro.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Telefone-Vinculado-Assinante-Consultado"
							.equals(typeName)) {

				return InsumoTelefoneVinculadoAssinanteConsultado.Factory
						.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contumacia-SRS".equals(typeName)) {

				return InsumoContumaciaSRS.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contra-Ordem".equals(typeName)) {

				return InsumoContraOrdem.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Informacoes-Adicionais".equals(typeName)) {

				return InsumoInformacoesAdicionais.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-Protesto".equals(typeName)) {

				return InsumoProtesto.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Cheque-Consulta-Online-SRS".equals(typeName)) {

				return InsumoChequeConsultaOnlineSRS.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Endereco".equals(typeName)) {

				return Endereco.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Agencia-Conta-Documento-Diferente".equals(typeName)) {

				return AgenciaContaDocumentoDiferente.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Tipo-Acao".equals(typeName)) {

				return TipoAcao.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cheque".equals(typeName)) {

				return Cheque.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Operador".equals(typeName)) {

				return Operador.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Referencia-Comercial".equals(typeName)) {

				return ReferenciaComercial.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Natureza-Juridica".equals(typeName)) {

				return NaturezaJuridica.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Cheque-Sem-Fundo-Achei-CCF".equals(typeName)) {

				return InsumoChequeSemFundoAcheiCCF.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Pessoa-Fisica".equals(typeName)) {

				return PessoaFisica.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Sexo".equals(typeName)) {

				return Sexo.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-CCF".equals(typeName)) {

				return InsumoCCF.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Grafia-PJ".equals(typeName)) {

				return GrafiaPJ.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Signo".equals(typeName)) {

				return Signo.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Pendencia-Financeira".equals(typeName)) {

				return InsumoPendenciaFinanceira.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Mensagem-Complementar".equals(typeName)) {

				return MensagemComplementar.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Estado".equals(typeName)) {

				return Estado.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cartorio-Obito".equals(typeName)) {

				return CartorioObito.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Lista-Produto".equals(typeName)) {

				return ListaProduto.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Tipo-Assinante-Telefone".equals(typeName)) {

				return TipoAssinanteTelefone.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contra-Ordem-Agencia-Conta-Diferente"
							.equals(typeName)) {

				return InsumoContraOrdemAgenciaContaDiferente.Factory
						.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Quadro-Societario".equals(typeName)) {

				return InsumoQuadroSocietario.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Consulta-Realizada-Cheque".equals(typeName)) {

				return InsumoConsultaRealizadaCheque.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Natureza-Anotacao".equals(typeName)) {

				return NaturezaAnotacao.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Pessoa-Juridica".equals(typeName)) {

				return PessoaJuridica.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Carta-Anuencia".equals(typeName)) {

				return CartaAnuencia.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contra-Ordem-Documento-Diferente-SRS"
							.equals(typeName)) {

				return InsumoContraOrdemDocumentoDiferenteSRS.Factory
						.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Telefone".equals(typeName)) {

				return Telefone.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Participacao-Empresas".equals(typeName)) {

				return InsumoParticipacaoEmpresas.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Cheque-Sem-Fundo-Varejo".equals(typeName)) {

				return InsumoChequeSemFundoVarejo.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Cheque-Sem-Fundo-Achei".equals(typeName)) {

				return InsumoChequeSemFundoAchei.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contra-Ordem-Documento-Diferente"
							.equals(typeName)) {

				return InsumoContraOrdemDocumentoDiferente.Factory
						.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Telefone-Consultado".equals(typeName)) {

				return InsumoTelefoneConsultado.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Tipo-Pessoa".equals(typeName)) {

				return TipoPessoa.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Resultado-Insumo-Contumacia".equals(typeName)) {

				return ResultadoInsumoContumacia.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Ramo-Atividade".equals(typeName)) {

				return RamoAtividade.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contumacia".equals(typeName)) {

				return InsumoContumacia.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Banco".equals(typeName)) {

				return Banco.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Pais".equals(typeName)) {

				return Pais.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Alinea".equals(typeName)) {

				return Alinea.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Assinante-Telefone".equals(typeName)) {

				return AssinanteTelefone.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Dados-Bancarios".equals(typeName)) {

				return DadosBancarios.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Tipo-Documento-Alerta".equals(typeName)) {

				return TipoDocumentoAlerta.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Dados-Telefone-Consultado".equals(typeName)) {

				return InsumoDadosTelefoneConsultado.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-SPC".equals(typeName)) {

				return InsumoSPC.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-Filial".equals(typeName)) {

				return InsumoFilial.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-Obito".equals(typeName)) {

				return InsumoObito.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Registro-Consultas".equals(typeName)) {

				return InsumoRegistroConsultas.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Telefone-Vinculado-Consumidor".equals(typeName)) {

				return InsumoTelefoneVinculadoConsumidor.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Insumo-Acao".equals(typeName)) {

				return InsumoAcao.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cep".equals(typeName)) {

				return Cep.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Quadro-Administrativo".equals(typeName)) {

				return InsumoQuadroAdministrativo.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Parametro-Produto".equals(typeName)) {

				return ParametroProduto.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Protocolo-Consulta".equals(typeName)) {

				return ProtocoloConsulta.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Resumo-Insumo".equals(typeName)) {

				return ResumoInsumo.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Resultado-Insumo".equals(typeName)) {

				return ResultadoInsumo.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Resultado-Insumo-Contra-Ordem".equals(typeName)) {

				return ResultadoInsumoContraOrdem.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cheque-Final".equals(typeName)) {

				return ChequeFinal.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Endereco-Assinante-Telefone".equals(typeName)) {

				return EnderecoAssinanteTelefone.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Resultado-Consulta".equals(typeName)) {

				return ResultadoConsulta.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Vara".equals(typeName)) {

				return Vara.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Dados-Agencia-Bancaria".equals(typeName)) {

				return DadosAgenciaBancaria.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Produto".equals(typeName)) {

				return Produto.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Incorporacao-Fusao-Cisao".equals(typeName)) {

				return InsumoIncorporacaoFusaoCisao.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cartorio".equals(typeName)) {

				return Cartorio.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cheque-Filtro".equals(typeName)) {

				return ChequeFiltro.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-SPC-Score-12-Meses".equals(typeName)) {

				return InsumoSPCScore12Meses.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Resultado-Consumidor".equals(typeName)) {

				return ResultadoConsumidor.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Endereco-Ocorrencia-Consumidor".equals(typeName)) {

				return EnderecoOcorrenciaConsumidor.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Ultimas-Consultas".equals(typeName)) {

				return InsumoUltimasConsultas.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Relacionamento-Mais-Antigo-Com-Fornecedores"
							.equals(typeName)) {

				return InsumoRelacionamentoMaisAntigoComFornecedores.Factory
						.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Moeda".equals(typeName)) {

				return Moeda.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Credito-Concedido".equals(typeName)) {

				return InsumoCreditoConcedido.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contra-Ordem-Agencia-Diferente".equals(typeName)) {

				return InsumoContraOrdemAgenciaDiferente.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Ocorrencia-Recheque-Online".equals(typeName)) {

				return OcorrenciaRechequeOnline.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Historico-Cheque-Documento-Diferente"
							.equals(typeName)) {

				return InsumoHistoricoChequeDocumentoDiferente.Factory
						.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cidade".equals(typeName)) {

				return Cidade.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Situacao-Documento-WS".equals(typeName)) {

				return SituacaoDocumentoWS.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cpf".equals(typeName)) {

				return Cpf.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Historico-Pagamento".equals(typeName)) {

				return InsumoHistoricoPagamento.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Riskscoring-6-Meses".equals(typeName)) {

				return InsumoRiskscoring6Meses.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Consulta-Realizada".equals(typeName)) {

				return InsumoConsultaRealizada.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Alerta-Documento".equals(typeName)) {

				return InsumoAlertaDocumento.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Cheque-Lojista".equals(typeName)) {

				return InsumoChequeLojista.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Mensagem-Riskscoring".equals(typeName)) {

				return MensagemRiskscoring.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Historico-Cheque".equals(typeName)) {

				return InsumoHistoricoCheque.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Divida-Vencida".equals(typeName)) {

				return InsumoDividaVencida.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Antecessora".equals(typeName)) {

				return InsumoAntecessora.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Atividade-Empresa".equals(typeName)) {

				return InsumoAtividadeEmpresa.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Contra-Ordem-SRS".equals(typeName)) {

				return InsumoContraOrdemSRS.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Referenciais-Negocios".equals(typeName)) {

				return InsumoReferenciaisNegocios.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Capital-Social".equals(typeName)) {

				return InsumoCapitalSocial.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Ocorrencia-Consumidor".equals(typeName)) {

				return InsumoOcorrenciaConsumidor.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Riskscoring-12-Meses".equals(typeName)) {

				return InsumoRiskscoring12Meses.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Restricao-Financeira".equals(typeName)) {

				return InsumoRestricaoFinanceira.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI) && "Cheque-Lojista".equals(typeName)) {

				return ChequeLojista.Factory.parse(reader);

			}

			if ("http://webservice.consulta.spcjava.spcbrasil.org/"
					.equals(namespaceURI)
					&& "Insumo-Participacao-Falencia".equals(typeName)) {

				return InsumoParticipacaoFalencia.Factory.parse(reader);

			}

			throw new org.apache.axis2.databinding.ADBException(
					"Unsupported type " + namespaceURI + " " + typeName);
		}

	}

	public static class RamoAtividade implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Ramo-Atividade Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Descricao This was an Attribute!
		 */

		protected java.lang.String localDescricao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricao() {
			return localDescricao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Descricao
		 */
		public void setDescricao(java.lang.String param) {

			this.localDescricao = param;

		}

		/**
		 * field for Codigo This was an Attribute!
		 */

		protected long localCodigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(long param) {

			this.localCodigo = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					RamoAtividade.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Ramo-Atividade",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Ramo-Atividade", xmlWriter);
				}

			}

			if (localDescricao != null) {

				writeAttribute("", "descricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricao), xmlWriter);

			}

			if (localCodigo != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "codigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigo), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "descricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricao));

			attribList.add(new javax.xml.namespace.QName("", "codigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static RamoAtividade parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				RamoAtividade object = new RamoAtividade();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Ramo-Atividade".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (RamoAtividade) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao"
					java.lang.String tempAttribDescricao =

					reader.getAttributeValue(null, "descricao");

					if (tempAttribDescricao != null) {
						java.lang.String content = tempAttribDescricao;

						object.setDescricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricao));

					} else {

					}
					handledAttributes.add("descricao");

					// handle attribute "codigo"
					java.lang.String tempAttribCodigo =

					reader.getAttributeValue(null, "codigo");

					if (tempAttribCodigo != null) {
						java.lang.String content = tempAttribCodigo;

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribCodigo));

					} else {

						object.setCodigo(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("codigo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoInformacoesAdicionais implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Informacoes-Adicionais Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for FraseStatusEmpresa This was an Attribute!
		 */

		protected java.lang.String localFraseStatusEmpresa;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getFraseStatusEmpresa() {
			return localFraseStatusEmpresa;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            FraseStatusEmpresa
		 */
		public void setFraseStatusEmpresa(java.lang.String param) {

			this.localFraseStatusEmpresa = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoInformacoesAdicionais.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Informacoes-Adicionais",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Informacoes-Adicionais", xmlWriter);
				}

			}

			if (localFraseStatusEmpresa != null) {

				writeAttribute("", "frase-status-empresa",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFraseStatusEmpresa),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"frase-status-empresa"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFraseStatusEmpresa));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoInformacoesAdicionais parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoInformacoesAdicionais object = new InsumoInformacoesAdicionais();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Informacoes-Adicionais".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoInformacoesAdicionais) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "frase-status-empresa"
					java.lang.String tempAttribFraseStatusEmpresa =

					reader.getAttributeValue(null, "frase-status-empresa");

					if (tempAttribFraseStatusEmpresa != null) {
						java.lang.String content = tempAttribFraseStatusEmpresa;

						object.setFraseStatusEmpresa(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribFraseStatusEmpresa));

					} else {

					}
					handledAttributes.add("frase-status-empresa");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ParametroProduto implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Parametro-Produto Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * field for Obrigatorio This was an Attribute!
		 */

		protected boolean localObrigatorio;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getObrigatorio() {
			return localObrigatorio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Obrigatorio
		 */
		public void setObrigatorio(boolean param) {

			this.localObrigatorio = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ParametroProduto.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Parametro-Produto",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Parametro-Produto", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}

			if (true) {

				writeAttribute("", "obrigatorio",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localObrigatorio), xmlWriter);

			}

			else {
				throw new org.apache.axis2.databinding.ADBException(
						"required attribute localObrigatorio is null");
			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			attribList.add(new javax.xml.namespace.QName("", "obrigatorio"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localObrigatorio));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ParametroProduto parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ParametroProduto object = new ParametroProduto();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Parametro-Produto".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ParametroProduto) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					// handle attribute "obrigatorio"
					java.lang.String tempAttribObrigatorio =

					reader.getAttributeValue(null, "obrigatorio");

					if (tempAttribObrigatorio != null) {
						java.lang.String content = tempAttribObrigatorio;

						object.setObrigatorio(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribObrigatorio));

					} else {

						throw new org.apache.axis2.databinding.ADBException(
								"Required attribute obrigatorio is missing");

					}
					handledAttributes.add("obrigatorio");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoOcorrenciaConsumidor implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Ocorrencia-Consumidor Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Endereco
		 */

		protected EnderecoOcorrenciaConsumidor localEndereco;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEnderecoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return EnderecoOcorrenciaConsumidor
		 */
		public EnderecoOcorrenciaConsumidor getEndereco() {
			return localEndereco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Endereco
		 */
		public void setEndereco(EnderecoOcorrenciaConsumidor param) {

			if (param != null) {
				// update the setting tracker
				localEnderecoTracker = true;
			} else {
				localEnderecoTracker = false;

			}

			this.localEndereco = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoOcorrenciaConsumidor.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Ocorrencia-Consumidor",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Ocorrencia-Consumidor", xmlWriter);
				}

			}
			if (localEnderecoTracker) {
				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				localEndereco.serialize(new javax.xml.namespace.QName("",
						"endereco"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localEnderecoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "endereco"));

				if (localEndereco == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"endereco cannot be null!!");
				}
				elementList.add(localEndereco);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoOcorrenciaConsumidor parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoOcorrenciaConsumidor object = new InsumoOcorrenciaConsumidor();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Ocorrencia-Consumidor".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoOcorrenciaConsumidor) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "endereco")
									.equals(reader.getName())) {

						object.setEndereco(EnderecoOcorrenciaConsumidor.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoUltimasConsultas implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Ultimas-Consultas Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataConsulta This was an Attribute!
		 */

		protected java.util.Calendar localDataConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsulta() {
			return localDataConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsulta
		 */
		public void setDataConsulta(java.util.Calendar param) {

			this.localDataConsulta = param;

		}

		/**
		 * field for NomeClienteConsultante This was an Attribute!
		 */

		protected java.lang.String localNomeClienteConsultante;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeClienteConsultante() {
			return localNomeClienteConsultante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeClienteConsultante
		 */
		public void setNomeClienteConsultante(java.lang.String param) {

			this.localNomeClienteConsultante = param;

		}

		/**
		 * field for QuantidadeConsulta This was an Attribute!
		 */

		protected int localQuantidadeConsulta;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeConsulta() {
			return localQuantidadeConsulta;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeConsulta
		 */
		public void setQuantidadeConsulta(int param) {

			this.localQuantidadeConsulta = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoUltimasConsultas.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Ultimas-Consultas", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Ultimas-Consultas", xmlWriter);
				}

			}

			if (localDataConsulta != null) {

				writeAttribute("", "data-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsulta), xmlWriter);

			}

			if (localNomeClienteConsultante != null) {

				writeAttribute("", "nome-cliente-consultante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeClienteConsultante),
						xmlWriter);

			}

			if (localQuantidadeConsulta != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-consulta",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsulta),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "data-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsulta));

			attribList.add(new javax.xml.namespace.QName("",
					"nome-cliente-consultante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeClienteConsultante));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consulta"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsulta));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoUltimasConsultas parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoUltimasConsultas object = new InsumoUltimasConsultas();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Ultimas-Consultas".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoUltimasConsultas) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-consulta"
					java.lang.String tempAttribDataConsulta =

					reader.getAttributeValue(null, "data-consulta");

					if (tempAttribDataConsulta != null) {
						java.lang.String content = tempAttribDataConsulta;

						object.setDataConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsulta));

					} else {

					}
					handledAttributes.add("data-consulta");

					// handle attribute "nome-cliente-consultante"
					java.lang.String tempAttribNomeClienteConsultante =

					reader.getAttributeValue(null, "nome-cliente-consultante");

					if (tempAttribNomeClienteConsultante != null) {
						java.lang.String content = tempAttribNomeClienteConsultante;

						object.setNomeClienteConsultante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeClienteConsultante));

					} else {

					}
					handledAttributes.add("nome-cliente-consultante");

					// handle attribute "quantidade-consulta"
					java.lang.String tempAttribQuantidadeConsulta =

					reader.getAttributeValue(null, "quantidade-consulta");

					if (tempAttribQuantidadeConsulta != null) {
						java.lang.String content = tempAttribQuantidadeConsulta;

						object.setQuantidadeConsulta(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeConsulta));

					} else {

						object.setQuantidadeConsulta(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consulta");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ChequeLojista extends Cheque implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cheque-Lojista Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataEmissao This was an Attribute!
		 */

		protected java.util.Calendar localDataEmissao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataEmissao() {
			return localDataEmissao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataEmissao
		 */
		public void setDataEmissao(java.util.Calendar param) {

			this.localDataEmissao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ChequeLojista.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Cheque-Lojista", xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Cheque-Lojista", xmlWriter);
			}

			if (localNumero != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localDigito != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "digito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDigito), xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}

			if (localDataEmissao != null) {

				writeAttribute("", "data-emissao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataEmissao), xmlWriter);

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Cheque-Lojista"));
			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "digito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDigito));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			attribList.add(new javax.xml.namespace.QName("", "data-emissao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataEmissao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ChequeLojista parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ChequeLojista object = new ChequeLojista();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cheque-Lojista".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ChequeLojista) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribNumero));

					} else {

						object.setNumero(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("numero");

					// handle attribute "digito"
					java.lang.String tempAttribDigito =

					reader.getAttributeValue(null, "digito");

					if (tempAttribDigito != null) {
						java.lang.String content = tempAttribDigito;

						object.setDigito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribDigito));

					} else {

						object.setDigito(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("digito");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					// handle attribute "data-emissao"
					java.lang.String tempAttribDataEmissao =

					reader.getAttributeValue(null, "data-emissao");

					if (tempAttribDataEmissao != null) {
						java.lang.String content = tempAttribDataEmissao;

						object.setDataEmissao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataEmissao));

					} else {

					}
					handledAttributes.add("data-emissao");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Resultado implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"resultado", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Resultado
		 */

		protected ResultadoConsulta localResultado;

		/**
		 * Auto generated getter method
		 * 
		 * @return ResultadoConsulta
		 */
		public ResultadoConsulta getResultado() {
			return localResultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Resultado
		 */
		public void setResultado(ResultadoConsulta param) {

			this.localResultado = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Resultado.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localResultado == null) {
				java.lang.String namespace = "http://webservice.consulta.spcjava.spcbrasil.org/";

				if (!namespace.equals("")) {
					java.lang.String prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "resultado",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "resultado");
					}

				} else {
					xmlWriter.writeStartElement("resultado");
				}

				// write the nil attribute
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "nil",
						"1", xmlWriter);
				xmlWriter.writeEndElement();
			} else {
				localResultado.serialize(MY_QNAME, factory, xmlWriter);
			}

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			if (localResultado == null) {
				return new org.apache.axis2.databinding.utils.reader.NullXMLStreamReader(
						MY_QNAME);
			} else {
				return localResultado.getPullParser(MY_QNAME);
			}

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Resultado parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Resultado object = new Resultado();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					nillableValue = reader.getAttributeValue(
							"http://www.w3.org/2001/XMLSchema-instance", "nil");
					if ("true".equals(nillableValue)
							|| "1".equals(nillableValue)) {
						// Skip the element and report the null value. It cannot
						// have subelements.
						while (!reader.isEndElement())
							reader.next();

						return object;

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement()) {

							if (reader.isStartElement()
									&& new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"resultado").equals(reader
											.getName())) {

								nillableValue = reader
										.getAttributeValue(
												"http://www.w3.org/2001/XMLSchema-instance",
												"nil");
								if ("true".equals(nillableValue)
										|| "1".equals(nillableValue)) {
									object.setResultado(null);
									reader.next();

								} else {

									object.setResultado(ResultadoConsulta.Factory
											.parse(reader));
								}
							} // End of if for expected property start element

							else {
								// A start element we are not expecting
								// indicates an invalid parameter was passed
								throw new org.apache.axis2.databinding.ADBException(
										"Unexpected subelement "
												+ reader.getLocalName());
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Vara implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name = Vara
		 * Namespace URI = http://webservice.consulta.spcjava.spcbrasil.org/
		 * Namespace Prefix = ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Comarca
		 */

		protected Cidade localComarca;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localComarcaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getComarca() {
			return localComarca;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Comarca
		 */
		public void setComarca(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localComarcaTracker = true;
			} else {
				localComarcaTracker = false;

			}

			this.localComarca = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Vara.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Vara", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Vara", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}
			if (localComarcaTracker) {
				if (localComarca == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"comarca cannot be null!!");
				}
				localComarca.serialize(new javax.xml.namespace.QName("",
						"comarca"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localComarcaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "comarca"));

				if (localComarca == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"comarca cannot be null!!");
				}
				elementList.add(localComarca);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Vara parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Vara object = new Vara();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Vara".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Vara) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "comarca")
									.equals(reader.getName())) {

						object.setComarca(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContraOrdem implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contra-Ordem Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Motivo
		 */

		protected Alinea localMotivo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMotivoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Alinea
		 */
		public Alinea getMotivo() {
			return localMotivo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Motivo
		 */
		public void setMotivo(Alinea param) {

			if (param != null) {
				// update the setting tracker
				localMotivoTracker = true;
			} else {
				localMotivoTracker = false;

			}

			this.localMotivo = param;

		}

		/**
		 * field for ChequeInicial
		 */

		protected ChequeContraOrdem localChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ChequeContraOrdem
		 */
		public ChequeContraOrdem getChequeInicial() {
			return localChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeInicial
		 */
		public void setChequeInicial(ChequeContraOrdem param) {

			if (param != null) {
				// update the setting tracker
				localChequeInicialTracker = true;
			} else {
				localChequeInicialTracker = false;

			}

			this.localChequeInicial = param;

		}

		/**
		 * field for ChequeFinal
		 */

		protected ChequeFinal localChequeFinal;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeFinalTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ChequeFinal
		 */
		public ChequeFinal getChequeFinal() {
			return localChequeFinal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeFinal
		 */
		public void setChequeFinal(ChequeFinal param) {

			if (param != null) {
				// update the setting tracker
				localChequeFinalTracker = true;
			} else {
				localChequeFinalTracker = false;

			}

			this.localChequeFinal = param;

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * field for Informante This was an Attribute!
		 */

		protected java.lang.String localInformante;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getInformante() {
			return localInformante;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Informante
		 */
		public void setInformante(java.lang.String param) {

			this.localInformante = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContraOrdem.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Contra-Ordem",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Contra-Ordem", xmlWriter);
				}

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localInformante != null) {

				writeAttribute("", "informante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInformante), xmlWriter);

			}
			if (localMotivoTracker) {
				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				localMotivo.serialize(new javax.xml.namespace.QName("",
						"motivo"), factory, xmlWriter);
			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localMotivoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "motivo"));

				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				elementList.add(localMotivo);
			}
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("", "informante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInformante));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContraOrdem parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContraOrdem object = new InsumoContraOrdem();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contra-Ordem".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContraOrdem) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "informante"
					java.lang.String tempAttribInformante =

					reader.getAttributeValue(null, "informante");

					if (tempAttribInformante != null) {
						java.lang.String content = tempAttribInformante;

						object.setInformante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInformante));

					} else {

					}
					handledAttributes.add("informante");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "motivo")
									.equals(reader.getName())) {

						object.setMotivo(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(ChequeContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(ChequeFinal.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContumaciaSRS implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contumacia-SRS Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for ChequeInicial
		 */

		protected Cheque localChequeInicial;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeInicialTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getChequeInicial() {
			return localChequeInicial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeInicial
		 */
		public void setChequeInicial(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localChequeInicialTracker = true;
			} else {
				localChequeInicialTracker = false;

			}

			this.localChequeInicial = param;

		}

		/**
		 * field for ChequeFinal
		 */

		protected Cheque localChequeFinal;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeFinalTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getChequeFinal() {
			return localChequeFinal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ChequeFinal
		 */
		public void setChequeFinal(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localChequeFinalTracker = true;
			} else {
				localChequeFinalTracker = false;

			}

			this.localChequeFinal = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for Motivo This was an Attribute!
		 */

		protected java.lang.String localMotivo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMotivo() {
			return localMotivo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Motivo
		 */
		public void setMotivo(java.lang.String param) {

			this.localMotivo = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContumaciaSRS.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Contumacia-SRS",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Contumacia-SRS", xmlWriter);
				}

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localMotivo != null) {

				writeAttribute("", "motivo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMotivo), xmlWriter);

			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "motivo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMotivo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContumaciaSRS parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContumaciaSRS object = new InsumoContumaciaSRS();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contumacia-SRS".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContumaciaSRS) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "motivo"
					java.lang.String tempAttribMotivo =

					reader.getAttributeValue(null, "motivo");

					if (tempAttribMotivo != null) {
						java.lang.String content = tempAttribMotivo;

						object.setMotivo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMotivo));

					} else {

					}
					handledAttributes.add("motivo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Produto implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Produto Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Codigo
		 */

		protected java.lang.String localCodigo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCodigoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localCodigoTracker = true;
			} else {
				localCodigoTracker = false;

			}

			this.localCodigo = param;

		}

		/**
		 * field for Nome
		 */

		protected java.lang.String localNome;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNomeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			if (param != null) {
				// update the setting tracker
				localNomeTracker = true;
			} else {
				localNomeTracker = false;

			}

			this.localNome = param;

		}

		/**
		 * field for Parametro This was an Array!
		 */

		protected ParametroProduto[] localParametro;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localParametroTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return ParametroProduto[]
		 */
		public ParametroProduto[] getParametro() {
			return localParametro;
		}

		/**
		 * validate the array for Parametro
		 */
		protected void validateParametro(ParametroProduto[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Parametro
		 */
		public void setParametro(ParametroProduto[] param) {

			validateParametro(param);

			if (param != null) {
				// update the setting tracker
				localParametroTracker = true;
			} else {
				localParametroTracker = false;

			}

			this.localParametro = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            ParametroProduto
		 */
		public void addParametro(ParametroProduto param) {
			if (localParametro == null) {
				localParametro = new ParametroProduto[] {};
			}

			// update the setting tracker
			localParametroTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localParametro);
			list.add(param);
			this.localParametro = (ParametroProduto[]) list
					.toArray(new ParametroProduto[list.size()]);

		}

		/**
		 * field for InsumoOpcional This was an Array!
		 */

		protected InsumoProduto[] localInsumoOpcional;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localInsumoOpcionalTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoProduto[]
		 */
		public InsumoProduto[] getInsumoOpcional() {
			return localInsumoOpcional;
		}

		/**
		 * validate the array for InsumoOpcional
		 */
		protected void validateInsumoOpcional(InsumoProduto[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            InsumoOpcional
		 */
		public void setInsumoOpcional(InsumoProduto[] param) {

			validateInsumoOpcional(param);

			if (param != null) {
				// update the setting tracker
				localInsumoOpcionalTracker = true;
			} else {
				localInsumoOpcionalTracker = false;

			}

			this.localInsumoOpcional = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            InsumoProduto
		 */
		public void addInsumoOpcional(InsumoProduto param) {
			if (localInsumoOpcional == null) {
				localInsumoOpcional = new InsumoProduto[] {};
			}

			// update the setting tracker
			localInsumoOpcionalTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localInsumoOpcional);
			list.add(param);
			this.localInsumoOpcional = (InsumoProduto[]) list
					.toArray(new InsumoProduto[list.size()]);

		}

		/**
		 * field for InsumoRetorno This was an Array!
		 */

		protected InsumoProduto[] localInsumoRetorno;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localInsumoRetornoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return InsumoProduto[]
		 */
		public InsumoProduto[] getInsumoRetorno() {
			return localInsumoRetorno;
		}

		/**
		 * validate the array for InsumoRetorno
		 */
		protected void validateInsumoRetorno(InsumoProduto[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            InsumoRetorno
		 */
		public void setInsumoRetorno(InsumoProduto[] param) {

			validateInsumoRetorno(param);

			if (param != null) {
				// update the setting tracker
				localInsumoRetornoTracker = true;
			} else {
				localInsumoRetornoTracker = false;

			}

			this.localInsumoRetorno = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            InsumoProduto
		 */
		public void addInsumoRetorno(InsumoProduto param) {
			if (localInsumoRetorno == null) {
				localInsumoRetorno = new InsumoProduto[] {};
			}

			// update the setting tracker
			localInsumoRetornoTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localInsumoRetorno);
			list.add(param);
			this.localInsumoRetorno = (InsumoProduto[]) list
					.toArray(new InsumoProduto[list.size()]);

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Produto.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Produto", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Produto", xmlWriter);
				}

			}
			if (localCodigoTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter
								.writeStartElement(prefix, "codigo", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "codigo");
					}

				} else {
					xmlWriter.writeStartElement("codigo");
				}

				if (localCodigo == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"codigo cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localCodigo);

				}

				xmlWriter.writeEndElement();
			}
			if (localNomeTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "nome", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace, "nome");
					}

				} else {
					xmlWriter.writeStartElement("nome");
				}

				if (localNome == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"nome cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localNome);

				}

				xmlWriter.writeEndElement();
			}
			if (localParametroTracker) {
				if (localParametro != null) {
					for (int i = 0; i < localParametro.length; i++) {
						if (localParametro[i] != null) {
							localParametro[i].serialize(
									new javax.xml.namespace.QName("",
											"parametro"), factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"parametro cannot be null!!");

				}
			}
			if (localInsumoOpcionalTracker) {
				if (localInsumoOpcional != null) {
					for (int i = 0; i < localInsumoOpcional.length; i++) {
						if (localInsumoOpcional[i] != null) {
							localInsumoOpcional[i].serialize(
									new javax.xml.namespace.QName("",
											"insumo-opcional"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"insumo-opcional cannot be null!!");

				}
			}
			if (localInsumoRetornoTracker) {
				if (localInsumoRetorno != null) {
					for (int i = 0; i < localInsumoRetorno.length; i++) {
						if (localInsumoRetorno[i] != null) {
							localInsumoRetorno[i].serialize(
									new javax.xml.namespace.QName("",
											"insumo-retorno"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"insumo-retorno cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCodigoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "codigo"));

				if (localCodigo != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localCodigo));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"codigo cannot be null!!");
				}
			}
			if (localNomeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "nome"));

				if (localNome != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localNome));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"nome cannot be null!!");
				}
			}
			if (localParametroTracker) {
				if (localParametro != null) {
					for (int i = 0; i < localParametro.length; i++) {

						if (localParametro[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"parametro"));
							elementList.add(localParametro[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"parametro cannot be null!!");

				}

			}
			if (localInsumoOpcionalTracker) {
				if (localInsumoOpcional != null) {
					for (int i = 0; i < localInsumoOpcional.length; i++) {

						if (localInsumoOpcional[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"insumo-opcional"));
							elementList.add(localInsumoOpcional[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"insumo-opcional cannot be null!!");

				}

			}
			if (localInsumoRetornoTracker) {
				if (localInsumoRetorno != null) {
					for (int i = 0; i < localInsumoRetorno.length; i++) {

						if (localInsumoRetorno[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"insumo-retorno"));
							elementList.add(localInsumoRetorno[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"insumo-retorno cannot be null!!");

				}

			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Produto parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Produto object = new Produto();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Produto".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Produto) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					java.util.ArrayList list3 = new java.util.ArrayList();

					java.util.ArrayList list4 = new java.util.ArrayList();

					java.util.ArrayList list5 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "codigo")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "nome")
									.equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "parametro")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list3.add(ParametroProduto.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone3 = false;
						while (!loopDone3) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone3 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"parametro").equals(reader.getName())) {
									list3.add(ParametroProduto.Factory
											.parse(reader));

								} else {
									loopDone3 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setParametro((ParametroProduto[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(ParametroProduto.class, list3));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"insumo-opcional").equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list4.add(InsumoProduto.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone4 = false;
						while (!loopDone4) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone4 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"insumo-opcional").equals(reader
										.getName())) {
									list4.add(InsumoProduto.Factory
											.parse(reader));

								} else {
									loopDone4 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setInsumoOpcional((InsumoProduto[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(InsumoProduto.class, list4));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"insumo-retorno").equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list5.add(InsumoProduto.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone5 = false;
						while (!loopDone5) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone5 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"insumo-retorno").equals(reader
										.getName())) {
									list5.add(InsumoProduto.Factory
											.parse(reader));

								} else {
									loopDone5 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setInsumoRetorno((InsumoProduto[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(InsumoProduto.class, list5));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoSPCScore3Meses implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-SPC-Score-3-Meses Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Classe This was an Attribute!
		 */

		protected java.lang.String localClasse;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getClasse() {
			return localClasse;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Classe
		 */
		public void setClasse(java.lang.String param) {

			this.localClasse = param;

		}

		/**
		 * field for Horizonte This was an Attribute!
		 */

		protected int localHorizonte;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getHorizonte() {
			return localHorizonte;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Horizonte
		 */
		public void setHorizonte(int param) {

			this.localHorizonte = param;

		}

		/**
		 * field for MesagemInterpretativaScore This was an Attribute!
		 */

		protected java.lang.String localMesagemInterpretativaScore;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMesagemInterpretativaScore() {
			return localMesagemInterpretativaScore;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesagemInterpretativaScore
		 */
		public void setMesagemInterpretativaScore(java.lang.String param) {

			this.localMesagemInterpretativaScore = param;

		}

		/**
		 * field for MesagemInterpretativaProbabilidade This was an Attribute!
		 */

		protected java.lang.String localMesagemInterpretativaProbabilidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMesagemInterpretativaProbabilidade() {
			return localMesagemInterpretativaProbabilidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesagemInterpretativaProbabilidade
		 */
		public void setMesagemInterpretativaProbabilidade(java.lang.String param) {

			this.localMesagemInterpretativaProbabilidade = param;

		}

		/**
		 * field for MesagemSemaforo This was an Attribute!
		 */

		protected java.lang.String localMesagemSemaforo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMesagemSemaforo() {
			return localMesagemSemaforo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesagemSemaforo
		 */
		public void setMesagemSemaforo(java.lang.String param) {

			this.localMesagemSemaforo = param;

		}

		/**
		 * field for Probabilidade This was an Attribute!
		 */

		protected double localProbabilidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return double
		 */
		public double getProbabilidade() {
			return localProbabilidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Probabilidade
		 */
		public void setProbabilidade(double param) {

			this.localProbabilidade = param;

		}

		/**
		 * field for Score This was an Attribute!
		 */

		protected int localScore;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getScore() {
			return localScore;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Score
		 */
		public void setScore(int param) {

			this.localScore = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoSPCScore3Meses.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-SPC-Score-3-Meses", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-SPC-Score-3-Meses", xmlWriter);
				}

			}

			if (localClasse != null) {

				writeAttribute("", "classe",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localClasse), xmlWriter);

			}

			if (localHorizonte != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "horizonte",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localHorizonte), xmlWriter);

			}

			else {
				throw new org.apache.axis2.databinding.ADBException(
						"required attribute localHorizonte is null");
			}

			if (localMesagemInterpretativaScore != null) {

				writeAttribute(
						"",
						"mesagem-interpretativa-score",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesagemInterpretativaScore),
						xmlWriter);

			}

			if (localMesagemInterpretativaProbabilidade != null) {

				writeAttribute(
						"",
						"mesagem-interpretativa-probabilidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesagemInterpretativaProbabilidade),
						xmlWriter);

			}

			if (localMesagemSemaforo != null) {

				writeAttribute("", "mesagem-semaforo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesagemSemaforo),
						xmlWriter);

			}

			if (!java.lang.Double.isNaN(localProbabilidade)) {

				writeAttribute("", "probabilidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localProbabilidade), xmlWriter);

			}

			if (localScore != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "score",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localScore), xmlWriter);

			}

			else {
				throw new org.apache.axis2.databinding.ADBException(
						"required attribute localScore is null");
			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "classe"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localClasse));

			attribList.add(new javax.xml.namespace.QName("", "horizonte"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localHorizonte));

			attribList.add(new javax.xml.namespace.QName("",
					"mesagem-interpretativa-score"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesagemInterpretativaScore));

			attribList.add(new javax.xml.namespace.QName("",
					"mesagem-interpretativa-probabilidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesagemInterpretativaProbabilidade));

			attribList
					.add(new javax.xml.namespace.QName("", "mesagem-semaforo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesagemSemaforo));

			attribList.add(new javax.xml.namespace.QName("", "probabilidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localProbabilidade));

			attribList.add(new javax.xml.namespace.QName("", "score"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localScore));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoSPCScore3Meses parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoSPCScore3Meses object = new InsumoSPCScore3Meses();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-SPC-Score-3-Meses".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoSPCScore3Meses) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "classe"
					java.lang.String tempAttribClasse =

					reader.getAttributeValue(null, "classe");

					if (tempAttribClasse != null) {
						java.lang.String content = tempAttribClasse;

						object.setClasse(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribClasse));

					} else {

					}
					handledAttributes.add("classe");

					// handle attribute "horizonte"
					java.lang.String tempAttribHorizonte =

					reader.getAttributeValue(null, "horizonte");

					if (tempAttribHorizonte != null) {
						java.lang.String content = tempAttribHorizonte;

						object.setHorizonte(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribHorizonte));

					} else {

						throw new org.apache.axis2.databinding.ADBException(
								"Required attribute horizonte is missing");

					}
					handledAttributes.add("horizonte");

					// handle attribute "mesagem-interpretativa-score"
					java.lang.String tempAttribMesagemInterpretativaScore =

					reader.getAttributeValue(null,
							"mesagem-interpretativa-score");

					if (tempAttribMesagemInterpretativaScore != null) {
						java.lang.String content = tempAttribMesagemInterpretativaScore;

						object.setMesagemInterpretativaScore(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMesagemInterpretativaScore));

					} else {

					}
					handledAttributes.add("mesagem-interpretativa-score");

					// handle attribute "mesagem-interpretativa-probabilidade"
					java.lang.String tempAttribMesagemInterpretativaProbabilidade =

					reader.getAttributeValue(null,
							"mesagem-interpretativa-probabilidade");

					if (tempAttribMesagemInterpretativaProbabilidade != null) {
						java.lang.String content = tempAttribMesagemInterpretativaProbabilidade;

						object.setMesagemInterpretativaProbabilidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMesagemInterpretativaProbabilidade));

					} else {

					}
					handledAttributes
							.add("mesagem-interpretativa-probabilidade");

					// handle attribute "mesagem-semaforo"
					java.lang.String tempAttribMesagemSemaforo =

					reader.getAttributeValue(null, "mesagem-semaforo");

					if (tempAttribMesagemSemaforo != null) {
						java.lang.String content = tempAttribMesagemSemaforo;

						object.setMesagemSemaforo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMesagemSemaforo));

					} else {

					}
					handledAttributes.add("mesagem-semaforo");

					// handle attribute "probabilidade"
					java.lang.String tempAttribProbabilidade =

					reader.getAttributeValue(null, "probabilidade");

					if (tempAttribProbabilidade != null) {
						java.lang.String content = tempAttribProbabilidade;

						object.setProbabilidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDouble(tempAttribProbabilidade));

					} else {

						object.setProbabilidade(java.lang.Double.NaN);

					}
					handledAttributes.add("probabilidade");

					// handle attribute "score"
					java.lang.String tempAttribScore =

					reader.getAttributeValue(null, "score");

					if (tempAttribScore != null) {
						java.lang.String content = tempAttribScore;

						object.setScore(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribScore));

					} else {

						throw new org.apache.axis2.databinding.ADBException(
								"Required attribute score is missing");

					}
					handledAttributes.add("score");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoCreditoConcedido implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Credito-Concedido Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for AnoVencimento This was an Attribute!
		 */

		protected int localAnoVencimento;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getAnoVencimento() {
			return localAnoVencimento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AnoVencimento
		 */
		public void setAnoVencimento(int param) {

			this.localAnoVencimento = param;

		}

		/**
		 * field for MesVencimento This was an Attribute!
		 */

		protected int localMesVencimento;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getMesVencimento() {
			return localMesVencimento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesVencimento
		 */
		public void setMesVencimento(int param) {

			this.localMesVencimento = param;

		}

		/**
		 * field for QuantidadeCredito This was an Attribute!
		 */

		protected int localQuantidadeCredito;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeCredito() {
			return localQuantidadeCredito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeCredito
		 */
		public void setQuantidadeCredito(int param) {

			this.localQuantidadeCredito = param;

		}

		/**
		 * field for Valor This was an Attribute!
		 */

		protected java.math.BigDecimal localValor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValor() {
			return localValor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Valor
		 */
		public void setValor(java.math.BigDecimal param) {

			this.localValor = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoCreditoConcedido.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Credito-Concedido", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Credito-Concedido", xmlWriter);
				}

			}

			if (localAnoVencimento != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "ano-vencimento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localAnoVencimento), xmlWriter);

			}

			if (localMesVencimento != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "mes-vencimento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesVencimento), xmlWriter);

			}

			if (localQuantidadeCredito != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-credito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeCredito),
						xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "ano-vencimento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localAnoVencimento));

			attribList.add(new javax.xml.namespace.QName("", "mes-vencimento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesVencimento));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-credito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeCredito));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoCreditoConcedido parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoCreditoConcedido object = new InsumoCreditoConcedido();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Credito-Concedido".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoCreditoConcedido) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "ano-vencimento"
					java.lang.String tempAttribAnoVencimento =

					reader.getAttributeValue(null, "ano-vencimento");

					if (tempAttribAnoVencimento != null) {
						java.lang.String content = tempAttribAnoVencimento;

						object.setAnoVencimento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribAnoVencimento));

					} else {

						object.setAnoVencimento(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("ano-vencimento");

					// handle attribute "mes-vencimento"
					java.lang.String tempAttribMesVencimento =

					reader.getAttributeValue(null, "mes-vencimento");

					if (tempAttribMesVencimento != null) {
						java.lang.String content = tempAttribMesVencimento;

						object.setMesVencimento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribMesVencimento));

					} else {

						object.setMesVencimento(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("mes-vencimento");

					// handle attribute "quantidade-credito"
					java.lang.String tempAttribQuantidadeCredito =

					reader.getAttributeValue(null, "quantidade-credito");

					if (tempAttribQuantidadeCredito != null) {
						java.lang.String content = tempAttribQuantidadeCredito;

						object.setQuantidadeCredito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeCredito));

					} else {

						object.setQuantidadeCredito(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-credito");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoCCF implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-CCF Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Motivo
		 */

		protected Alinea localMotivo;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMotivoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Alinea
		 */
		public Alinea getMotivo() {
			return localMotivo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Motivo
		 */
		public void setMotivo(Alinea param) {

			if (param != null) {
				// update the setting tracker
				localMotivoTracker = true;
			} else {
				localMotivoTracker = false;

			}

			this.localMotivo = param;

		}

		/**
		 * field for UltimoCheque
		 */

		protected Cheque localUltimoCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUltimoChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getUltimoCheque() {
			return localUltimoCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UltimoCheque
		 */
		public void setUltimoCheque(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localUltimoChequeTracker = true;
			} else {
				localUltimoChequeTracker = false;

			}

			this.localUltimoCheque = param;

		}

		/**
		 * field for DataUltimoCheque This was an Attribute!
		 */

		protected java.util.Calendar localDataUltimoCheque;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataUltimoCheque() {
			return localDataUltimoCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataUltimoCheque
		 */
		public void setDataUltimoCheque(java.util.Calendar param) {

			this.localDataUltimoCheque = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * field for Quantidade This was an Attribute!
		 */

		protected int localQuantidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidade() {
			return localQuantidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Quantidade
		 */
		public void setQuantidade(int param) {

			this.localQuantidade = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoCCF.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-CCF", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-CCF", xmlWriter);
				}

			}

			if (localDataUltimoCheque != null) {

				writeAttribute("", "data-ultimo-cheque",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimoCheque),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localQuantidade != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidade), xmlWriter);

			}
			if (localMotivoTracker) {
				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				localMotivo.serialize(new javax.xml.namespace.QName("",
						"motivo"), factory, xmlWriter);
			}
			if (localUltimoChequeTracker) {
				if (localUltimoCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-cheque cannot be null!!");
				}
				localUltimoCheque.serialize(new javax.xml.namespace.QName("",
						"ultimo-cheque"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localMotivoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "motivo"));

				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				elementList.add(localMotivo);
			}
			if (localUltimoChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ultimo-cheque"));

				if (localUltimoCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-cheque cannot be null!!");
				}
				elementList.add(localUltimoCheque);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-ultimo-cheque"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimoCheque));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("", "quantidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidade));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoCCF parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoCCF object = new InsumoCCF();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-CCF".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoCCF) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ultimo-cheque"
					java.lang.String tempAttribDataUltimoCheque =

					reader.getAttributeValue(null, "data-ultimo-cheque");

					if (tempAttribDataUltimoCheque != null) {
						java.lang.String content = tempAttribDataUltimoCheque;

						object.setDataUltimoCheque(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimoCheque));

					} else {

					}
					handledAttributes.add("data-ultimo-cheque");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "quantidade"
					java.lang.String tempAttribQuantidade =

					reader.getAttributeValue(null, "quantidade");

					if (tempAttribQuantidade != null) {
						java.lang.String content = tempAttribQuantidade;

						object.setQuantidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidade));

					} else {

						object.setQuantidade(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "motivo")
									.equals(reader.getName())) {

						object.setMotivo(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ultimo-cheque").equals(reader.getName())) {

						object.setUltimoCheque(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoIncorporacaoFusaoCisao implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Incorporacao-Fusao-Cisao Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataAtualizacao This was an Attribute!
		 */

		protected java.util.Calendar localDataAtualizacao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataAtualizacao() {
			return localDataAtualizacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataAtualizacao
		 */
		public void setDataAtualizacao(java.util.Calendar param) {

			this.localDataAtualizacao = param;

		}

		/**
		 * field for MensagemObservacoes This was an Attribute!
		 */

		protected java.lang.String localMensagemObservacoes;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMensagemObservacoes() {
			return localMensagemObservacoes;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemObservacoes
		 */
		public void setMensagemObservacoes(java.lang.String param) {

			this.localMensagemObservacoes = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoIncorporacaoFusaoCisao.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Incorporacao-Fusao-Cisao",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Incorporacao-Fusao-Cisao",
							xmlWriter);
				}

			}

			if (localDataAtualizacao != null) {

				writeAttribute("", "data-atualizacao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataAtualizacao),
						xmlWriter);

			}

			if (localMensagemObservacoes != null) {

				writeAttribute("", "mensagem-observacoes",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMensagemObservacoes),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList
					.add(new javax.xml.namespace.QName("", "data-atualizacao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataAtualizacao));

			attribList.add(new javax.xml.namespace.QName("",
					"mensagem-observacoes"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMensagemObservacoes));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoIncorporacaoFusaoCisao parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoIncorporacaoFusaoCisao object = new InsumoIncorporacaoFusaoCisao();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Incorporacao-Fusao-Cisao".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoIncorporacaoFusaoCisao) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-atualizacao"
					java.lang.String tempAttribDataAtualizacao =

					reader.getAttributeValue(null, "data-atualizacao");

					if (tempAttribDataAtualizacao != null) {
						java.lang.String content = tempAttribDataAtualizacao;

						object.setDataAtualizacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataAtualizacao));

					} else {

					}
					handledAttributes.add("data-atualizacao");

					// handle attribute "mensagem-observacoes"
					java.lang.String tempAttribMensagemObservacoes =

					reader.getAttributeValue(null, "mensagem-observacoes");

					if (tempAttribMensagemObservacoes != null) {
						java.lang.String content = tempAttribMensagemObservacoes;

						object.setMensagemObservacoes(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMensagemObservacoes));

					} else {

					}
					handledAttributes.add("mensagem-observacoes");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Cartorio implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cartorio Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cidade
		 */

		protected Cidade localCidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidade() {
			return localCidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cidade
		 */
		public void setCidade(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeTracker = true;
			} else {
				localCidadeTracker = false;

			}

			this.localCidade = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Cartorio.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cartorio", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cartorio", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Cartorio parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Cartorio object = new Cartorio();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cartorio".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Cartorio) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoSPC implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-SPC Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CidadeAssociado
		 */

		protected Cidade localCidadeAssociado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeAssociadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidadeAssociado() {
			return localCidadeAssociado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CidadeAssociado
		 */
		public void setCidadeAssociado(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeAssociadoTracker = true;
			} else {
				localCidadeAssociadoTracker = false;

			}

			this.localCidadeAssociado = param;

		}

		/**
		 * field for NomeAssociado This was an Attribute!
		 */

		protected java.lang.String localNomeAssociado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeAssociado() {
			return localNomeAssociado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeAssociado
		 */
		public void setNomeAssociado(java.lang.String param) {

			this.localNomeAssociado = param;

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for DataVencimento This was an Attribute!
		 */

		protected java.util.Calendar localDataVencimento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataVencimento() {
			return localDataVencimento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataVencimento
		 */
		public void setDataVencimento(java.util.Calendar param) {

			this.localDataVencimento = param;

		}

		/**
		 * field for NomeEntidade This was an Attribute!
		 */

		protected java.lang.String localNomeEntidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeEntidade() {
			return localNomeEntidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeEntidade
		 */
		public void setNomeEntidade(java.lang.String param) {

			this.localNomeEntidade = param;

		}

		/**
		 * field for Contrato This was an Attribute!
		 */

		protected java.lang.String localContrato;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getContrato() {
			return localContrato;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Contrato
		 */
		public void setContrato(java.lang.String param) {

			this.localContrato = param;

		}

		/**
		 * field for CompradorFiadorAvalista This was an Attribute!
		 */

		protected java.lang.String localCompradorFiadorAvalista;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCompradorFiadorAvalista() {
			return localCompradorFiadorAvalista;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CompradorFiadorAvalista
		 */
		public void setCompradorFiadorAvalista(java.lang.String param) {

			this.localCompradorFiadorAvalista = param;

		}

		/**
		 * field for Valor This was an Attribute!
		 */

		protected java.math.BigDecimal localValor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValor() {
			return localValor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Valor
		 */
		public void setValor(java.math.BigDecimal param) {

			this.localValor = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoSPC.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-SPC", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-SPC", xmlWriter);
				}

			}

			if (localNomeAssociado != null) {

				writeAttribute("", "nome-associado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeAssociado), xmlWriter);

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataVencimento != null) {

				writeAttribute("", "data-vencimento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataVencimento),
						xmlWriter);

			}

			if (localNomeEntidade != null) {

				writeAttribute("", "nome-entidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeEntidade), xmlWriter);

			}

			if (localContrato != null) {

				writeAttribute("", "contrato",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localContrato), xmlWriter);

			}

			if (localCompradorFiadorAvalista != null) {

				writeAttribute("", "comprador-fiador-avalista",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCompradorFiadorAvalista),
						xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}
			if (localCidadeAssociadoTracker) {
				if (localCidadeAssociado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-associado cannot be null!!");
				}
				localCidadeAssociado.serialize(new javax.xml.namespace.QName(
						"", "cidade-associado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCidadeAssociadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cidade-associado"));

				if (localCidadeAssociado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade-associado cannot be null!!");
				}
				elementList.add(localCidadeAssociado);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome-associado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeAssociado));

			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-vencimento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataVencimento));

			attribList.add(new javax.xml.namespace.QName("", "nome-entidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeEntidade));

			attribList.add(new javax.xml.namespace.QName("", "contrato"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localContrato));

			attribList.add(new javax.xml.namespace.QName("",
					"comprador-fiador-avalista"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCompradorFiadorAvalista));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoSPC parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoSPC object = new InsumoSPC();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-SPC".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoSPC) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome-associado"
					java.lang.String tempAttribNomeAssociado =

					reader.getAttributeValue(null, "nome-associado");

					if (tempAttribNomeAssociado != null) {
						java.lang.String content = tempAttribNomeAssociado;

						object.setNomeAssociado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeAssociado));

					} else {

					}
					handledAttributes.add("nome-associado");

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-vencimento"
					java.lang.String tempAttribDataVencimento =

					reader.getAttributeValue(null, "data-vencimento");

					if (tempAttribDataVencimento != null) {
						java.lang.String content = tempAttribDataVencimento;

						object.setDataVencimento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataVencimento));

					} else {

					}
					handledAttributes.add("data-vencimento");

					// handle attribute "nome-entidade"
					java.lang.String tempAttribNomeEntidade =

					reader.getAttributeValue(null, "nome-entidade");

					if (tempAttribNomeEntidade != null) {
						java.lang.String content = tempAttribNomeEntidade;

						object.setNomeEntidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeEntidade));

					} else {

					}
					handledAttributes.add("nome-entidade");

					// handle attribute "contrato"
					java.lang.String tempAttribContrato =

					reader.getAttributeValue(null, "contrato");

					if (tempAttribContrato != null) {
						java.lang.String content = tempAttribContrato;

						object.setContrato(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribContrato));

					} else {

					}
					handledAttributes.add("contrato");

					// handle attribute "comprador-fiador-avalista"
					java.lang.String tempAttribCompradorFiadorAvalista =

					reader.getAttributeValue(null, "comprador-fiador-avalista");

					if (tempAttribCompradorFiadorAvalista != null) {
						java.lang.String content = tempAttribCompradorFiadorAvalista;

						object.setCompradorFiadorAvalista(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCompradorFiadorAvalista));

					} else {

					}
					handledAttributes.add("comprador-fiador-avalista");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cidade-associado")
									.equals(reader.getName())) {

						object.setCidadeAssociado(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoRestricaoFinanceira implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Restricao-Financeira Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for Subjudice
		 */

		protected Subjudice localSubjudice;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSubjudiceTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Subjudice
		 */
		public Subjudice getSubjudice() {
			return localSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Subjudice
		 */
		public void setSubjudice(Subjudice param) {

			if (param != null) {
				// update the setting tracker
				localSubjudiceTracker = true;
			} else {
				localSubjudiceTracker = false;

			}

			this.localSubjudice = param;

		}

		/**
		 * field for DadosBancarios
		 */

		protected DadosBancarios localDadosBancarios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDadosBancariosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return DadosBancarios
		 */
		public DadosBancarios getDadosBancarios() {
			return localDadosBancarios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DadosBancarios
		 */
		public void setDadosBancarios(DadosBancarios param) {

			if (param != null) {
				// update the setting tracker
				localDadosBancariosTracker = true;
			} else {
				localDadosBancariosTracker = false;

			}

			this.localDadosBancarios = param;

		}

		/**
		 * field for Cidade
		 */

		protected Cidade localCidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidade() {
			return localCidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cidade
		 */
		public void setCidade(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeTracker = true;
			} else {
				localCidadeTracker = false;

			}

			this.localCidade = param;

		}

		/**
		 * field for Avalista This was an Attribute!
		 */

		protected boolean localAvalista;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getAvalista() {
			return localAvalista;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Avalista
		 */
		public void setAvalista(boolean param) {

			this.localAvalista = param;

		}

		/**
		 * field for Contrato This was an Attribute!
		 */

		protected java.lang.String localContrato;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getContrato() {
			return localContrato;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Contrato
		 */
		public void setContrato(java.lang.String param) {

			this.localContrato = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for Filial This was an Attribute!
		 */

		protected java.lang.String localFilial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getFilial() {
			return localFilial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Filial
		 */
		public void setFilial(java.lang.String param) {

			this.localFilial = param;

		}

		/**
		 * field for IndicadorSubjudice This was an Attribute!
		 */

		protected boolean localIndicadorSubjudice;

		/**
		 * Auto generated getter method
		 * 
		 * @return boolean
		 */
		public boolean getIndicadorSubjudice() {
			return localIndicadorSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            IndicadorSubjudice
		 */
		public void setIndicadorSubjudice(boolean param) {

			this.localIndicadorSubjudice = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * field for TituloOcorrencia This was an Attribute!
		 */

		protected java.lang.String localTituloOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTituloOcorrencia() {
			return localTituloOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TituloOcorrencia
		 */
		public void setTituloOcorrencia(java.lang.String param) {

			this.localTituloOcorrencia = param;

		}

		/**
		 * field for ValorPendencia This was an Attribute!
		 */

		protected java.math.BigDecimal localValorPendencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorPendencia() {
			return localValorPendencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorPendencia
		 */
		public void setValorPendencia(java.math.BigDecimal param) {

			this.localValorPendencia = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoRestricaoFinanceira.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Restricao-Financeira", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Restricao-Financeira", xmlWriter);
				}

			}

			if (true) {

				writeAttribute("", "avalista",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localAvalista), xmlWriter);

			}

			if (localContrato != null) {

				writeAttribute("", "contrato",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localContrato), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localFilial != null) {

				writeAttribute("", "filial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFilial), xmlWriter);

			}

			if (true) {

				writeAttribute("", "indicador-subjudice",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localIndicadorSubjudice),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localTituloOcorrencia != null) {

				writeAttribute("", "titulo-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTituloOcorrencia),
						xmlWriter);

			}

			if (localValorPendencia != null) {

				writeAttribute("", "valor-pendencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorPendencia),
						xmlWriter);

			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			if (localSubjudiceTracker) {
				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				localSubjudice.serialize(new javax.xml.namespace.QName("",
						"subjudice"), factory, xmlWriter);
			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			if (localSubjudiceTracker) {
				elementList.add(new javax.xml.namespace.QName("", "subjudice"));

				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				elementList.add(localSubjudice);
			}
			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			attribList.add(new javax.xml.namespace.QName("", "avalista"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localAvalista));

			attribList.add(new javax.xml.namespace.QName("", "contrato"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localContrato));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "filial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFilial));

			attribList.add(new javax.xml.namespace.QName("",
					"indicador-subjudice"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localIndicadorSubjudice));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("",
					"titulo-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTituloOcorrencia));

			attribList
					.add(new javax.xml.namespace.QName("", "valor-pendencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorPendencia));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoRestricaoFinanceira parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoRestricaoFinanceira object = new InsumoRestricaoFinanceira();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Restricao-Financeira".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoRestricaoFinanceira) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "avalista"
					java.lang.String tempAttribAvalista =

					reader.getAttributeValue(null, "avalista");

					if (tempAttribAvalista != null) {
						java.lang.String content = tempAttribAvalista;

						object.setAvalista(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribAvalista));

					} else {

					}
					handledAttributes.add("avalista");

					// handle attribute "contrato"
					java.lang.String tempAttribContrato =

					reader.getAttributeValue(null, "contrato");

					if (tempAttribContrato != null) {
						java.lang.String content = tempAttribContrato;

						object.setContrato(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribContrato));

					} else {

					}
					handledAttributes.add("contrato");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "filial"
					java.lang.String tempAttribFilial =

					reader.getAttributeValue(null, "filial");

					if (tempAttribFilial != null) {
						java.lang.String content = tempAttribFilial;

						object.setFilial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribFilial));

					} else {

					}
					handledAttributes.add("filial");

					// handle attribute "indicador-subjudice"
					java.lang.String tempAttribIndicadorSubjudice =

					reader.getAttributeValue(null, "indicador-subjudice");

					if (tempAttribIndicadorSubjudice != null) {
						java.lang.String content = tempAttribIndicadorSubjudice;

						object.setIndicadorSubjudice(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToBoolean(tempAttribIndicadorSubjudice));

					} else {

					}
					handledAttributes.add("indicador-subjudice");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "titulo-ocorrencia"
					java.lang.String tempAttribTituloOcorrencia =

					reader.getAttributeValue(null, "titulo-ocorrencia");

					if (tempAttribTituloOcorrencia != null) {
						java.lang.String content = tempAttribTituloOcorrencia;

						object.setTituloOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTituloOcorrencia));

					} else {

					}
					handledAttributes.add("titulo-ocorrencia");

					// handle attribute "valor-pendencia"
					java.lang.String tempAttribValorPendencia =

					reader.getAttributeValue(null, "valor-pendencia");

					if (tempAttribValorPendencia != null) {
						java.lang.String content = tempAttribValorPendencia;

						object.setValorPendencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorPendencia));

					} else {

					}
					handledAttributes.add("valor-pendencia");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "subjudice")
									.equals(reader.getName())) {

						object.setSubjudice(Subjudice.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class EstadoCivil implements
			org.apache.axis2.databinding.ADBBean {

		public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
				"http://webservice.consulta.spcjava.spcbrasil.org/",
				"Estado-Civil", "ns1");

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for EstadoCivil
		 */

		protected java.lang.String localEstadoCivil;

		private static java.util.HashMap _table_ = new java.util.HashMap();

		// Constructor

		protected EstadoCivil(java.lang.String value, boolean isRegisterValue) {
			localEstadoCivil = value;
			if (isRegisterValue) {

				_table_.put(localEstadoCivil, this);

			}

		}

		public static final java.lang.String _SOLTEIRO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("SOLTEIRO");

		public static final java.lang.String _CASADO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("CASADO");

		public static final java.lang.String _SEPARADO_JUDICIALMENTE = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("SEPARADO_JUDICIALMENTE");

		public static final java.lang.String _DIVORCIADO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("DIVORCIADO");

		public static final java.lang.String _VIUVO = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("VIUVO");

		public static final java.lang.String _UNIAO_ESTAVEL = org.apache.axis2.databinding.utils.ConverterUtil
				.convertToString("UNIAO_ESTAVEL");

		public static final EstadoCivil SOLTEIRO = new EstadoCivil(_SOLTEIRO,
				true);

		public static final EstadoCivil CASADO = new EstadoCivil(_CASADO, true);

		public static final EstadoCivil SEPARADO_JUDICIALMENTE = new EstadoCivil(
				_SEPARADO_JUDICIALMENTE, true);

		public static final EstadoCivil DIVORCIADO = new EstadoCivil(
				_DIVORCIADO, true);

		public static final EstadoCivil VIUVO = new EstadoCivil(_VIUVO, true);

		public static final EstadoCivil UNIAO_ESTAVEL = new EstadoCivil(
				_UNIAO_ESTAVEL, true);

		public java.lang.String getValue() {
			return localEstadoCivil;
		}

		public boolean equals(java.lang.Object obj) {
			return (obj == this);
		}

		public int hashCode() {
			return toString().hashCode();
		}

		public java.lang.String toString() {

			return localEstadoCivil.toString();

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, MY_QNAME) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					EstadoCivil.this.serialize(MY_QNAME, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					MY_QNAME, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it

			java.lang.String namespace = parentQName.getNamespaceURI();
			java.lang.String localName = parentQName.getLocalPart();

			if (!namespace.equals("")) {
				java.lang.String prefix = xmlWriter.getPrefix(namespace);

				if (prefix == null) {
					prefix = generatePrefix(namespace);

					xmlWriter.writeStartElement(prefix, localName, namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);

				} else {
					xmlWriter.writeStartElement(namespace, localName);
				}

			} else {
				xmlWriter.writeStartElement(localName);
			}

			// add the type details if this is used in a simple type
			if (serializeType) {
				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Estado-Civil",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Estado-Civil", xmlWriter);
				}
			}

			if (localEstadoCivil == null) {

				throw new org.apache.axis2.databinding.ADBException(
						"Value cannot be null !!");

			} else {

				xmlWriter.writeCharacters(localEstadoCivil);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			// We can safely assume an element has only one type associated with
			// it
			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					MY_QNAME,
					new java.lang.Object[] {
							org.apache.axis2.databinding.utils.reader.ADBXMLStreamReader.ELEMENT_TEXT,
							org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localEstadoCivil) }, null);

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			public static EstadoCivil fromValue(java.lang.String value)
					throws java.lang.IllegalArgumentException {
				EstadoCivil enumeration = (EstadoCivil)

				_table_.get(value);

				if (enumeration == null)
					throw new java.lang.IllegalArgumentException();
				return enumeration;
			}

			public static EstadoCivil fromString(java.lang.String value,
					java.lang.String namespaceURI)
					throws java.lang.IllegalArgumentException {
				try {

					return fromValue(org.apache.axis2.databinding.utils.ConverterUtil
							.convertToString(value));

				} catch (java.lang.Exception e) {
					throw new java.lang.IllegalArgumentException();
				}
			}

			public static EstadoCivil fromString(
					javax.xml.stream.XMLStreamReader xmlStreamReader,
					java.lang.String content) {
				if (content.indexOf(":") > -1) {
					java.lang.String prefix = content.substring(0,
							content.indexOf(":"));
					java.lang.String namespaceUri = xmlStreamReader
							.getNamespaceContext().getNamespaceURI(prefix);
					return EstadoCivil.Factory
							.fromString(content, namespaceUri);
				} else {
					return EstadoCivil.Factory.fromString(content, "");
				}
			}

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static EstadoCivil parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				EstadoCivil object = null;
				// initialize a hash map to keep values
				java.util.Map attributeMap = new java.util.HashMap();
				java.util.List extraAttributeList = new java.util.ArrayList();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					while (!reader.isEndElement()) {
						if (reader.isStartElement() || reader.hasText()) {

							java.lang.String content = reader.getElementText();

							if (content.indexOf(":") > 0) {
								// this seems to be a Qname so find the
								// namespace and send
								prefix = content.substring(0,
										content.indexOf(":"));
								namespaceuri = reader.getNamespaceURI(prefix);
								object = EstadoCivil.Factory.fromString(
										content, namespaceuri);
							} else {
								// this seems to be not a qname send and empty
								// namespace incase of it is
								// check is done in fromString method
								object = EstadoCivil.Factory.fromString(
										content, "");
							}

						} else {
							reader.next();
						}
					} // end of while loop

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class OcorrenciaRechequeOnline implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Ocorrencia-Recheque-Online Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for BancoParticipacaoRechequeOnline This was an Attribute!
		 */

		protected java.lang.String localBancoParticipacaoRechequeOnline;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getBancoParticipacaoRechequeOnline() {
			return localBancoParticipacaoRechequeOnline;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            BancoParticipacaoRechequeOnline
		 */
		public void setBancoParticipacaoRechequeOnline(java.lang.String param) {

			this.localBancoParticipacaoRechequeOnline = param;

		}

		/**
		 * field for MensagemIndisponibilidade This was an Attribute!
		 */

		protected java.lang.String localMensagemIndisponibilidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMensagemIndisponibilidade() {
			return localMensagemIndisponibilidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MensagemIndisponibilidade
		 */
		public void setMensagemIndisponibilidade(java.lang.String param) {

			this.localMensagemIndisponibilidade = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					OcorrenciaRechequeOnline.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Ocorrencia-Recheque-Online", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Ocorrencia-Recheque-Online", xmlWriter);
				}

			}

			if (localBancoParticipacaoRechequeOnline != null) {

				writeAttribute(
						"",
						"banco-participacao-recheque-online",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localBancoParticipacaoRechequeOnline),
						xmlWriter);

			}

			if (localMensagemIndisponibilidade != null) {

				writeAttribute(
						"",
						"mensagem-indisponibilidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMensagemIndisponibilidade),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"banco-participacao-recheque-online"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localBancoParticipacaoRechequeOnline));

			attribList.add(new javax.xml.namespace.QName("",
					"mensagem-indisponibilidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMensagemIndisponibilidade));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static OcorrenciaRechequeOnline parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				OcorrenciaRechequeOnline object = new OcorrenciaRechequeOnline();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Ocorrencia-Recheque-Online".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (OcorrenciaRechequeOnline) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "banco-participacao-recheque-online"
					java.lang.String tempAttribBancoParticipacaoRechequeOnline =

					reader.getAttributeValue(null,
							"banco-participacao-recheque-online");

					if (tempAttribBancoParticipacaoRechequeOnline != null) {
						java.lang.String content = tempAttribBancoParticipacaoRechequeOnline;

						object.setBancoParticipacaoRechequeOnline(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribBancoParticipacaoRechequeOnline));

					} else {

					}
					handledAttributes.add("banco-participacao-recheque-online");

					// handle attribute "mensagem-indisponibilidade"
					java.lang.String tempAttribMensagemIndisponibilidade =

					reader.getAttributeValue(null, "mensagem-indisponibilidade");

					if (tempAttribMensagemIndisponibilidade != null) {
						java.lang.String content = tempAttribMensagemIndisponibilidade;

						object.setMensagemIndisponibilidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMensagemIndisponibilidade));

					} else {

					}
					handledAttributes.add("mensagem-indisponibilidade");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContumacia extends InsumoContraOrdem implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contumacia Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContumacia.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Insumo-Contumacia", xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Contumacia", xmlWriter);
			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localInformante != null) {

				writeAttribute("", "informante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInformante), xmlWriter);

			}
			if (localMotivoTracker) {
				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				localMotivo.serialize(new javax.xml.namespace.QName("",
						"motivo"), factory, xmlWriter);
			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Contumacia"));
			if (localMotivoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "motivo"));

				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				elementList.add(localMotivo);
			}
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("", "informante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInformante));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContumacia parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContumacia object = new InsumoContumacia();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contumacia".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContumacia) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "informante"
					java.lang.String tempAttribInformante =

					reader.getAttributeValue(null, "informante");

					if (tempAttribInformante != null) {
						java.lang.String content = tempAttribInformante;

						object.setInformante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInformante));

					} else {

					}
					handledAttributes.add("informante");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "motivo")
									.equals(reader.getName())) {

						object.setMotivo(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(ChequeContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(ChequeFinal.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoSPCScore12Meses implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-SPC-Score-12-Meses Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Classe This was an Attribute!
		 */

		protected java.lang.String localClasse;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getClasse() {
			return localClasse;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Classe
		 */
		public void setClasse(java.lang.String param) {

			this.localClasse = param;

		}

		/**
		 * field for Horizonte This was an Attribute!
		 */

		protected int localHorizonte;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getHorizonte() {
			return localHorizonte;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Horizonte
		 */
		public void setHorizonte(int param) {

			this.localHorizonte = param;

		}

		/**
		 * field for MesagemInterpretativaScore This was an Attribute!
		 */

		protected java.lang.String localMesagemInterpretativaScore;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMesagemInterpretativaScore() {
			return localMesagemInterpretativaScore;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesagemInterpretativaScore
		 */
		public void setMesagemInterpretativaScore(java.lang.String param) {

			this.localMesagemInterpretativaScore = param;

		}

		/**
		 * field for MesagemInterpretativaProbabilidade This was an Attribute!
		 */

		protected java.lang.String localMesagemInterpretativaProbabilidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMesagemInterpretativaProbabilidade() {
			return localMesagemInterpretativaProbabilidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesagemInterpretativaProbabilidade
		 */
		public void setMesagemInterpretativaProbabilidade(java.lang.String param) {

			this.localMesagemInterpretativaProbabilidade = param;

		}

		/**
		 * field for MesagemSemaforo This was an Attribute!
		 */

		protected java.lang.String localMesagemSemaforo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getMesagemSemaforo() {
			return localMesagemSemaforo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            MesagemSemaforo
		 */
		public void setMesagemSemaforo(java.lang.String param) {

			this.localMesagemSemaforo = param;

		}

		/**
		 * field for Probabilidade This was an Attribute!
		 */

		protected double localProbabilidade;

		/**
		 * Auto generated getter method
		 * 
		 * @return double
		 */
		public double getProbabilidade() {
			return localProbabilidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Probabilidade
		 */
		public void setProbabilidade(double param) {

			this.localProbabilidade = param;

		}

		/**
		 * field for Score This was an Attribute!
		 */

		protected int localScore;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getScore() {
			return localScore;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Score
		 */
		public void setScore(int param) {

			this.localScore = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoSPCScore12Meses.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-SPC-Score-12-Meses", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-SPC-Score-12-Meses", xmlWriter);
				}

			}

			if (localClasse != null) {

				writeAttribute("", "classe",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localClasse), xmlWriter);

			}

			if (localHorizonte != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "horizonte",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localHorizonte), xmlWriter);

			}

			else {
				throw new org.apache.axis2.databinding.ADBException(
						"required attribute localHorizonte is null");
			}

			if (localMesagemInterpretativaScore != null) {

				writeAttribute(
						"",
						"mesagem-interpretativa-score",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesagemInterpretativaScore),
						xmlWriter);

			}

			if (localMesagemInterpretativaProbabilidade != null) {

				writeAttribute(
						"",
						"mesagem-interpretativa-probabilidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesagemInterpretativaProbabilidade),
						xmlWriter);

			}

			if (localMesagemSemaforo != null) {

				writeAttribute("", "mesagem-semaforo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMesagemSemaforo),
						xmlWriter);

			}

			if (!java.lang.Double.isNaN(localProbabilidade)) {

				writeAttribute("", "probabilidade",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localProbabilidade), xmlWriter);

			}

			if (localScore != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "score",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localScore), xmlWriter);

			}

			else {
				throw new org.apache.axis2.databinding.ADBException(
						"required attribute localScore is null");
			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "classe"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localClasse));

			attribList.add(new javax.xml.namespace.QName("", "horizonte"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localHorizonte));

			attribList.add(new javax.xml.namespace.QName("",
					"mesagem-interpretativa-score"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesagemInterpretativaScore));

			attribList.add(new javax.xml.namespace.QName("",
					"mesagem-interpretativa-probabilidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesagemInterpretativaProbabilidade));

			attribList
					.add(new javax.xml.namespace.QName("", "mesagem-semaforo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMesagemSemaforo));

			attribList.add(new javax.xml.namespace.QName("", "probabilidade"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localProbabilidade));

			attribList.add(new javax.xml.namespace.QName("", "score"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localScore));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoSPCScore12Meses parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoSPCScore12Meses object = new InsumoSPCScore12Meses();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-SPC-Score-12-Meses".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoSPCScore12Meses) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "classe"
					java.lang.String tempAttribClasse =

					reader.getAttributeValue(null, "classe");

					if (tempAttribClasse != null) {
						java.lang.String content = tempAttribClasse;

						object.setClasse(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribClasse));

					} else {

					}
					handledAttributes.add("classe");

					// handle attribute "horizonte"
					java.lang.String tempAttribHorizonte =

					reader.getAttributeValue(null, "horizonte");

					if (tempAttribHorizonte != null) {
						java.lang.String content = tempAttribHorizonte;

						object.setHorizonte(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribHorizonte));

					} else {

						throw new org.apache.axis2.databinding.ADBException(
								"Required attribute horizonte is missing");

					}
					handledAttributes.add("horizonte");

					// handle attribute "mesagem-interpretativa-score"
					java.lang.String tempAttribMesagemInterpretativaScore =

					reader.getAttributeValue(null,
							"mesagem-interpretativa-score");

					if (tempAttribMesagemInterpretativaScore != null) {
						java.lang.String content = tempAttribMesagemInterpretativaScore;

						object.setMesagemInterpretativaScore(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMesagemInterpretativaScore));

					} else {

					}
					handledAttributes.add("mesagem-interpretativa-score");

					// handle attribute "mesagem-interpretativa-probabilidade"
					java.lang.String tempAttribMesagemInterpretativaProbabilidade =

					reader.getAttributeValue(null,
							"mesagem-interpretativa-probabilidade");

					if (tempAttribMesagemInterpretativaProbabilidade != null) {
						java.lang.String content = tempAttribMesagemInterpretativaProbabilidade;

						object.setMesagemInterpretativaProbabilidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMesagemInterpretativaProbabilidade));

					} else {

					}
					handledAttributes
							.add("mesagem-interpretativa-probabilidade");

					// handle attribute "mesagem-semaforo"
					java.lang.String tempAttribMesagemSemaforo =

					reader.getAttributeValue(null, "mesagem-semaforo");

					if (tempAttribMesagemSemaforo != null) {
						java.lang.String content = tempAttribMesagemSemaforo;

						object.setMesagemSemaforo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMesagemSemaforo));

					} else {

					}
					handledAttributes.add("mesagem-semaforo");

					// handle attribute "probabilidade"
					java.lang.String tempAttribProbabilidade =

					reader.getAttributeValue(null, "probabilidade");

					if (tempAttribProbabilidade != null) {
						java.lang.String content = tempAttribProbabilidade;

						object.setProbabilidade(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDouble(tempAttribProbabilidade));

					} else {

						object.setProbabilidade(java.lang.Double.NaN);

					}
					handledAttributes.add("probabilidade");

					// handle attribute "score"
					java.lang.String tempAttribScore =

					reader.getAttributeValue(null, "score");

					if (tempAttribScore != null) {
						java.lang.String content = tempAttribScore;

						object.setScore(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribScore));

					} else {

						throw new org.apache.axis2.databinding.ADBException(
								"Required attribute score is missing");

					}
					handledAttributes.add("score");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoRiskscoring12Meses extends
			InsumoRiskscoring6Meses implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Riskscoring-12-Meses Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoRiskscoring12Meses.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Insumo-Riskscoring-12-Meses",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Riskscoring-12-Meses", xmlWriter);
			}

			if (localDataFator != null) {

				writeAttribute("", "data-fator",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataFator), xmlWriter);

			}

			if (localFatorPrinad != null) {

				writeAttribute("", "fator-prinad",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFatorPrinad), xmlWriter);

			}

			if (localFatorRiskscoring != null) {

				writeAttribute("", "fator-riskscoring",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localFatorRiskscoring),
						xmlWriter);

			}
			if (localHorizonteTempoTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "horizonte-tempo",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"horizonte-tempo");
					}

				} else {
					xmlWriter.writeStartElement("horizonte-tempo");
				}

				if (localHorizonteTempo == java.lang.Integer.MIN_VALUE) {

					throw new org.apache.axis2.databinding.ADBException(
							"horizonte-tempo cannot be null!!");

				} else {
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localHorizonteTempo));
				}

				xmlWriter.writeEndElement();
			}
			if (localMensagemInterpretacaoTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix,
								"mensagem-interpretacao", namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"mensagem-interpretacao");
					}

				} else {
					xmlWriter.writeStartElement("mensagem-interpretacao");
				}

				if (localMensagemInterpretacao == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-interpretacao cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localMensagemInterpretacao);

				}

				xmlWriter.writeEndElement();
			}
			if (localMensagemPrinadTracker) {
				namespace = "";
				if (!namespace.equals("")) {
					prefix = xmlWriter.getPrefix(namespace);

					if (prefix == null) {
						prefix = generatePrefix(namespace);

						xmlWriter.writeStartElement(prefix, "mensagem-prinad",
								namespace);
						xmlWriter.writeNamespace(prefix, namespace);
						xmlWriter.setPrefix(prefix, namespace);

					} else {
						xmlWriter.writeStartElement(namespace,
								"mensagem-prinad");
					}

				} else {
					xmlWriter.writeStartElement("mensagem-prinad");
				}

				if (localMensagemPrinad == null) {
					// write the nil attribute

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-prinad cannot be null!!");

				} else {

					xmlWriter.writeCharacters(localMensagemPrinad);

				}

				xmlWriter.writeEndElement();
			}
			if (localMensagemRiskscoringTracker) {
				if (localMensagemRiskscoring != null) {
					for (int i = 0; i < localMensagemRiskscoring.length; i++) {
						if (localMensagemRiskscoring[i] != null) {
							localMensagemRiskscoring[i].serialize(
									new javax.xml.namespace.QName("",
											"mensagem-riskscoring"), factory,
									xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-riskscoring cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Riskscoring-12-Meses"));
			if (localHorizonteTempoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"horizonte-tempo"));

				elementList
						.add(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localHorizonteTempo));
			}
			if (localMensagemInterpretacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"mensagem-interpretacao"));

				if (localMensagemInterpretacao != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localMensagemInterpretacao));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-interpretacao cannot be null!!");
				}
			}
			if (localMensagemPrinadTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"mensagem-prinad"));

				if (localMensagemPrinad != null) {
					elementList
							.add(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(localMensagemPrinad));
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-prinad cannot be null!!");
				}
			}
			if (localMensagemRiskscoringTracker) {
				if (localMensagemRiskscoring != null) {
					for (int i = 0; i < localMensagemRiskscoring.length; i++) {

						if (localMensagemRiskscoring[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"mensagem-riskscoring"));
							elementList.add(localMensagemRiskscoring[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"mensagem-riskscoring cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("", "data-fator"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataFator));

			attribList.add(new javax.xml.namespace.QName("", "fator-prinad"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFatorPrinad));

			attribList.add(new javax.xml.namespace.QName("",
					"fator-riskscoring"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localFatorRiskscoring));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoRiskscoring12Meses parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoRiskscoring12Meses object = new InsumoRiskscoring12Meses();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Riskscoring-12-Meses".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoRiskscoring12Meses) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-fator"
					java.lang.String tempAttribDataFator =

					reader.getAttributeValue(null, "data-fator");

					if (tempAttribDataFator != null) {
						java.lang.String content = tempAttribDataFator;

						object.setDataFator(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataFator));

					} else {

					}
					handledAttributes.add("data-fator");

					// handle attribute "fator-prinad"
					java.lang.String tempAttribFatorPrinad =

					reader.getAttributeValue(null, "fator-prinad");

					if (tempAttribFatorPrinad != null) {
						java.lang.String content = tempAttribFatorPrinad;

						object.setFatorPrinad(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribFatorPrinad));

					} else {

					}
					handledAttributes.add("fator-prinad");

					// handle attribute "fator-riskscoring"
					java.lang.String tempAttribFatorRiskscoring =

					reader.getAttributeValue(null, "fator-riskscoring");

					if (tempAttribFatorRiskscoring != null) {
						java.lang.String content = tempAttribFatorRiskscoring;

						object.setFatorRiskscoring(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribFatorRiskscoring));

					} else {

					}
					handledAttributes.add("fator-riskscoring");

					reader.next();

					java.util.ArrayList list4 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"horizonte-tempo").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setHorizonteTempo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(content));

						reader.next();

					} // End of if for expected property start element

					else {

						object.setHorizonteTempo(java.lang.Integer.MIN_VALUE);

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-interpretacao").equals(reader
									.getName())) {

						java.lang.String content = reader.getElementText();

						object.setMensagemInterpretacao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-prinad").equals(reader.getName())) {

						java.lang.String content = reader.getElementText();

						object.setMensagemPrinad(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(content));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"mensagem-riskscoring").equals(reader
									.getName())) {

						// Process the array and step past its final element's
						// end.
						list4.add(MensagemRiskscoring.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone4 = false;
						while (!loopDone4) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone4 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"mensagem-riskscoring").equals(reader
										.getName())) {
									list4.add(MensagemRiskscoring.Factory
											.parse(reader));

								} else {
									loopDone4 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setMensagemRiskscoring((MensagemRiskscoring[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(MensagemRiskscoring.class,
										list4));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Moeda implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Moeda Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Simbolo This was an Attribute!
		 */

		protected java.lang.String localSimbolo;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getSimbolo() {
			return localSimbolo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Simbolo
		 */
		public void setSimbolo(java.lang.String param) {

			this.localSimbolo = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Moeda.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Moeda", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Moeda", xmlWriter);
				}

			}

			if (localSimbolo != null) {

				writeAttribute("", "simbolo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localSimbolo), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "simbolo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localSimbolo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Moeda parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Moeda object = new Moeda();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Moeda".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Moeda) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "simbolo"
					java.lang.String tempAttribSimbolo =

					reader.getAttributeValue(null, "simbolo");

					if (tempAttribSimbolo != null) {
						java.lang.String content = tempAttribSimbolo;

						object.setSimbolo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribSimbolo));

					} else {

					}
					handledAttributes.add("simbolo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResumoInsumo implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resumo-Insumo Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for QuantidadeTotal This was an Attribute!
		 */

		protected int localQuantidadeTotal;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeTotal() {
			return localQuantidadeTotal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeTotal
		 */
		public void setQuantidadeTotal(int param) {

			this.localQuantidadeTotal = param;

		}

		/**
		 * field for DataUltimaOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataUltimaOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataUltimaOcorrencia() {
			return localDataUltimaOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataUltimaOcorrencia
		 */
		public void setDataUltimaOcorrencia(java.util.Calendar param) {

			this.localDataUltimaOcorrencia = param;

		}

		/**
		 * field for ValorTotal This was an Attribute!
		 */

		protected java.math.BigDecimal localValorTotal;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorTotal() {
			return localValorTotal;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorTotal
		 */
		public void setValorTotal(java.math.BigDecimal param) {

			this.localValorTotal = param;

		}

		/**
		 * field for ValorUltimaOcorrencia This was an Attribute!
		 */

		protected java.math.BigDecimal localValorUltimaOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorUltimaOcorrencia() {
			return localValorUltimaOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorUltimaOcorrencia
		 */
		public void setValorUltimaOcorrencia(java.math.BigDecimal param) {

			this.localValorUltimaOcorrencia = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResumoInsumo.this
							.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Resumo-Insumo",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Resumo-Insumo", xmlWriter);
				}

			}

			if (localQuantidadeTotal != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-total",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeTotal),
						xmlWriter);

			}

			if (localDataUltimaOcorrencia != null) {

				writeAttribute("", "data-ultima-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataUltimaOcorrencia),
						xmlWriter);

			}

			if (localValorTotal != null) {

				writeAttribute("", "valor-total",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorTotal), xmlWriter);

			}

			if (localValorUltimaOcorrencia != null) {

				writeAttribute("", "valor-ultima-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorUltimaOcorrencia),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList
					.add(new javax.xml.namespace.QName("", "quantidade-total"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeTotal));

			attribList.add(new javax.xml.namespace.QName("",
					"data-ultima-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataUltimaOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "valor-total"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorTotal));

			attribList.add(new javax.xml.namespace.QName("",
					"valor-ultima-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorUltimaOcorrencia));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResumoInsumo parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResumoInsumo object = new ResumoInsumo();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resumo-Insumo".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResumoInsumo) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "quantidade-total"
					java.lang.String tempAttribQuantidadeTotal =

					reader.getAttributeValue(null, "quantidade-total");

					if (tempAttribQuantidadeTotal != null) {
						java.lang.String content = tempAttribQuantidadeTotal;

						object.setQuantidadeTotal(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeTotal));

					} else {

						object.setQuantidadeTotal(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-total");

					// handle attribute "data-ultima-ocorrencia"
					java.lang.String tempAttribDataUltimaOcorrencia =

					reader.getAttributeValue(null, "data-ultima-ocorrencia");

					if (tempAttribDataUltimaOcorrencia != null) {
						java.lang.String content = tempAttribDataUltimaOcorrencia;

						object.setDataUltimaOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataUltimaOcorrencia));

					} else {

					}
					handledAttributes.add("data-ultima-ocorrencia");

					// handle attribute "valor-total"
					java.lang.String tempAttribValorTotal =

					reader.getAttributeValue(null, "valor-total");

					if (tempAttribValorTotal != null) {
						java.lang.String content = tempAttribValorTotal;

						object.setValorTotal(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorTotal));

					} else {

					}
					handledAttributes.add("valor-total");

					// handle attribute "valor-ultima-ocorrencia"
					java.lang.String tempAttribValorUltimaOcorrencia =

					reader.getAttributeValue(null, "valor-ultima-ocorrencia");

					if (tempAttribValorUltimaOcorrencia != null) {
						java.lang.String content = tempAttribValorUltimaOcorrencia;

						object.setValorUltimaOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorUltimaOcorrencia));

					} else {

					}
					handledAttributes.add("valor-ultima-ocorrencia");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Cidade implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Cidade Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Estado
		 */

		protected Estado localEstado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localEstadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Estado
		 */
		public Estado getEstado() {
			return localEstado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Estado
		 */
		public void setEstado(Estado param) {

			if (param != null) {
				// update the setting tracker
				localEstadoTracker = true;
			} else {
				localEstadoTracker = false;

			}

			this.localEstado = param;

		}

		/**
		 * field for Nome This was an Attribute!
		 */

		protected java.lang.String localNome;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNome() {
			return localNome;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Nome
		 */
		public void setNome(java.lang.String param) {

			this.localNome = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Cidade.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cidade", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cidade", xmlWriter);
				}

			}

			if (localNome != null) {

				writeAttribute("", "nome",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNome), xmlWriter);

			}
			if (localEstadoTracker) {
				if (localEstado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado cannot be null!!");
				}
				localEstado.serialize(new javax.xml.namespace.QName("",
						"estado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localEstadoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "estado"));

				if (localEstado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"estado cannot be null!!");
				}
				elementList.add(localEstado);
			}
			attribList.add(new javax.xml.namespace.QName("", "nome"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNome));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Cidade parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Cidade object = new Cidade();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cidade".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Cidade) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "nome"
					java.lang.String tempAttribNome =

					reader.getAttributeValue(null, "nome");

					if (tempAttribNome != null) {
						java.lang.String content = tempAttribNome;

						object.setNome(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNome));

					} else {

					}
					handledAttributes.add("nome");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "estado")
									.equals(reader.getName())) {

						object.setEstado(Estado.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoInsumoContumacia extends ResultadoInsumo
			implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-Insumo-Contumacia Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DataFinalPeriodoConsultado This was an Attribute!
		 */

		protected java.util.Calendar localDataFinalPeriodoConsultado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataFinalPeriodoConsultado() {
			return localDataFinalPeriodoConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataFinalPeriodoConsultado
		 */
		public void setDataFinalPeriodoConsultado(java.util.Calendar param) {

			this.localDataFinalPeriodoConsultado = param;

		}

		/**
		 * field for DataInicialPeriodoConsultado This was an Attribute!
		 */

		protected java.util.Calendar localDataInicialPeriodoConsultado;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInicialPeriodoConsultado() {
			return localDataInicialPeriodoConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInicialPeriodoConsultado
		 */
		public void setDataInicialPeriodoConsultado(java.util.Calendar param) {

			this.localDataInicialPeriodoConsultado = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoInsumoContumacia.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Resultado-Insumo-Contumacia",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Resultado-Insumo-Contumacia", xmlWriter);
			}

			if (localDataFinalPeriodoConsultado != null) {

				writeAttribute(
						"",
						"data-final-periodo-consultado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataFinalPeriodoConsultado),
						xmlWriter);

			}

			if (localDataInicialPeriodoConsultado != null) {

				writeAttribute(
						"",
						"data-inicial-periodo-consultado",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInicialPeriodoConsultado),
						xmlWriter);

			}
			if (localResumoTracker) {
				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				localResumo.serialize(new javax.xml.namespace.QName("",
						"resumo"), factory, xmlWriter);
			}
			if (localResultadoInsumoChoice_type0Tracker) {

				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {
						if (localResultadoInsumoChoice_type0[i] != null) {
							localResultadoInsumoChoice_type0[i].serialize(null,
									factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");
				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Resultado-Insumo-Contumacia"));
			if (localResumoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "resumo"));

				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				elementList.add(localResumo);
			}
			if (localResultadoInsumoChoice_type0Tracker) {
				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {

						if (localResultadoInsumoChoice_type0[i] != null) {
							elementList
									.add(new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"Resultado-InsumoChoice_type0"));
							elementList
									.add(localResultadoInsumoChoice_type0[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-final-periodo-consultado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataFinalPeriodoConsultado));

			attribList.add(new javax.xml.namespace.QName("",
					"data-inicial-periodo-consultado"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInicialPeriodoConsultado));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoInsumoContumacia parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoInsumoContumacia object = new ResultadoInsumoContumacia();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resultado-Insumo-Contumacia".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResultadoInsumoContumacia) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-final-periodo-consultado"
					java.lang.String tempAttribDataFinalPeriodoConsultado =

					reader.getAttributeValue(null,
							"data-final-periodo-consultado");

					if (tempAttribDataFinalPeriodoConsultado != null) {
						java.lang.String content = tempAttribDataFinalPeriodoConsultado;

						object.setDataFinalPeriodoConsultado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataFinalPeriodoConsultado));

					} else {

					}
					handledAttributes.add("data-final-periodo-consultado");

					// handle attribute "data-inicial-periodo-consultado"
					java.lang.String tempAttribDataInicialPeriodoConsultado =

					reader.getAttributeValue(null,
							"data-inicial-periodo-consultado");

					if (tempAttribDataInicialPeriodoConsultado != null) {
						java.lang.String content = tempAttribDataInicialPeriodoConsultado;

						object.setDataInicialPeriodoConsultado(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInicialPeriodoConsultado));

					} else {

					}
					handledAttributes.add("data-inicial-periodo-consultado");

					reader.next();

					java.util.ArrayList list2 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "resumo")
									.equals(reader.getName())) {

						object.setResumo(ResumoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					try {

						if (reader.isStartElement()) {

							// Process the array and step past its final
							// element's end.
							list2.add(ResultadoInsumoChoice_type0.Factory
									.parse(reader));
							// loop until we find a start element that is not
							// part of this array
							boolean loopDone2 = false;
							while (!loopDone2) {

								// Step to next element event.
								while (!reader.isStartElement()
										&& !reader.isEndElement())
									reader.next();
								if (reader.isEndElement()) {
									// two continuous end elements means we are
									// exiting the xml structure
									loopDone2 = true;
								} else {
									list2.add(ResultadoInsumoChoice_type0.Factory
											.parse(reader));
								}
							}
							// call the converter utility to convert and set the
							// array
							object.setResultadoInsumoChoice_type0((ResultadoInsumoChoice_type0[]) org.apache.axis2.databinding.utils.ConverterUtil
									.convertToArray(
											ResultadoInsumoChoice_type0.class,
											list2));

						} // End of if for expected property start element

						else {

						}

					} catch (java.lang.Exception e) {
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class ResultadoInsumoContraOrdem extends ResultadoInsumo
			implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Resultado-Insumo-Contra-Ordem Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for QuantidadeTaloesContraOrdenados This was an Attribute!
		 */

		protected int localQuantidadeTaloesContraOrdenados;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeTaloesContraOrdenados() {
			return localQuantidadeTaloesContraOrdenados;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeTaloesContraOrdenados
		 */
		public void setQuantidadeTaloesContraOrdenados(int param) {

			this.localQuantidadeTaloesContraOrdenados = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					ResultadoInsumoContraOrdem.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Resultado-Insumo-Contra-Ordem",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Resultado-Insumo-Contra-Ordem", xmlWriter);
			}

			if (localQuantidadeTaloesContraOrdenados != java.lang.Integer.MIN_VALUE) {

				writeAttribute(
						"",
						"quantidade-taloes-contra-ordenados",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeTaloesContraOrdenados),
						xmlWriter);

			}
			if (localResumoTracker) {
				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				localResumo.serialize(new javax.xml.namespace.QName("",
						"resumo"), factory, xmlWriter);
			}
			if (localResultadoInsumoChoice_type0Tracker) {

				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {
						if (localResultadoInsumoChoice_type0[i] != null) {
							localResultadoInsumoChoice_type0[i].serialize(null,
									factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {
					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");
				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Resultado-Insumo-Contra-Ordem"));
			if (localResumoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "resumo"));

				if (localResumo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"resumo cannot be null!!");
				}
				elementList.add(localResumo);
			}
			if (localResultadoInsumoChoice_type0Tracker) {
				if (localResultadoInsumoChoice_type0 != null) {
					for (int i = 0; i < localResultadoInsumoChoice_type0.length; i++) {

						if (localResultadoInsumoChoice_type0[i] != null) {
							elementList
									.add(new javax.xml.namespace.QName(
											"http://webservice.consulta.spcjava.spcbrasil.org/",
											"Resultado-InsumoChoice_type0"));
							elementList
									.add(localResultadoInsumoChoice_type0[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"Resultado-InsumoChoice_type0 cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-taloes-contra-ordenados"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeTaloesContraOrdenados));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static ResultadoInsumoContraOrdem parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				ResultadoInsumoContraOrdem object = new ResultadoInsumoContraOrdem();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Resultado-Insumo-Contra-Ordem".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (ResultadoInsumoContraOrdem) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "quantidade-taloes-contra-ordenados"
					java.lang.String tempAttribQuantidadeTaloesContraOrdenados =

					reader.getAttributeValue(null,
							"quantidade-taloes-contra-ordenados");

					if (tempAttribQuantidadeTaloesContraOrdenados != null) {
						java.lang.String content = tempAttribQuantidadeTaloesContraOrdenados;

						object.setQuantidadeTaloesContraOrdenados(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeTaloesContraOrdenados));

					} else {

						object.setQuantidadeTaloesContraOrdenados(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-taloes-contra-ordenados");

					reader.next();

					java.util.ArrayList list2 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "resumo")
									.equals(reader.getName())) {

						object.setResumo(ResumoInsumo.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					try {

						if (reader.isStartElement()) {

							// Process the array and step past its final
							// element's end.
							list2.add(ResultadoInsumoChoice_type0.Factory
									.parse(reader));
							// loop until we find a start element that is not
							// part of this array
							boolean loopDone2 = false;
							while (!loopDone2) {

								// Step to next element event.
								while (!reader.isStartElement()
										&& !reader.isEndElement())
									reader.next();
								if (reader.isEndElement()) {
									// two continuous end elements means we are
									// exiting the xml structure
									loopDone2 = true;
								} else {
									list2.add(ResultadoInsumoChoice_type0.Factory
											.parse(reader));
								}
							}
							// call the converter utility to convert and set the
							// array
							object.setResultadoInsumoChoice_type0((ResultadoInsumoChoice_type0[]) org.apache.axis2.databinding.utils.ConverterUtil
									.convertToArray(
											ResultadoInsumoChoice_type0.class,
											list2));

						} // End of if for expected property start element

						else {

						}

					} catch (java.lang.Exception e) {
					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContraOrdemDocumentoDiferenteSRS extends
			InsumoContraOrdemSRS implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contra-Ordem-Documento-Diferente-SRS Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContraOrdemDocumentoDiferenteSRS.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute(
						"xsi",
						"http://www.w3.org/2001/XMLSchema-instance",
						"type",
						namespacePrefix
								+ ":Insumo-Contra-Ordem-Documento-Diferente-SRS",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Contra-Ordem-Documento-Diferente-SRS",
						xmlWriter);
			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localMotivo != null) {

				writeAttribute("", "motivo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMotivo), xmlWriter);

			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Contra-Ordem-Documento-Diferente-SRS"));
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "motivo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMotivo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContraOrdemDocumentoDiferenteSRS parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContraOrdemDocumentoDiferenteSRS object = new InsumoContraOrdemDocumentoDiferenteSRS();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contra-Ordem-Documento-Diferente-SRS"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContraOrdemDocumentoDiferenteSRS) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "motivo"
					java.lang.String tempAttribMotivo =

					reader.getAttributeValue(null, "motivo");

					if (tempAttribMotivo != null) {
						java.lang.String content = tempAttribMotivo;

						object.setMotivo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMotivo));

					} else {

					}
					handledAttributes.add("motivo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class Cpf implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name = Cpf
		 * Namespace URI = http://webservice.consulta.spcjava.spcbrasil.org/
		 * Namespace Prefix = ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for RegiaoOrigem This was an Attribute!
		 */

		protected java.lang.String localRegiaoOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getRegiaoOrigem() {
			return localRegiaoOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RegiaoOrigem
		 */
		public void setRegiaoOrigem(java.lang.String param) {

			this.localRegiaoOrigem = param;

		}

		/**
		 * field for Numero This was an Attribute!
		 */

		protected java.lang.String localNumero;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumero() {
			return localNumero;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Numero
		 */
		public void setNumero(java.lang.String param) {

			this.localNumero = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					Cpf.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Cpf", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Cpf", xmlWriter);
				}

			}

			if (localRegiaoOrigem != null) {

				writeAttribute("", "regiao-origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRegiaoOrigem), xmlWriter);

			}

			if (localNumero != null) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "regiao-origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRegiaoOrigem));

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static Cpf parse(javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				Cpf object = new Cpf();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Cpf".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (Cpf) ExtensionMapper.getTypeObject(
										nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "regiao-origem"
					java.lang.String tempAttribRegiaoOrigem =

					reader.getAttributeValue(null, "regiao-origem");

					if (tempAttribRegiaoOrigem != null) {
						java.lang.String content = tempAttribRegiaoOrigem;

						object.setRegiaoOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribRegiaoOrigem));

					} else {

					}
					handledAttributes.add("regiao-origem");

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumero));

					} else {

					}
					handledAttributes.add("numero");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoHistoricoContaCorrente implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Historico-Conta-Corrente Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for UltimoChequeConsultado
		 */

		protected Cheque localUltimoChequeConsultado;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localUltimoChequeConsultadoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getUltimoChequeConsultado() {
			return localUltimoChequeConsultado;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            UltimoChequeConsultado
		 */
		public void setUltimoChequeConsultado(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localUltimoChequeConsultadoTracker = true;
			} else {
				localUltimoChequeConsultadoTracker = false;

			}

			this.localUltimoChequeConsultado = param;

		}

		/**
		 * field for DataConsultaMaisAntiga This was an Attribute!
		 */

		protected java.util.Calendar localDataConsultaMaisAntiga;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsultaMaisAntiga() {
			return localDataConsultaMaisAntiga;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsultaMaisAntiga
		 */
		public void setDataConsultaMaisAntiga(java.util.Calendar param) {

			this.localDataConsultaMaisAntiga = param;

		}

		/**
		 * field for DataConsultaMaisRecente This was an Attribute!
		 */

		protected java.util.Calendar localDataConsultaMaisRecente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataConsultaMaisRecente() {
			return localDataConsultaMaisRecente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataConsultaMaisRecente
		 */
		public void setDataConsultaMaisRecente(java.util.Calendar param) {

			this.localDataConsultaMaisRecente = param;

		}

		/**
		 * field for QuantidadeConsultas This was an Attribute!
		 */

		protected int localQuantidadeConsultas;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeConsultas() {
			return localQuantidadeConsultas;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeConsultas
		 */
		public void setQuantidadeConsultas(int param) {

			this.localQuantidadeConsultas = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoHistoricoContaCorrente.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Historico-Conta-Corrente",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Historico-Conta-Corrente",
							xmlWriter);
				}

			}

			if (localDataConsultaMaisAntiga != null) {

				writeAttribute("", "data-consulta-mais-antiga",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaMaisAntiga),
						xmlWriter);

			}

			if (localDataConsultaMaisRecente != null) {

				writeAttribute("", "data-consulta-mais-recente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataConsultaMaisRecente),
						xmlWriter);

			}

			if (localQuantidadeConsultas != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-consultas",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeConsultas),
						xmlWriter);

			}
			if (localUltimoChequeConsultadoTracker) {
				if (localUltimoChequeConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-cheque-consultado cannot be null!!");
				}
				localUltimoChequeConsultado
						.serialize(new javax.xml.namespace.QName("",
								"ultimo-cheque-consultado"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localUltimoChequeConsultadoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ultimo-cheque-consultado"));

				if (localUltimoChequeConsultado == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ultimo-cheque-consultado cannot be null!!");
				}
				elementList.add(localUltimoChequeConsultado);
			}
			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-mais-antiga"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaMaisAntiga));

			attribList.add(new javax.xml.namespace.QName("",
					"data-consulta-mais-recente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataConsultaMaisRecente));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-consultas"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeConsultas));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoHistoricoContaCorrente parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoHistoricoContaCorrente object = new InsumoHistoricoContaCorrente();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Historico-Conta-Corrente".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoHistoricoContaCorrente) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-consulta-mais-antiga"
					java.lang.String tempAttribDataConsultaMaisAntiga =

					reader.getAttributeValue(null, "data-consulta-mais-antiga");

					if (tempAttribDataConsultaMaisAntiga != null) {
						java.lang.String content = tempAttribDataConsultaMaisAntiga;

						object.setDataConsultaMaisAntiga(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaMaisAntiga));

					} else {

					}
					handledAttributes.add("data-consulta-mais-antiga");

					// handle attribute "data-consulta-mais-recente"
					java.lang.String tempAttribDataConsultaMaisRecente =

					reader.getAttributeValue(null, "data-consulta-mais-recente");

					if (tempAttribDataConsultaMaisRecente != null) {
						java.lang.String content = tempAttribDataConsultaMaisRecente;

						object.setDataConsultaMaisRecente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataConsultaMaisRecente));

					} else {

					}
					handledAttributes.add("data-consulta-mais-recente");

					// handle attribute "quantidade-consultas"
					java.lang.String tempAttribQuantidadeConsultas =

					reader.getAttributeValue(null, "quantidade-consultas");

					if (tempAttribQuantidadeConsultas != null) {
						java.lang.String content = tempAttribQuantidadeConsultas;

						object.setQuantidadeConsultas(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeConsultas));

					} else {

						object.setQuantidadeConsultas(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-consultas");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ultimo-cheque-consultado").equals(reader
									.getName())) {

						object.setUltimoChequeConsultado(Cheque.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class AgenciaContaDocumentoDiferente implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Agencia-Conta-Documento-Diferente Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DadosBancarios
		 */

		protected DadosBancarios localDadosBancarios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDadosBancariosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return DadosBancarios
		 */
		public DadosBancarios getDadosBancarios() {
			return localDadosBancarios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DadosBancarios
		 */
		public void setDadosBancarios(DadosBancarios param) {

			if (param != null) {
				// update the setting tracker
				localDadosBancariosTracker = true;
			} else {
				localDadosBancariosTracker = false;

			}

			this.localDadosBancarios = param;

		}

		/**
		 * field for Documento This was an Attribute!
		 */

		protected java.lang.String localDocumento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDocumento() {
			return localDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Documento
		 */
		public void setDocumento(java.lang.String param) {

			this.localDocumento = param;

		}

		/**
		 * field for Origem This was an Attribute!
		 */

		protected java.lang.String localOrigem;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getOrigem() {
			return localOrigem;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Origem
		 */
		public void setOrigem(java.lang.String param) {

			this.localOrigem = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					AgenciaContaDocumentoDiferente.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Agencia-Conta-Documento-Diferente",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Agencia-Conta-Documento-Diferente",
							xmlWriter);
				}

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}
			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static AgenciaContaDocumentoDiferente parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				AgenciaContaDocumentoDiferente object = new AgenciaContaDocumentoDiferente();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Agencia-Conta-Documento-Diferente"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (AgenciaContaDocumentoDiferente) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoChequeSemFundoAchei implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Cheque-Sem-Fundo-Achei Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cheque
		 */

		protected Cheque localCheque;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localChequeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cheque
		 */
		public Cheque getCheque() {
			return localCheque;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cheque
		 */
		public void setCheque(Cheque param) {

			if (param != null) {
				// update the setting tracker
				localChequeTracker = true;
			} else {
				localChequeTracker = false;

			}

			this.localCheque = param;

		}

		/**
		 * field for Cidade
		 */

		protected Cidade localCidade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCidadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cidade
		 */
		public Cidade getCidade() {
			return localCidade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cidade
		 */
		public void setCidade(Cidade param) {

			if (param != null) {
				// update the setting tracker
				localCidadeTracker = true;
			} else {
				localCidadeTracker = false;

			}

			this.localCidade = param;

		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for Alinea
		 */

		protected Alinea localAlinea;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAlineaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Alinea
		 */
		public Alinea getAlinea() {
			return localAlinea;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Alinea
		 */
		public void setAlinea(Alinea param) {

			if (param != null) {
				// update the setting tracker
				localAlineaTracker = true;
			} else {
				localAlineaTracker = false;

			}

			this.localAlinea = param;

		}

		/**
		 * field for Moeda
		 */

		protected Moeda localMoeda;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMoedaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Moeda
		 */
		public Moeda getMoeda() {
			return localMoeda;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Moeda
		 */
		public void setMoeda(Moeda param) {

			if (param != null) {
				// update the setting tracker
				localMoedaTracker = true;
			} else {
				localMoedaTracker = false;

			}

			this.localMoeda = param;

		}

		/**
		 * field for DataOcorrencia This was an Attribute!
		 */

		protected java.util.Calendar localDataOcorrencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataOcorrencia() {
			return localDataOcorrencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataOcorrencia
		 */
		public void setDataOcorrencia(java.util.Calendar param) {

			this.localDataOcorrencia = param;

		}

		/**
		 * field for QuantidadeBanco This was an Attribute!
		 */

		protected int localQuantidadeBanco;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeBanco() {
			return localQuantidadeBanco;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeBanco
		 */
		public void setQuantidadeBanco(int param) {

			this.localQuantidadeBanco = param;

		}

		/**
		 * field for TitularidadeContaCorrente This was an Attribute!
		 */

		protected java.lang.String localTitularidadeContaCorrente;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTitularidadeContaCorrente() {
			return localTitularidadeContaCorrente;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TitularidadeContaCorrente
		 */
		public void setTitularidadeContaCorrente(java.lang.String param) {

			this.localTitularidadeContaCorrente = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoChequeSemFundoAchei.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Cheque-Sem-Fundo-Achei",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Cheque-Sem-Fundo-Achei", xmlWriter);
				}

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localQuantidadeBanco != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-banco",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeBanco),
						xmlWriter);

			}

			if (localTitularidadeContaCorrente != null) {

				writeAttribute(
						"",
						"titularidade-conta-corrente",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTitularidadeContaCorrente),
						xmlWriter);

			}
			if (localChequeTracker) {
				if (localCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque cannot be null!!");
				}
				localCheque.serialize(new javax.xml.namespace.QName("",
						"cheque"), factory, xmlWriter);
			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			if (localAlineaTracker) {
				if (localAlinea == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"alinea cannot be null!!");
				}
				localAlinea.serialize(new javax.xml.namespace.QName("",
						"alinea"), factory, xmlWriter);
			}
			if (localMoedaTracker) {
				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				localMoeda.serialize(
						new javax.xml.namespace.QName("", "moeda"), factory,
						xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localChequeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cheque"));

				if (localCheque == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque cannot be null!!");
				}
				elementList.add(localCheque);
			}
			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			if (localAlineaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "alinea"));

				if (localAlinea == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"alinea cannot be null!!");
				}
				elementList.add(localAlinea);
			}
			if (localMoedaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "moeda"));

				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				elementList.add(localMoeda);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList
					.add(new javax.xml.namespace.QName("", "quantidade-banco"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeBanco));

			attribList.add(new javax.xml.namespace.QName("",
					"titularidade-conta-corrente"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTitularidadeContaCorrente));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoChequeSemFundoAchei parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoChequeSemFundoAchei object = new InsumoChequeSemFundoAchei();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Cheque-Sem-Fundo-Achei".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoChequeSemFundoAchei) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "quantidade-banco"
					java.lang.String tempAttribQuantidadeBanco =

					reader.getAttributeValue(null, "quantidade-banco");

					if (tempAttribQuantidadeBanco != null) {
						java.lang.String content = tempAttribQuantidadeBanco;

						object.setQuantidadeBanco(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeBanco));

					} else {

						object.setQuantidadeBanco(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-banco");

					// handle attribute "titularidade-conta-corrente"
					java.lang.String tempAttribTitularidadeContaCorrente =

					reader.getAttributeValue(null,
							"titularidade-conta-corrente");

					if (tempAttribTitularidadeContaCorrente != null) {
						java.lang.String content = tempAttribTitularidadeContaCorrente;

						object.setTitularidadeContaCorrente(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTitularidadeContaCorrente));

					} else {

					}
					handledAttributes.add("titularidade-conta-corrente");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque")
									.equals(reader.getName())) {

						object.setCheque(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "alinea")
									.equals(reader.getName())) {

						object.setAlinea(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "moeda")
									.equals(reader.getName())) {

						object.setMoeda(Moeda.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContraOrdemAgenciaDiferente extends
			InsumoContraOrdemDocumentoDiferente implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contra-Ordem-Agencia-Diferente Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContraOrdemAgenciaDiferente.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix
								+ ":Insumo-Contra-Ordem-Agencia-Diferente",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Contra-Ordem-Agencia-Diferente", xmlWriter);
			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localInformante != null) {

				writeAttribute("", "informante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInformante), xmlWriter);

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}
			if (localMotivoTracker) {
				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				localMotivo.serialize(new javax.xml.namespace.QName("",
						"motivo"), factory, xmlWriter);
			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Contra-Ordem-Agencia-Diferente"));
			if (localMotivoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "motivo"));

				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				elementList.add(localMotivo);
			}
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("", "informante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInformante));

			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContraOrdemAgenciaDiferente parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContraOrdemAgenciaDiferente object = new InsumoContraOrdemAgenciaDiferente();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contra-Ordem-Agencia-Diferente"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContraOrdemAgenciaDiferente) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "informante"
					java.lang.String tempAttribInformante =

					reader.getAttributeValue(null, "informante");

					if (tempAttribInformante != null) {
						java.lang.String content = tempAttribInformante;

						object.setInformante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInformante));

					} else {

					}
					handledAttributes.add("informante");

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "motivo")
									.equals(reader.getName())) {

						object.setMotivo(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(ChequeContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(ChequeFinal.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoContraOrdemDocumentoDiferente extends
			InsumoContraOrdem implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Contra-Ordem-Documento-Diferente Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Documento This was an Attribute!
		 */

		protected java.lang.String localDocumento;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDocumento() {
			return localDocumento;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Documento
		 */
		public void setDocumento(java.lang.String param) {

			this.localDocumento = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoContraOrdemDocumentoDiferente.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix
								+ ":Insumo-Contra-Ordem-Documento-Diferente",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Contra-Ordem-Documento-Diferente", xmlWriter);
			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localOrigem != null) {

				writeAttribute("", "origem",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localOrigem), xmlWriter);

			}

			if (localInformante != null) {

				writeAttribute("", "informante",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localInformante), xmlWriter);

			}

			if (localDocumento != null) {

				writeAttribute("", "documento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDocumento), xmlWriter);

			}
			if (localMotivoTracker) {
				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				localMotivo.serialize(new javax.xml.namespace.QName("",
						"motivo"), factory, xmlWriter);
			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Contra-Ordem-Documento-Diferente"));
			if (localMotivoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "motivo"));

				if (localMotivo == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"motivo cannot be null!!");
				}
				elementList.add(localMotivo);
			}
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "origem"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localOrigem));

			attribList.add(new javax.xml.namespace.QName("", "informante"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localInformante));

			attribList.add(new javax.xml.namespace.QName("", "documento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDocumento));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoContraOrdemDocumentoDiferente parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoContraOrdemDocumentoDiferente object = new InsumoContraOrdemDocumentoDiferente();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Contra-Ordem-Documento-Diferente"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoContraOrdemDocumentoDiferente) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "origem"
					java.lang.String tempAttribOrigem =

					reader.getAttributeValue(null, "origem");

					if (tempAttribOrigem != null) {
						java.lang.String content = tempAttribOrigem;

						object.setOrigem(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribOrigem));

					} else {

					}
					handledAttributes.add("origem");

					// handle attribute "informante"
					java.lang.String tempAttribInformante =

					reader.getAttributeValue(null, "informante");

					if (tempAttribInformante != null) {
						java.lang.String content = tempAttribInformante;

						object.setInformante(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribInformante));

					} else {

					}
					handledAttributes.add("informante");

					// handle attribute "documento"
					java.lang.String tempAttribDocumento =

					reader.getAttributeValue(null, "documento");

					if (tempAttribDocumento != null) {
						java.lang.String content = tempAttribDocumento;

						object.setDocumento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDocumento));

					} else {

					}
					handledAttributes.add("documento");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "motivo")
									.equals(reader.getName())) {

						object.setMotivo(Alinea.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(ChequeContraOrdem.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(ChequeFinal.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoFilial implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Filial Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for CodigoEmbratel This was an Attribute!
		 */

		protected java.lang.String localCodigoEmbratel;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getCodigoEmbratel() {
			return localCodigoEmbratel;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CodigoEmbratel
		 */
		public void setCodigoEmbratel(java.lang.String param) {

			this.localCodigoEmbratel = param;

		}

		/**
		 * field for NomeFilial This was an Attribute!
		 */

		protected java.lang.String localNomeFilial;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeFilial() {
			return localNomeFilial;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeFilial
		 */
		public void setNomeFilial(java.lang.String param) {

			this.localNomeFilial = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoFilial.this
							.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Filial",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Filial", xmlWriter);
				}

			}

			if (localCodigoEmbratel != null) {

				writeAttribute("", "codigo-embratel",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigoEmbratel),
						xmlWriter);

			}

			if (localNomeFilial != null) {

				writeAttribute("", "nome-filial",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeFilial), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList
					.add(new javax.xml.namespace.QName("", "codigo-embratel"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigoEmbratel));

			attribList.add(new javax.xml.namespace.QName("", "nome-filial"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeFilial));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoFilial parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoFilial object = new InsumoFilial();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Filial".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoFilial) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "codigo-embratel"
					java.lang.String tempAttribCodigoEmbratel =

					reader.getAttributeValue(null, "codigo-embratel");

					if (tempAttribCodigoEmbratel != null) {
						java.lang.String content = tempAttribCodigoEmbratel;

						object.setCodigoEmbratel(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribCodigoEmbratel));

					} else {

					}
					handledAttributes.add("codigo-embratel");

					// handle attribute "nome-filial"
					java.lang.String tempAttribNomeFilial =

					reader.getAttributeValue(null, "nome-filial");

					if (tempAttribNomeFilial != null) {
						java.lang.String content = tempAttribNomeFilial;

						object.setNomeFilial(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeFilial));

					} else {

					}
					handledAttributes.add("nome-filial");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class EnderecoAssinanteTelefone extends Endereco implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Endereco-Assinante-Telefone Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for TipoLogradouro This was an Attribute!
		 */

		protected java.lang.String localTipoLogradouro;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getTipoLogradouro() {
			return localTipoLogradouro;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoLogradouro
		 */
		public void setTipoLogradouro(java.lang.String param) {

			this.localTipoLogradouro = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					EnderecoAssinanteTelefone.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix + ":Endereco-Assinante-Telefone",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Endereco-Assinante-Telefone", xmlWriter);
			}

			if (localLogradouro != null) {

				writeAttribute("", "logradouro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localLogradouro), xmlWriter);

			}

			if (localNumero != null) {

				writeAttribute("", "numero",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumero), xmlWriter);

			}

			if (localComplemento != null) {

				writeAttribute("", "complemento",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localComplemento), xmlWriter);

			}

			if (localBairro != null) {

				writeAttribute("", "bairro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localBairro), xmlWriter);

			}

			if (localCep != null) {
				writeAttribute("", "cep", localCep.toString(), xmlWriter);
			}

			if (localTipoLogradouro != null) {

				writeAttribute("", "tipo-logradouro",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localTipoLogradouro),
						xmlWriter);

			}
			if (localCidadeTracker) {
				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				localCidade.serialize(new javax.xml.namespace.QName("",
						"cidade"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Endereco-Assinante-Telefone"));
			if (localCidadeTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cidade"));

				if (localCidade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cidade cannot be null!!");
				}
				elementList.add(localCidade);
			}
			attribList.add(new javax.xml.namespace.QName("", "logradouro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localLogradouro));

			attribList.add(new javax.xml.namespace.QName("", "numero"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumero));

			attribList.add(new javax.xml.namespace.QName("", "complemento"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localComplemento));

			attribList.add(new javax.xml.namespace.QName("", "bairro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localBairro));

			attribList.add(new javax.xml.namespace.QName("", "cep"));

			attribList.add(localCep.toString());

			attribList
					.add(new javax.xml.namespace.QName("", "tipo-logradouro"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localTipoLogradouro));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static EnderecoAssinanteTelefone parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				EnderecoAssinanteTelefone object = new EnderecoAssinanteTelefone();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Endereco-Assinante-Telefone".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (EnderecoAssinanteTelefone) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "logradouro"
					java.lang.String tempAttribLogradouro =

					reader.getAttributeValue(null, "logradouro");

					if (tempAttribLogradouro != null) {
						java.lang.String content = tempAttribLogradouro;

						object.setLogradouro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribLogradouro));

					} else {

					}
					handledAttributes.add("logradouro");

					// handle attribute "numero"
					java.lang.String tempAttribNumero =

					reader.getAttributeValue(null, "numero");

					if (tempAttribNumero != null) {
						java.lang.String content = tempAttribNumero;

						object.setNumero(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumero));

					} else {

					}
					handledAttributes.add("numero");

					// handle attribute "complemento"
					java.lang.String tempAttribComplemento =

					reader.getAttributeValue(null, "complemento");

					if (tempAttribComplemento != null) {
						java.lang.String content = tempAttribComplemento;

						object.setComplemento(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribComplemento));

					} else {

					}
					handledAttributes.add("complemento");

					// handle attribute "bairro"
					java.lang.String tempAttribBairro =

					reader.getAttributeValue(null, "bairro");

					if (tempAttribBairro != null) {
						java.lang.String content = tempAttribBairro;

						object.setBairro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribBairro));

					} else {

					}
					handledAttributes.add("bairro");

					// handle attribute "cep"
					java.lang.String tempAttribCep =

					reader.getAttributeValue(null, "cep");

					if (tempAttribCep != null) {
						java.lang.String content = tempAttribCep;

						object.setCep(Cep.Factory.fromString(reader,
								tempAttribCep));

					} else {

					}
					handledAttributes.add("cep");

					// handle attribute "tipo-logradouro"
					java.lang.String tempAttribTipoLogradouro =

					reader.getAttributeValue(null, "tipo-logradouro");

					if (tempAttribTipoLogradouro != null) {
						java.lang.String content = tempAttribTipoLogradouro;

						object.setTipoLogradouro(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribTipoLogradouro));

					} else {

					}
					handledAttributes.add("tipo-logradouro");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cidade")
									.equals(reader.getName())) {

						object.setCidade(Cidade.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoProtesto implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Protesto Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Cartorio
		 */

		protected Cartorio localCartorio;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localCartorioTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Cartorio
		 */
		public Cartorio getCartorio() {
			return localCartorio;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Cartorio
		 */
		public void setCartorio(Cartorio param) {

			if (param != null) {
				// update the setting tracker
				localCartorioTracker = true;
			} else {
				localCartorioTracker = false;

			}

			this.localCartorio = param;

		}

		/**
		 * field for NaturezaAnotacao
		 */

		protected NaturezaAnotacao localNaturezaAnotacao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localNaturezaAnotacaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return NaturezaAnotacao
		 */
		public NaturezaAnotacao getNaturezaAnotacao() {
			return localNaturezaAnotacao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NaturezaAnotacao
		 */
		public void setNaturezaAnotacao(NaturezaAnotacao param) {

			if (param != null) {
				// update the setting tracker
				localNaturezaAnotacaoTracker = true;
			} else {
				localNaturezaAnotacaoTracker = false;

			}

			this.localNaturezaAnotacao = param;

		}

		/**
		 * field for Subjudice
		 */

		protected Subjudice localSubjudice;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localSubjudiceTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Subjudice
		 */
		public Subjudice getSubjudice() {
			return localSubjudice;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Subjudice
		 */
		public void setSubjudice(Subjudice param) {

			if (param != null) {
				// update the setting tracker
				localSubjudiceTracker = true;
			} else {
				localSubjudiceTracker = false;

			}

			this.localSubjudice = param;

		}

		/**
		 * field for Moeda
		 */

		protected Moeda localMoeda;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localMoedaTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Moeda
		 */
		public Moeda getMoeda() {
			return localMoeda;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Moeda
		 */
		public void setMoeda(Moeda param) {

			if (param != null) {
				// update the setting tracker
				localMoedaTracker = true;
			} else {
				localMoedaTracker = false;

			}

			this.localMoeda = param;

		}

		/**
		 * field for CartaAnuencia This was an Attribute!
		 */

		protected CartaAnuencia localCartaAnuencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return CartaAnuencia
		 */
		public CartaAnuencia getCartaAnuencia() {
			return localCartaAnuencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            CartaAnuencia
		 */
		public void setCartaAnuencia(CartaAnuencia param) {

			this.localCartaAnuencia = param;

		}

		/**
		 * field for DataCartaAnuencia This was an Attribute!
		 */

		protected java.util.Calendar localDataCartaAnuencia;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataCartaAnuencia() {
			return localDataCartaAnuencia;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataCartaAnuencia
		 */
		public void setDataCartaAnuencia(java.util.Calendar param) {

			this.localDataCartaAnuencia = param;

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for DataProtesto This was an Attribute!
		 */

		protected java.util.Calendar localDataProtesto;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataProtesto() {
			return localDataProtesto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataProtesto
		 */
		public void setDataProtesto(java.util.Calendar param) {

			this.localDataProtesto = param;

		}

		/**
		 * field for RequerenteCredor This was an Attribute!
		 */

		protected java.lang.String localRequerenteCredor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getRequerenteCredor() {
			return localRequerenteCredor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RequerenteCredor
		 */
		public void setRequerenteCredor(java.lang.String param) {

			this.localRequerenteCredor = param;

		}

		/**
		 * field for NumeroProtesto This was an Attribute!
		 */

		protected java.lang.String localNumeroProtesto;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroProtesto() {
			return localNumeroProtesto;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroProtesto
		 */
		public void setNumeroProtesto(java.lang.String param) {

			this.localNumeroProtesto = param;

		}

		/**
		 * field for Valor This was an Attribute!
		 */

		protected java.math.BigDecimal localValor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValor() {
			return localValor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Valor
		 */
		public void setValor(java.math.BigDecimal param) {

			this.localValor = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoProtesto.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Protesto",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Protesto", xmlWriter);
				}

			}

			if (localCartaAnuencia != null) {
				writeAttribute("", "carta-anuencia",
						localCartaAnuencia.toString(), xmlWriter);
			}

			if (localDataCartaAnuencia != null) {

				writeAttribute("", "data-carta-anuencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataCartaAnuencia),
						xmlWriter);

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDataProtesto != null) {

				writeAttribute("", "data-protesto",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataProtesto), xmlWriter);

			}

			if (localRequerenteCredor != null) {

				writeAttribute("", "requerente-credor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localRequerenteCredor),
						xmlWriter);

			}

			if (localNumeroProtesto != null) {

				writeAttribute("", "numero-protesto",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroProtesto),
						xmlWriter);

			}

			if (localValor != null) {

				writeAttribute("", "valor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValor), xmlWriter);

			}
			if (localCartorioTracker) {
				if (localCartorio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cartorio cannot be null!!");
				}
				localCartorio.serialize(new javax.xml.namespace.QName("",
						"cartorio"), factory, xmlWriter);
			}
			if (localNaturezaAnotacaoTracker) {
				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				localNaturezaAnotacao.serialize(new javax.xml.namespace.QName(
						"", "natureza-anotacao"), factory, xmlWriter);
			}
			if (localSubjudiceTracker) {
				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				localSubjudice.serialize(new javax.xml.namespace.QName("",
						"subjudice"), factory, xmlWriter);
			}
			if (localMoedaTracker) {
				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				localMoeda.serialize(
						new javax.xml.namespace.QName("", "moeda"), factory,
						xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localCartorioTracker) {
				elementList.add(new javax.xml.namespace.QName("", "cartorio"));

				if (localCartorio == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cartorio cannot be null!!");
				}
				elementList.add(localCartorio);
			}
			if (localNaturezaAnotacaoTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"natureza-anotacao"));

				if (localNaturezaAnotacao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"natureza-anotacao cannot be null!!");
				}
				elementList.add(localNaturezaAnotacao);
			}
			if (localSubjudiceTracker) {
				elementList.add(new javax.xml.namespace.QName("", "subjudice"));

				if (localSubjudice == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"subjudice cannot be null!!");
				}
				elementList.add(localSubjudice);
			}
			if (localMoedaTracker) {
				elementList.add(new javax.xml.namespace.QName("", "moeda"));

				if (localMoeda == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"moeda cannot be null!!");
				}
				elementList.add(localMoeda);
			}
			attribList.add(new javax.xml.namespace.QName("", "carta-anuencia"));

			attribList.add(localCartaAnuencia.toString());

			attribList.add(new javax.xml.namespace.QName("",
					"data-carta-anuencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataCartaAnuencia));

			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList.add(new javax.xml.namespace.QName("", "data-protesto"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataProtesto));

			attribList.add(new javax.xml.namespace.QName("",
					"requerente-credor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localRequerenteCredor));

			attribList
					.add(new javax.xml.namespace.QName("", "numero-protesto"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroProtesto));

			attribList.add(new javax.xml.namespace.QName("", "valor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValor));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoProtesto parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoProtesto object = new InsumoProtesto();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Protesto".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoProtesto) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "carta-anuencia"
					java.lang.String tempAttribCartaAnuencia =

					reader.getAttributeValue(null, "carta-anuencia");

					if (tempAttribCartaAnuencia != null) {
						java.lang.String content = tempAttribCartaAnuencia;

						object.setCartaAnuencia(CartaAnuencia.Factory
								.fromString(reader, tempAttribCartaAnuencia));

					} else {

					}
					handledAttributes.add("carta-anuencia");

					// handle attribute "data-carta-anuencia"
					java.lang.String tempAttribDataCartaAnuencia =

					reader.getAttributeValue(null, "data-carta-anuencia");

					if (tempAttribDataCartaAnuencia != null) {
						java.lang.String content = tempAttribDataCartaAnuencia;

						object.setDataCartaAnuencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataCartaAnuencia));

					} else {

					}
					handledAttributes.add("data-carta-anuencia");

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "data-protesto"
					java.lang.String tempAttribDataProtesto =

					reader.getAttributeValue(null, "data-protesto");

					if (tempAttribDataProtesto != null) {
						java.lang.String content = tempAttribDataProtesto;

						object.setDataProtesto(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataProtesto));

					} else {

					}
					handledAttributes.add("data-protesto");

					// handle attribute "requerente-credor"
					java.lang.String tempAttribRequerenteCredor =

					reader.getAttributeValue(null, "requerente-credor");

					if (tempAttribRequerenteCredor != null) {
						java.lang.String content = tempAttribRequerenteCredor;

						object.setRequerenteCredor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribRequerenteCredor));

					} else {

					}
					handledAttributes.add("requerente-credor");

					// handle attribute "numero-protesto"
					java.lang.String tempAttribNumeroProtesto =

					reader.getAttributeValue(null, "numero-protesto");

					if (tempAttribNumeroProtesto != null) {
						java.lang.String content = tempAttribNumeroProtesto;

						object.setNumeroProtesto(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroProtesto));

					} else {

					}
					handledAttributes.add("numero-protesto");

					// handle attribute "valor"
					java.lang.String tempAttribValor =

					reader.getAttributeValue(null, "valor");

					if (tempAttribValor != null) {
						java.lang.String content = tempAttribValor;

						object.setValor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValor));

					} else {

					}
					handledAttributes.add("valor");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cartorio")
									.equals(reader.getName())) {

						object.setCartorio(Cartorio.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"natureza-anotacao").equals(reader
									.getName())) {

						object.setNaturezaAnotacao(NaturezaAnotacao.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "subjudice")
									.equals(reader.getName())) {

						object.setSubjudice(Subjudice.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "moeda")
									.equals(reader.getName())) {

						object.setMoeda(Moeda.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoTelefoneVinculadoAssinanteConsultado extends
			InsumoTelefoneVinculadoConsumidor implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Telefone-Vinculado-Assinante-Consultado Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoTelefoneVinculadoAssinanteConsultado.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute(
						"xsi",
						"http://www.w3.org/2001/XMLSchema-instance",
						"type",
						namespacePrefix
								+ ":Insumo-Telefone-Vinculado-Assinante-Consultado",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Telefone-Vinculado-Assinante-Consultado",
						xmlWriter);
			}

			if (localAssinanteTracker) {
				if (localAssinante == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"assinante cannot be null!!");
				}
				localAssinante.serialize(new javax.xml.namespace.QName("",
						"assinante"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Telefone-Vinculado-Assinante-Consultado"));
			if (localAssinanteTracker) {
				elementList.add(new javax.xml.namespace.QName("", "assinante"));

				if (localAssinante == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"assinante cannot be null!!");
				}
				elementList.add(localAssinante);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoTelefoneVinculadoAssinanteConsultado parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoTelefoneVinculadoAssinanteConsultado object = new InsumoTelefoneVinculadoAssinanteConsultado();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Telefone-Vinculado-Assinante-Consultado"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoTelefoneVinculadoAssinanteConsultado) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "assinante")
									.equals(reader.getName())) {

						object.setAssinante(AssinanteTelefone.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoAtividadeEmpresa implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Atividade-Empresa Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for RamoAtividade
		 */

		protected RamoAtividade localRamoAtividade;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localRamoAtividadeTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return RamoAtividade
		 */
		public RamoAtividade getRamoAtividade() {
			return localRamoAtividade;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            RamoAtividade
		 */
		public void setRamoAtividade(RamoAtividade param) {

			if (param != null) {
				// update the setting tracker
				localRamoAtividadeTracker = true;
			} else {
				localRamoAtividadeTracker = false;

			}

			this.localRamoAtividade = param;

		}

		/**
		 * field for AtividadesEconomicasSecundarias This was an Array!
		 */

		protected RamoAtividade[] localAtividadesEconomicasSecundarias;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localAtividadesEconomicasSecundariasTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return RamoAtividade[]
		 */
		public RamoAtividade[] getAtividadesEconomicasSecundarias() {
			return localAtividadesEconomicasSecundarias;
		}

		/**
		 * validate the array for AtividadesEconomicasSecundarias
		 */
		protected void validateAtividadesEconomicasSecundarias(
				RamoAtividade[] param) {

		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            AtividadesEconomicasSecundarias
		 */
		public void setAtividadesEconomicasSecundarias(RamoAtividade[] param) {

			validateAtividadesEconomicasSecundarias(param);

			if (param != null) {
				// update the setting tracker
				localAtividadesEconomicasSecundariasTracker = true;
			} else {
				localAtividadesEconomicasSecundariasTracker = false;

			}

			this.localAtividadesEconomicasSecundarias = param;
		}

		/**
		 * Auto generated add method for the array for convenience
		 * 
		 * @param param
		 *            RamoAtividade
		 */
		public void addAtividadesEconomicasSecundarias(RamoAtividade param) {
			if (localAtividadesEconomicasSecundarias == null) {
				localAtividadesEconomicasSecundarias = new RamoAtividade[] {};
			}

			// update the setting tracker
			localAtividadesEconomicasSecundariasTracker = true;

			java.util.List list = org.apache.axis2.databinding.utils.ConverterUtil
					.toList(localAtividadesEconomicasSecundarias);
			list.add(param);
			this.localAtividadesEconomicasSecundarias = (RamoAtividade[]) list
					.toArray(new RamoAtividade[list.size()]);

		}

		/**
		 * field for NumeroCnae This was an Attribute!
		 */

		protected java.lang.String localNumeroCnae;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNumeroCnae() {
			return localNumeroCnae;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NumeroCnae
		 */
		public void setNumeroCnae(java.lang.String param) {

			this.localNumeroCnae = param;

		}

		/**
		 * field for PercentualCompra This was an Attribute!
		 */

		protected double localPercentualCompra;

		/**
		 * Auto generated getter method
		 * 
		 * @return double
		 */
		public double getPercentualCompra() {
			return localPercentualCompra;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PercentualCompra
		 */
		public void setPercentualCompra(double param) {

			this.localPercentualCompra = param;

		}

		/**
		 * field for PercentualVendas This was an Attribute!
		 */

		protected double localPercentualVendas;

		/**
		 * Auto generated getter method
		 * 
		 * @return double
		 */
		public double getPercentualVendas() {
			return localPercentualVendas;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            PercentualVendas
		 */
		public void setPercentualVendas(double param) {

			this.localPercentualVendas = param;

		}

		/**
		 * field for QuantidadeEmpregados This was an Attribute!
		 */

		protected int localQuantidadeEmpregados;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeEmpregados() {
			return localQuantidadeEmpregados;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeEmpregados
		 */
		public void setQuantidadeEmpregados(int param) {

			this.localQuantidadeEmpregados = param;

		}

		/**
		 * field for QuantidadeFiliais This was an Attribute!
		 */

		protected int localQuantidadeFiliais;

		/**
		 * Auto generated getter method
		 * 
		 * @return int
		 */
		public int getQuantidadeFiliais() {
			return localQuantidadeFiliais;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            QuantidadeFiliais
		 */
		public void setQuantidadeFiliais(int param) {

			this.localQuantidadeFiliais = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoAtividadeEmpresa.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Atividade-Empresa", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Atividade-Empresa", xmlWriter);
				}

			}

			if (localNumeroCnae != null) {

				writeAttribute("", "numero-cnae",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNumeroCnae), xmlWriter);

			}

			if (!java.lang.Double.isNaN(localPercentualCompra)) {

				writeAttribute("", "percentual-compra",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPercentualCompra),
						xmlWriter);

			}

			if (!java.lang.Double.isNaN(localPercentualVendas)) {

				writeAttribute("", "percentual-vendas",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localPercentualVendas),
						xmlWriter);

			}

			if (localQuantidadeEmpregados != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-empregados",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeEmpregados),
						xmlWriter);

			}

			if (localQuantidadeFiliais != java.lang.Integer.MIN_VALUE) {

				writeAttribute("", "quantidade-filiais",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localQuantidadeFiliais),
						xmlWriter);

			}
			if (localRamoAtividadeTracker) {
				if (localRamoAtividade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ramo-atividade cannot be null!!");
				}
				localRamoAtividade.serialize(new javax.xml.namespace.QName("",
						"ramo-atividade"), factory, xmlWriter);
			}
			if (localAtividadesEconomicasSecundariasTracker) {
				if (localAtividadesEconomicasSecundarias != null) {
					for (int i = 0; i < localAtividadesEconomicasSecundarias.length; i++) {
						if (localAtividadesEconomicasSecundarias[i] != null) {
							localAtividadesEconomicasSecundarias[i]
									.serialize(
											new javax.xml.namespace.QName("",
													"atividades-economicas-secundarias"),
											factory, xmlWriter);
						} else {

							// we don't have to do any thing since minOccures is
							// zero

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"atividades-economicas-secundarias cannot be null!!");

				}
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localRamoAtividadeTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"ramo-atividade"));

				if (localRamoAtividade == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"ramo-atividade cannot be null!!");
				}
				elementList.add(localRamoAtividade);
			}
			if (localAtividadesEconomicasSecundariasTracker) {
				if (localAtividadesEconomicasSecundarias != null) {
					for (int i = 0; i < localAtividadesEconomicasSecundarias.length; i++) {

						if (localAtividadesEconomicasSecundarias[i] != null) {
							elementList.add(new javax.xml.namespace.QName("",
									"atividades-economicas-secundarias"));
							elementList
									.add(localAtividadesEconomicasSecundarias[i]);
						} else {

							// nothing to do

						}

					}
				} else {

					throw new org.apache.axis2.databinding.ADBException(
							"atividades-economicas-secundarias cannot be null!!");

				}

			}
			attribList.add(new javax.xml.namespace.QName("", "numero-cnae"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNumeroCnae));

			attribList.add(new javax.xml.namespace.QName("",
					"percentual-compra"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPercentualCompra));

			attribList.add(new javax.xml.namespace.QName("",
					"percentual-vendas"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localPercentualVendas));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-empregados"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeEmpregados));

			attribList.add(new javax.xml.namespace.QName("",
					"quantidade-filiais"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localQuantidadeFiliais));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoAtividadeEmpresa parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoAtividadeEmpresa object = new InsumoAtividadeEmpresa();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Atividade-Empresa".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoAtividadeEmpresa) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "numero-cnae"
					java.lang.String tempAttribNumeroCnae =

					reader.getAttributeValue(null, "numero-cnae");

					if (tempAttribNumeroCnae != null) {
						java.lang.String content = tempAttribNumeroCnae;

						object.setNumeroCnae(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNumeroCnae));

					} else {

					}
					handledAttributes.add("numero-cnae");

					// handle attribute "percentual-compra"
					java.lang.String tempAttribPercentualCompra =

					reader.getAttributeValue(null, "percentual-compra");

					if (tempAttribPercentualCompra != null) {
						java.lang.String content = tempAttribPercentualCompra;

						object.setPercentualCompra(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDouble(tempAttribPercentualCompra));

					} else {

						object.setPercentualCompra(java.lang.Double.NaN);

					}
					handledAttributes.add("percentual-compra");

					// handle attribute "percentual-vendas"
					java.lang.String tempAttribPercentualVendas =

					reader.getAttributeValue(null, "percentual-vendas");

					if (tempAttribPercentualVendas != null) {
						java.lang.String content = tempAttribPercentualVendas;

						object.setPercentualVendas(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDouble(tempAttribPercentualVendas));

					} else {

						object.setPercentualVendas(java.lang.Double.NaN);

					}
					handledAttributes.add("percentual-vendas");

					// handle attribute "quantidade-empregados"
					java.lang.String tempAttribQuantidadeEmpregados =

					reader.getAttributeValue(null, "quantidade-empregados");

					if (tempAttribQuantidadeEmpregados != null) {
						java.lang.String content = tempAttribQuantidadeEmpregados;

						object.setQuantidadeEmpregados(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeEmpregados));

					} else {

						object.setQuantidadeEmpregados(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-empregados");

					// handle attribute "quantidade-filiais"
					java.lang.String tempAttribQuantidadeFiliais =

					reader.getAttributeValue(null, "quantidade-filiais");

					if (tempAttribQuantidadeFiliais != null) {
						java.lang.String content = tempAttribQuantidadeFiliais;

						object.setQuantidadeFiliais(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToInt(tempAttribQuantidadeFiliais));

					} else {

						object.setQuantidadeFiliais(java.lang.Integer.MIN_VALUE);

					}
					handledAttributes.add("quantidade-filiais");

					reader.next();

					java.util.ArrayList list2 = new java.util.ArrayList();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"ramo-atividade").equals(reader.getName())) {

						object.setRamoAtividade(RamoAtividade.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"atividades-economicas-secundarias")
									.equals(reader.getName())) {

						// Process the array and step past its final element's
						// end.
						list2.add(RamoAtividade.Factory.parse(reader));

						// loop until we find a start element that is not part
						// of this array
						boolean loopDone2 = false;
						while (!loopDone2) {
							// We should be at the end element, but make sure
							while (!reader.isEndElement())
								reader.next();
							// Step out of this element
							reader.next();
							// Step to next element event.
							while (!reader.isStartElement()
									&& !reader.isEndElement())
								reader.next();
							if (reader.isEndElement()) {
								// two continuous end elements means we are
								// exiting the xml structure
								loopDone2 = true;
							} else {
								if (new javax.xml.namespace.QName("",
										"atividades-economicas-secundarias")
										.equals(reader.getName())) {
									list2.add(RamoAtividade.Factory
											.parse(reader));

								} else {
									loopDone2 = true;
								}
							}
						}
						// call the converter utility to convert and set the
						// array

						object.setAtividadesEconomicasSecundarias((RamoAtividade[]) org.apache.axis2.databinding.utils.ConverterUtil
								.convertToArray(RamoAtividade.class, list2));

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoChequeOutrasOcorrenciasSRS extends
			InsumoContumaciaSRS implements org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Cheque-Outras-Ocorrencias-SRS Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoChequeOutrasOcorrenciasSRS.this.serialize(
							parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			java.lang.String namespacePrefix = registerPrefix(xmlWriter,
					"http://webservice.consulta.spcjava.spcbrasil.org/");
			if ((namespacePrefix != null)
					&& (namespacePrefix.trim().length() > 0)) {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						namespacePrefix
								+ ":Insumo-Cheque-Outras-Ocorrencias-SRS",
						xmlWriter);
			} else {
				writeAttribute("xsi",
						"http://www.w3.org/2001/XMLSchema-instance", "type",
						"Insumo-Cheque-Outras-Ocorrencias-SRS", xmlWriter);
			}

			if (localDataOcorrencia != null) {

				writeAttribute("", "data-ocorrencia",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataOcorrencia),
						xmlWriter);

			}

			if (localMotivo != null) {

				writeAttribute("", "motivo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localMotivo), xmlWriter);

			}
			if (localChequeInicialTracker) {
				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				localChequeInicial.serialize(new javax.xml.namespace.QName("",
						"cheque-inicial"), factory, xmlWriter);
			}
			if (localChequeFinalTracker) {
				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				localChequeFinal.serialize(new javax.xml.namespace.QName("",
						"cheque-final"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName(
					"http://www.w3.org/2001/XMLSchema-instance", "type"));
			attribList.add(new javax.xml.namespace.QName(
					"http://webservice.consulta.spcjava.spcbrasil.org/",
					"Insumo-Cheque-Outras-Ocorrencias-SRS"));
			if (localChequeInicialTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-inicial"));

				if (localChequeInicial == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-inicial cannot be null!!");
				}
				elementList.add(localChequeInicial);
			}
			if (localChequeFinalTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"cheque-final"));

				if (localChequeFinal == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"cheque-final cannot be null!!");
				}
				elementList.add(localChequeFinal);
			}
			attribList
					.add(new javax.xml.namespace.QName("", "data-ocorrencia"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataOcorrencia));

			attribList.add(new javax.xml.namespace.QName("", "motivo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localMotivo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoChequeOutrasOcorrenciasSRS parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoChequeOutrasOcorrenciasSRS object = new InsumoChequeOutrasOcorrenciasSRS();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Cheque-Outras-Ocorrencias-SRS"
									.equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoChequeOutrasOcorrenciasSRS) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-ocorrencia"
					java.lang.String tempAttribDataOcorrencia =

					reader.getAttributeValue(null, "data-ocorrencia");

					if (tempAttribDataOcorrencia != null) {
						java.lang.String content = tempAttribDataOcorrencia;

						object.setDataOcorrencia(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataOcorrencia));

					} else {

					}
					handledAttributes.add("data-ocorrencia");

					// handle attribute "motivo"
					java.lang.String tempAttribMotivo =

					reader.getAttributeValue(null, "motivo");

					if (tempAttribMotivo != null) {
						java.lang.String content = tempAttribMotivo;

						object.setMotivo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribMotivo));

					} else {

					}
					handledAttributes.add("motivo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"cheque-inicial").equals(reader.getName())) {

						object.setChequeInicial(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "cheque-final")
									.equals(reader.getName())) {

						object.setChequeFinal(Cheque.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class NaturezaJuridica implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Natureza-Juridica Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Descricao This was an Attribute!
		 */

		protected java.lang.String localDescricao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricao() {
			return localDescricao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Descricao
		 */
		public void setDescricao(java.lang.String param) {

			this.localDescricao = param;

		}

		/**
		 * field for Codigo This was an Attribute!
		 */

		protected long localCodigo;

		/**
		 * Auto generated getter method
		 * 
		 * @return long
		 */
		public long getCodigo() {
			return localCodigo;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Codigo
		 */
		public void setCodigo(long param) {

			this.localCodigo = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					NaturezaJuridica.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Natureza-Juridica",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Natureza-Juridica", xmlWriter);
				}

			}

			if (localDescricao != null) {

				writeAttribute("", "descricao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricao), xmlWriter);

			}

			if (localCodigo != java.lang.Long.MIN_VALUE) {

				writeAttribute("", "codigo",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localCodigo), xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("", "descricao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricao));

			attribList.add(new javax.xml.namespace.QName("", "codigo"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localCodigo));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static NaturezaJuridica parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				NaturezaJuridica object = new NaturezaJuridica();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Natureza-Juridica".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (NaturezaJuridica) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao"
					java.lang.String tempAttribDescricao =

					reader.getAttributeValue(null, "descricao");

					if (tempAttribDescricao != null) {
						java.lang.String content = tempAttribDescricao;

						object.setDescricao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricao));

					} else {

					}
					handledAttributes.add("descricao");

					// handle attribute "codigo"
					java.lang.String tempAttribCodigo =

					reader.getAttributeValue(null, "codigo");

					if (tempAttribCodigo != null) {
						java.lang.String content = tempAttribCodigo;

						object.setCodigo(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToLong(tempAttribCodigo));

					} else {

						object.setCodigo(java.lang.Long.MIN_VALUE);

					}
					handledAttributes.add("codigo");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class DadosAgenciaBancaria implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Dados-Agencia-Bancaria Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DadosBancarios
		 */

		protected DadosBancarios localDadosBancarios;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localDadosBancariosTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return DadosBancarios
		 */
		public DadosBancarios getDadosBancarios() {
			return localDadosBancarios;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DadosBancarios
		 */
		public void setDadosBancarios(DadosBancarios param) {

			if (param != null) {
				// update the setting tracker
				localDadosBancariosTracker = true;
			} else {
				localDadosBancariosTracker = false;

			}

			this.localDadosBancarios = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					DadosAgenciaBancaria.this.serialize(parentQName, factory,
							xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type",
							namespacePrefix + ":Dados-Agencia-Bancaria",
							xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Dados-Agencia-Bancaria", xmlWriter);
				}

			}
			if (localDadosBancariosTracker) {
				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				localDadosBancarios.serialize(new javax.xml.namespace.QName("",
						"dados-bancarios"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localDadosBancariosTracker) {
				elementList.add(new javax.xml.namespace.QName("",
						"dados-bancarios"));

				if (localDadosBancarios == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"dados-bancarios cannot be null!!");
				}
				elementList.add(localDadosBancarios);
			}

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static DadosAgenciaBancaria parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				DadosAgenciaBancaria object = new DadosAgenciaBancaria();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Dados-Agencia-Bancaria".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (DadosAgenciaBancaria) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("",
									"dados-bancarios").equals(reader.getName())) {

						object.setDadosBancarios(DadosBancarios.Factory
								.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoPrincipaisProdutos implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Principais-Produtos Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for DescricaoPrincipaisProdutos This was an Attribute!
		 */

		protected java.lang.String localDescricaoPrincipaisProdutos;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDescricaoPrincipaisProdutos() {
			return localDescricaoPrincipaisProdutos;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DescricaoPrincipaisProdutos
		 */
		public void setDescricaoPrincipaisProdutos(java.lang.String param) {

			this.localDescricaoPrincipaisProdutos = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoPrincipaisProdutos.this.serialize(parentQName,
							factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix
									+ ":Insumo-Principais-Produtos", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Principais-Produtos", xmlWriter);
				}

			}

			if (localDescricaoPrincipaisProdutos != null) {

				writeAttribute(
						"",
						"descricao-principais-produtos",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDescricaoPrincipaisProdutos),
						xmlWriter);

			}

			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			attribList.add(new javax.xml.namespace.QName("",
					"descricao-principais-produtos"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDescricaoPrincipaisProdutos));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoPrincipaisProdutos parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoPrincipaisProdutos object = new InsumoPrincipaisProdutos();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Principais-Produtos".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoPrincipaisProdutos) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "descricao-principais-produtos"
					java.lang.String tempAttribDescricaoPrincipaisProdutos =

					reader.getAttributeValue(null,
							"descricao-principais-produtos");

					if (tempAttribDescricaoPrincipaisProdutos != null) {
						java.lang.String content = tempAttribDescricaoPrincipaisProdutos;

						object.setDescricaoPrincipaisProdutos(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDescricaoPrincipaisProdutos));

					} else {

					}
					handledAttributes.add("descricao-principais-produtos");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	public static class InsumoAcao implements
			org.apache.axis2.databinding.ADBBean {
		/*
		 * This type was generated from the piece of schema that had name =
		 * Insumo-Acao Namespace URI =
		 * http://webservice.consulta.spcjava.spcbrasil.org/ Namespace Prefix =
		 * ns1
		 */

		private static java.lang.String generatePrefix(
				java.lang.String namespace) {
			if (namespace
					.equals("http://webservice.consulta.spcjava.spcbrasil.org/")) {
				return "ns1";
			}
			return org.apache.axis2.databinding.utils.BeanUtil
					.getUniquePrefix();
		}

		/**
		 * field for Vara
		 */

		protected Vara localVara;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localVaraTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return Vara
		 */
		public Vara getVara() {
			return localVara;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Vara
		 */
		public void setVara(Vara param) {

			if (param != null) {
				// update the setting tracker
				localVaraTracker = true;
			} else {
				localVaraTracker = false;

			}

			this.localVara = param;

		}

		/**
		 * field for TipoAcao
		 */

		protected TipoAcao localTipoAcao;

		/*
		 * This tracker boolean wil be used to detect whether the user called
		 * the set method for this attribute. It will be used to determine
		 * whether to include this field in the serialized XML
		 */
		protected boolean localTipoAcaoTracker = false;

		/**
		 * Auto generated getter method
		 * 
		 * @return TipoAcao
		 */
		public TipoAcao getTipoAcao() {
			return localTipoAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            TipoAcao
		 */
		public void setTipoAcao(TipoAcao param) {

			if (param != null) {
				// update the setting tracker
				localTipoAcaoTracker = true;
			} else {
				localTipoAcaoTracker = false;

			}

			this.localTipoAcao = param;

		}

		/**
		 * field for DataAcao This was an Attribute!
		 */

		protected java.util.Calendar localDataAcao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataAcao() {
			return localDataAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataAcao
		 */
		public void setDataAcao(java.util.Calendar param) {

			this.localDataAcao = param;

		}

		/**
		 * field for DataInclusao This was an Attribute!
		 */

		protected java.util.Calendar localDataInclusao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.util.Calendar
		 */
		public java.util.Calendar getDataInclusao() {
			return localDataInclusao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            DataInclusao
		 */
		public void setDataInclusao(java.util.Calendar param) {

			this.localDataInclusao = param;

		}

		/**
		 * field for Distrito This was an Attribute!
		 */

		protected java.lang.String localDistrito;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getDistrito() {
			return localDistrito;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            Distrito
		 */
		public void setDistrito(java.lang.String param) {

			this.localDistrito = param;

		}

		/**
		 * field for NomeAutor This was an Attribute!
		 */

		protected java.lang.String localNomeAutor;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.lang.String
		 */
		public java.lang.String getNomeAutor() {
			return localNomeAutor;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            NomeAutor
		 */
		public void setNomeAutor(java.lang.String param) {

			this.localNomeAutor = param;

		}

		/**
		 * field for ValorAcao This was an Attribute!
		 */

		protected java.math.BigDecimal localValorAcao;

		/**
		 * Auto generated getter method
		 * 
		 * @return java.math.BigDecimal
		 */
		public java.math.BigDecimal getValorAcao() {
			return localValorAcao;
		}

		/**
		 * Auto generated setter method
		 * 
		 * @param param
		 *            ValorAcao
		 */
		public void setValorAcao(java.math.BigDecimal param) {

			this.localValorAcao = param;

		}

		/**
		 * isReaderMTOMAware
		 * 
		 * @return true if the reader supports MTOM
		 */
		public static boolean isReaderMTOMAware(
				javax.xml.stream.XMLStreamReader reader) {
			boolean isReaderMTOMAware = false;

			try {
				isReaderMTOMAware = java.lang.Boolean.TRUE
						.equals(reader
								.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
			} catch (java.lang.IllegalArgumentException e) {
				isReaderMTOMAware = false;
			}
			return isReaderMTOMAware;
		}

		/**
		 * 
		 * @param parentQName
		 * @param factory
		 * @return org.apache.axiom.om.OMElement
		 */
		public org.apache.axiom.om.OMElement getOMElement(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory)
				throws org.apache.axis2.databinding.ADBException {

			org.apache.axiom.om.OMDataSource dataSource = new org.apache.axis2.databinding.ADBDataSource(
					this, parentQName) {

				public void serialize(
						org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
						throws javax.xml.stream.XMLStreamException {
					InsumoAcao.this.serialize(parentQName, factory, xmlWriter);
				}
			};
			return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
					parentQName, factory, dataSource);

		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {
			serialize(parentQName, factory, xmlWriter, false);
		}

		public void serialize(
				final javax.xml.namespace.QName parentQName,
				final org.apache.axiom.om.OMFactory factory,
				org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
				boolean serializeType)
				throws javax.xml.stream.XMLStreamException,
				org.apache.axis2.databinding.ADBException {

			java.lang.String prefix = null;
			java.lang.String namespace = null;

			prefix = parentQName.getPrefix();
			namespace = parentQName.getNamespaceURI();

			if ((namespace != null) && (namespace.trim().length() > 0)) {
				java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
				if (writerPrefix != null) {
					xmlWriter.writeStartElement(namespace,
							parentQName.getLocalPart());
				} else {
					if (prefix == null) {
						prefix = generatePrefix(namespace);
					}

					xmlWriter.writeStartElement(prefix,
							parentQName.getLocalPart(), namespace);
					xmlWriter.writeNamespace(prefix, namespace);
					xmlWriter.setPrefix(prefix, namespace);
				}
			} else {
				xmlWriter.writeStartElement(parentQName.getLocalPart());
			}

			if (serializeType) {

				java.lang.String namespacePrefix = registerPrefix(xmlWriter,
						"http://webservice.consulta.spcjava.spcbrasil.org/");
				if ((namespacePrefix != null)
						&& (namespacePrefix.trim().length() > 0)) {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", namespacePrefix + ":Insumo-Acao", xmlWriter);
				} else {
					writeAttribute("xsi",
							"http://www.w3.org/2001/XMLSchema-instance",
							"type", "Insumo-Acao", xmlWriter);
				}

			}

			if (localDataAcao != null) {

				writeAttribute("", "data-acao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataAcao), xmlWriter);

			}

			if (localDataInclusao != null) {

				writeAttribute("", "data-inclusao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDataInclusao), xmlWriter);

			}

			if (localDistrito != null) {

				writeAttribute("", "distrito",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localDistrito), xmlWriter);

			}

			if (localNomeAutor != null) {

				writeAttribute("", "nome-autor",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localNomeAutor), xmlWriter);

			}

			if (localValorAcao != null) {

				writeAttribute("", "valor-acao",
						org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(localValorAcao), xmlWriter);

			}
			if (localVaraTracker) {
				if (localVara == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"vara cannot be null!!");
				}
				localVara.serialize(new javax.xml.namespace.QName("", "vara"),
						factory, xmlWriter);
			}
			if (localTipoAcaoTracker) {
				if (localTipoAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"tipo-acao cannot be null!!");
				}
				localTipoAcao.serialize(new javax.xml.namespace.QName("",
						"tipo-acao"), factory, xmlWriter);
			}
			xmlWriter.writeEndElement();

		}

		/**
		 * Util method to write an attribute with the ns prefix
		 */
		private void writeAttribute(java.lang.String prefix,
				java.lang.String namespace, java.lang.String attName,
				java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (xmlWriter.getPrefix(namespace) == null) {
				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);

			}

			xmlWriter.writeAttribute(namespace, attName, attValue);

		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeAttribute(java.lang.String namespace,
				java.lang.String attName, java.lang.String attValue,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attValue);
			}
		}

		/**
		 * Util method to write an attribute without the ns prefix
		 */
		private void writeQNameAttribute(java.lang.String namespace,
				java.lang.String attName, javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			java.lang.String attributeNamespace = qname.getNamespaceURI();
			java.lang.String attributePrefix = xmlWriter
					.getPrefix(attributeNamespace);
			if (attributePrefix == null) {
				attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
			}
			java.lang.String attributeValue;
			if (attributePrefix.trim().length() > 0) {
				attributeValue = attributePrefix + ":" + qname.getLocalPart();
			} else {
				attributeValue = qname.getLocalPart();
			}

			if (namespace.equals("")) {
				xmlWriter.writeAttribute(attName, attributeValue);
			} else {
				registerPrefix(xmlWriter, namespace);
				xmlWriter.writeAttribute(namespace, attName, attributeValue);
			}
		}

		/**
		 * method to handle Qnames
		 */

		private void writeQName(javax.xml.namespace.QName qname,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String namespaceURI = qname.getNamespaceURI();
			if (namespaceURI != null) {
				java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
				if (prefix == null) {
					prefix = generatePrefix(namespaceURI);
					xmlWriter.writeNamespace(prefix, namespaceURI);
					xmlWriter.setPrefix(prefix, namespaceURI);
				}

				if (prefix.trim().length() > 0) {
					xmlWriter.writeCharacters(prefix
							+ ":"
							+ org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				} else {
					// i.e this is the default namespace
					xmlWriter
							.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
									.convertToString(qname));
				}

			} else {
				xmlWriter
						.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(qname));
			}
		}

		private void writeQNames(javax.xml.namespace.QName[] qnames,
				javax.xml.stream.XMLStreamWriter xmlWriter)
				throws javax.xml.stream.XMLStreamException {

			if (qnames != null) {
				// we have to store this data until last moment since it is not
				// possible to write any
				// namespace data after writing the charactor data
				java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
				java.lang.String namespaceURI = null;
				java.lang.String prefix = null;

				for (int i = 0; i < qnames.length; i++) {
					if (i > 0) {
						stringToWrite.append(" ");
					}
					namespaceURI = qnames[i].getNamespaceURI();
					if (namespaceURI != null) {
						prefix = xmlWriter.getPrefix(namespaceURI);
						if ((prefix == null) || (prefix.length() == 0)) {
							prefix = generatePrefix(namespaceURI);
							xmlWriter.writeNamespace(prefix, namespaceURI);
							xmlWriter.setPrefix(prefix, namespaceURI);
						}

						if (prefix.trim().length() > 0) {
							stringToWrite
									.append(prefix)
									.append(":")
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						} else {
							stringToWrite
									.append(org.apache.axis2.databinding.utils.ConverterUtil
											.convertToString(qnames[i]));
						}
					} else {
						stringToWrite
								.append(org.apache.axis2.databinding.utils.ConverterUtil
										.convertToString(qnames[i]));
					}
				}
				xmlWriter.writeCharacters(stringToWrite.toString());
			}

		}

		/**
		 * Register a namespace prefix
		 */
		private java.lang.String registerPrefix(
				javax.xml.stream.XMLStreamWriter xmlWriter,
				java.lang.String namespace)
				throws javax.xml.stream.XMLStreamException {
			java.lang.String prefix = xmlWriter.getPrefix(namespace);

			if (prefix == null) {
				prefix = generatePrefix(namespace);

				while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
					prefix = org.apache.axis2.databinding.utils.BeanUtil
							.getUniquePrefix();
				}

				xmlWriter.writeNamespace(prefix, namespace);
				xmlWriter.setPrefix(prefix, namespace);
			}

			return prefix;
		}

		/**
		 * databinding method to get an XML representation of this object
		 * 
		 */
		public javax.xml.stream.XMLStreamReader getPullParser(
				javax.xml.namespace.QName qName)
				throws org.apache.axis2.databinding.ADBException {

			java.util.ArrayList elementList = new java.util.ArrayList();
			java.util.ArrayList attribList = new java.util.ArrayList();

			if (localVaraTracker) {
				elementList.add(new javax.xml.namespace.QName("", "vara"));

				if (localVara == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"vara cannot be null!!");
				}
				elementList.add(localVara);
			}
			if (localTipoAcaoTracker) {
				elementList.add(new javax.xml.namespace.QName("", "tipo-acao"));

				if (localTipoAcao == null) {
					throw new org.apache.axis2.databinding.ADBException(
							"tipo-acao cannot be null!!");
				}
				elementList.add(localTipoAcao);
			}
			attribList.add(new javax.xml.namespace.QName("", "data-acao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataAcao));

			attribList.add(new javax.xml.namespace.QName("", "data-inclusao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDataInclusao));

			attribList.add(new javax.xml.namespace.QName("", "distrito"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localDistrito));

			attribList.add(new javax.xml.namespace.QName("", "nome-autor"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localNomeAutor));

			attribList.add(new javax.xml.namespace.QName("", "valor-acao"));

			attribList.add(org.apache.axis2.databinding.utils.ConverterUtil
					.convertToString(localValorAcao));

			return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(
					qName, elementList.toArray(), attribList.toArray());

		}

		/**
		 * Factory class that keeps the parse method
		 */
		public static class Factory {

			/**
			 * static method to create the object Precondition: If this object
			 * is an element, the current or next start element starts this
			 * object and any intervening reader events are ignorable If this
			 * object is not an element, it is a complex type and the reader is
			 * at the event just after the outer start element Postcondition: If
			 * this object is an element, the reader is positioned at its end
			 * element If this object is a complex type, the reader is
			 * positioned at the end element of its outer element
			 */
			public static InsumoAcao parse(
					javax.xml.stream.XMLStreamReader reader)
					throws java.lang.Exception {
				InsumoAcao object = new InsumoAcao();

				int event;
				java.lang.String nillableValue = null;
				java.lang.String prefix = "";
				java.lang.String namespaceuri = "";
				try {

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader
							.getAttributeValue(
									"http://www.w3.org/2001/XMLSchema-instance",
									"type") != null) {
						java.lang.String fullTypeName = reader
								.getAttributeValue(
										"http://www.w3.org/2001/XMLSchema-instance",
										"type");
						if (fullTypeName != null) {
							java.lang.String nsPrefix = null;
							if (fullTypeName.indexOf(":") > -1) {
								nsPrefix = fullTypeName.substring(0,
										fullTypeName.indexOf(":"));
							}
							nsPrefix = nsPrefix == null ? "" : nsPrefix;

							java.lang.String type = fullTypeName
									.substring(fullTypeName.indexOf(":") + 1);

							if (!"Insumo-Acao".equals(type)) {
								// find namespace for the prefix
								java.lang.String nsUri = reader
										.getNamespaceContext().getNamespaceURI(
												nsPrefix);
								return (InsumoAcao) ExtensionMapper
										.getTypeObject(nsUri, type, reader);
							}

						}

					}

					// Note all attributes that were handled. Used to differ
					// normal attributes
					// from anyAttributes.
					java.util.Vector handledAttributes = new java.util.Vector();

					// handle attribute "data-acao"
					java.lang.String tempAttribDataAcao =

					reader.getAttributeValue(null, "data-acao");

					if (tempAttribDataAcao != null) {
						java.lang.String content = tempAttribDataAcao;

						object.setDataAcao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataAcao));

					} else {

					}
					handledAttributes.add("data-acao");

					// handle attribute "data-inclusao"
					java.lang.String tempAttribDataInclusao =

					reader.getAttributeValue(null, "data-inclusao");

					if (tempAttribDataInclusao != null) {
						java.lang.String content = tempAttribDataInclusao;

						object.setDataInclusao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDateTime(tempAttribDataInclusao));

					} else {

					}
					handledAttributes.add("data-inclusao");

					// handle attribute "distrito"
					java.lang.String tempAttribDistrito =

					reader.getAttributeValue(null, "distrito");

					if (tempAttribDistrito != null) {
						java.lang.String content = tempAttribDistrito;

						object.setDistrito(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribDistrito));

					} else {

					}
					handledAttributes.add("distrito");

					// handle attribute "nome-autor"
					java.lang.String tempAttribNomeAutor =

					reader.getAttributeValue(null, "nome-autor");

					if (tempAttribNomeAutor != null) {
						java.lang.String content = tempAttribNomeAutor;

						object.setNomeAutor(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToString(tempAttribNomeAutor));

					} else {

					}
					handledAttributes.add("nome-autor");

					// handle attribute "valor-acao"
					java.lang.String tempAttribValorAcao =

					reader.getAttributeValue(null, "valor-acao");

					if (tempAttribValorAcao != null) {
						java.lang.String content = tempAttribValorAcao;

						object.setValorAcao(org.apache.axis2.databinding.utils.ConverterUtil
								.convertToDecimal(tempAttribValorAcao));

					} else {

					}
					handledAttributes.add("valor-acao");

					reader.next();

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "vara")
									.equals(reader.getName())) {

						object.setVara(Vara.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement()
							&& new javax.xml.namespace.QName("", "tipo-acao")
									.equals(reader.getName())) {

						object.setTipoAcao(TipoAcao.Factory.parse(reader));

						reader.next();

					} // End of if for expected property start element

					else {

					}

					while (!reader.isStartElement() && !reader.isEndElement())
						reader.next();

					if (reader.isStartElement())
						// A start element we are not expecting indicates a
						// trailing invalid property
						throw new org.apache.axis2.databinding.ADBException(
								"Unexpected subelement "
										+ reader.getLocalName());

				} catch (javax.xml.stream.XMLStreamException e) {
					throw new java.lang.Exception(e);
				}

				return object;
			}

		}// end of factory class

	}

	private org.apache.axiom.om.OMElement toOM(
			ConsultaWebServiceStub.CodigoProduto param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {
			return param
					.getOMElement(
							ConsultaWebServiceStub.CodigoProduto.MY_QNAME,
							org.apache.axiom.om.OMAbstractFactory
									.getOMFactory());
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	private org.apache.axiom.om.OMElement toOM(
			ConsultaWebServiceStub.ProdutoE param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {
			return param
					.getOMElement(
							ConsultaWebServiceStub.ProdutoE.MY_QNAME,
							org.apache.axiom.om.OMAbstractFactory
									.getOMFactory());
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	private org.apache.axiom.om.OMElement toOM(
			ConsultaWebServiceStub.Filtro param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {
			return param
					.getOMElement(
							ConsultaWebServiceStub.Filtro.MY_QNAME,
							org.apache.axiom.om.OMAbstractFactory
									.getOMFactory());
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	private org.apache.axiom.om.OMElement toOM(
			ConsultaWebServiceStub.Resultado param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {
			return param
					.getOMElement(
							ConsultaWebServiceStub.Resultado.MY_QNAME,
							org.apache.axiom.om.OMAbstractFactory
									.getOMFactory());
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	private org.apache.axiom.om.OMElement toOM(
			ConsultaWebServiceStub.Produtos param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {
			return param
					.getOMElement(
							ConsultaWebServiceStub.Produtos.MY_QNAME,
							org.apache.axiom.om.OMAbstractFactory
									.getOMFactory());
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	private org.apache.axiom.soap.SOAPEnvelope toEnvelope(
			org.apache.axiom.soap.SOAPFactory factory,
			ConsultaWebServiceStub.CodigoProduto param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {

			org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory
					.getDefaultEnvelope();
			emptyEnvelope
					.getBody()
					.addChild(
							param.getOMElement(
									ConsultaWebServiceStub.CodigoProduto.MY_QNAME,
									factory));
			return emptyEnvelope;
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	/* methods to provide back word compatibility */

	private org.apache.axiom.soap.SOAPEnvelope toEnvelope(
			org.apache.axiom.soap.SOAPFactory factory,
			ConsultaWebServiceStub.Filtro param,
			boolean optimizeContent) throws org.apache.axis2.AxisFault {

		try {

			org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory
					.getDefaultEnvelope();
			emptyEnvelope
					.getBody()
					.addChild(
							param.getOMElement(
									ConsultaWebServiceStub.Filtro.MY_QNAME,
									factory));
			return emptyEnvelope;
		} catch (org.apache.axis2.databinding.ADBException e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}

	}

	/* methods to provide back word compatibility */

	/**
	 * get the default envelope
	 */
	private org.apache.axiom.soap.SOAPEnvelope toEnvelope(
			org.apache.axiom.soap.SOAPFactory factory) {
		return factory.getDefaultEnvelope();
	}

	private java.lang.Object fromOM(org.apache.axiom.om.OMElement param,
			java.lang.Class type, java.util.Map extraNamespaces)
			throws org.apache.axis2.AxisFault {

		try {

			if (ConsultaWebServiceStub.CodigoProduto.class
					.equals(type)) {

				return ConsultaWebServiceStub.CodigoProduto.Factory
						.parse(param.getXMLStreamReaderWithoutCaching());

			}

			if (ConsultaWebServiceStub.ProdutoE.class
					.equals(type)) {

				return ConsultaWebServiceStub.ProdutoE.Factory
						.parse(param.getXMLStreamReaderWithoutCaching());

			}

			if (ConsultaWebServiceStub.Filtro.class
					.equals(type)) {

				return ConsultaWebServiceStub.Filtro.Factory
						.parse(param.getXMLStreamReaderWithoutCaching());

			}

			if (ConsultaWebServiceStub.Resultado.class
					.equals(type)) {

				return ConsultaWebServiceStub.Resultado.Factory
						.parse(param.getXMLStreamReaderWithoutCaching());

			}

			if (ConsultaWebServiceStub.Produtos.class
					.equals(type)) {

				return ConsultaWebServiceStub.Produtos.Factory
						.parse(param.getXMLStreamReaderWithoutCaching());

			}

		} catch (java.lang.Exception e) {
			throw org.apache.axis2.AxisFault.makeFault(e);
		}
		return null;
	}

}
